
./um:     file format elf64-x86-64


Disassembly of section .init:

0000000000400ad0 <_init>:
  400ad0:	f3 0f 1e fa          	endbr64 
  400ad4:	48 83 ec 08          	sub    $0x8,%rsp
  400ad8:	48 8b 05 09 65 20 00 	mov    0x206509(%rip),%rax        # 606fe8 <__gmon_start__@Base>
  400adf:	48 85 c0             	test   %rax,%rax
  400ae2:	74 02                	je     400ae6 <_init+0x16>
  400ae4:	ff d0                	callq  *%rax
  400ae6:	48 83 c4 08          	add    $0x8,%rsp
  400aea:	c3                   	retq   

Disassembly of section .plt:

0000000000400af0 <.plt>:
  400af0:	ff 35 12 65 20 00    	pushq  0x206512(%rip)        # 607008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400af6:	ff 25 14 65 20 00    	jmpq   *0x206514(%rip)        # 607010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400afc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b00 <free@plt>:
  400b00:	ff 25 12 65 20 00    	jmpq   *0x206512(%rip)        # 607018 <free@GLIBC_2.2.5>
  400b06:	68 00 00 00 00       	pushq  $0x0
  400b0b:	e9 e0 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b10 <abort@plt>:
  400b10:	ff 25 0a 65 20 00    	jmpq   *0x20650a(%rip)        # 607020 <abort@GLIBC_2.2.5>
  400b16:	68 01 00 00 00       	pushq  $0x1
  400b1b:	e9 d0 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b20 <fclose@plt>:
  400b20:	ff 25 02 65 20 00    	jmpq   *0x206502(%rip)        # 607028 <fclose@GLIBC_2.2.5>
  400b26:	68 02 00 00 00       	pushq  $0x2
  400b2b:	e9 c0 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b30 <strlen@plt>:
  400b30:	ff 25 fa 64 20 00    	jmpq   *0x2064fa(%rip)        # 607030 <strlen@GLIBC_2.2.5>
  400b36:	68 03 00 00 00       	pushq  $0x3
  400b3b:	e9 b0 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b40 <strchr@plt>:
  400b40:	ff 25 f2 64 20 00    	jmpq   *0x2064f2(%rip)        # 607038 <strchr@GLIBC_2.2.5>
  400b46:	68 04 00 00 00       	pushq  $0x4
  400b4b:	e9 a0 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b50 <printf@plt>:
  400b50:	ff 25 ea 64 20 00    	jmpq   *0x2064ea(%rip)        # 607040 <printf@GLIBC_2.2.5>
  400b56:	68 05 00 00 00       	pushq  $0x5
  400b5b:	e9 90 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b60 <_IO_putc@plt>:
  400b60:	ff 25 e2 64 20 00    	jmpq   *0x2064e2(%rip)        # 607048 <_IO_putc@GLIBC_2.2.5>
  400b66:	68 06 00 00 00       	pushq  $0x6
  400b6b:	e9 80 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b70 <memset@plt>:
  400b70:	ff 25 da 64 20 00    	jmpq   *0x2064da(%rip)        # 607050 <memset@GLIBC_2.2.5>
  400b76:	68 07 00 00 00       	pushq  $0x7
  400b7b:	e9 70 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b80 <_setjmp@plt>:
  400b80:	ff 25 d2 64 20 00    	jmpq   *0x2064d2(%rip)        # 607058 <_setjmp@GLIBC_2.2.5>
  400b86:	68 08 00 00 00       	pushq  $0x8
  400b8b:	e9 60 ff ff ff       	jmpq   400af0 <.plt>

0000000000400b90 <calloc@plt>:
  400b90:	ff 25 ca 64 20 00    	jmpq   *0x2064ca(%rip)        # 607060 <calloc@GLIBC_2.2.5>
  400b96:	68 09 00 00 00       	pushq  $0x9
  400b9b:	e9 50 ff ff ff       	jmpq   400af0 <.plt>

0000000000400ba0 <fprintf@plt>:
  400ba0:	ff 25 c2 64 20 00    	jmpq   *0x2064c2(%rip)        # 607068 <fprintf@GLIBC_2.2.5>
  400ba6:	68 0a 00 00 00       	pushq  $0xa
  400bab:	e9 40 ff ff ff       	jmpq   400af0 <.plt>

0000000000400bb0 <memcpy@plt>:
  400bb0:	ff 25 ba 64 20 00    	jmpq   *0x2064ba(%rip)        # 607070 <memcpy@GLIBC_2.14>
  400bb6:	68 0b 00 00 00       	pushq  $0xb
  400bbb:	e9 30 ff ff ff       	jmpq   400af0 <.plt>

0000000000400bc0 <malloc@plt>:
  400bc0:	ff 25 b2 64 20 00    	jmpq   *0x2064b2(%rip)        # 607078 <malloc@GLIBC_2.2.5>
  400bc6:	68 0c 00 00 00       	pushq  $0xc
  400bcb:	e9 20 ff ff ff       	jmpq   400af0 <.plt>

0000000000400bd0 <fflush@plt>:
  400bd0:	ff 25 aa 64 20 00    	jmpq   *0x2064aa(%rip)        # 607080 <fflush@GLIBC_2.2.5>
  400bd6:	68 0d 00 00 00       	pushq  $0xd
  400bdb:	e9 10 ff ff ff       	jmpq   400af0 <.plt>

0000000000400be0 <realloc@plt>:
  400be0:	ff 25 a2 64 20 00    	jmpq   *0x2064a2(%rip)        # 607088 <realloc@GLIBC_2.2.5>
  400be6:	68 0e 00 00 00       	pushq  $0xe
  400beb:	e9 00 ff ff ff       	jmpq   400af0 <.plt>

0000000000400bf0 <longjmp@plt>:
  400bf0:	ff 25 9a 64 20 00    	jmpq   *0x20649a(%rip)        # 607090 <longjmp@GLIBC_2.2.5>
  400bf6:	68 0f 00 00 00       	pushq  $0xf
  400bfb:	e9 f0 fe ff ff       	jmpq   400af0 <.plt>

0000000000400c00 <fopen@plt>:
  400c00:	ff 25 92 64 20 00    	jmpq   *0x206492(%rip)        # 607098 <fopen@GLIBC_2.2.5>
  400c06:	68 10 00 00 00       	pushq  $0x10
  400c0b:	e9 e0 fe ff ff       	jmpq   400af0 <.plt>

0000000000400c10 <sprintf@plt>:
  400c10:	ff 25 8a 64 20 00    	jmpq   *0x20648a(%rip)        # 6070a0 <sprintf@GLIBC_2.2.5>
  400c16:	68 11 00 00 00       	pushq  $0x11
  400c1b:	e9 d0 fe ff ff       	jmpq   400af0 <.plt>

0000000000400c20 <fwrite@plt>:
  400c20:	ff 25 82 64 20 00    	jmpq   *0x206482(%rip)        # 6070a8 <fwrite@GLIBC_2.2.5>
  400c26:	68 12 00 00 00       	pushq  $0x12
  400c2b:	e9 c0 fe ff ff       	jmpq   400af0 <.plt>

0000000000400c30 <getc@plt>:
  400c30:	ff 25 7a 64 20 00    	jmpq   *0x20647a(%rip)        # 6070b0 <getc@GLIBC_2.2.5>
  400c36:	68 13 00 00 00       	pushq  $0x13
  400c3b:	e9 b0 fe ff ff       	jmpq   400af0 <.plt>

0000000000400c40 <__ctype_b_loc@plt>:
  400c40:	ff 25 72 64 20 00    	jmpq   *0x206472(%rip)        # 6070b8 <__ctype_b_loc@GLIBC_2.3>
  400c46:	68 14 00 00 00       	pushq  $0x14
  400c4b:	e9 a0 fe ff ff       	jmpq   400af0 <.plt>

Disassembly of section .text:

0000000000400c50 <main>:
  400c50:	41 57                	push   %r15
  400c52:	41 56                	push   %r14
  400c54:	41 55                	push   %r13
  400c56:	41 54                	push   %r12
  400c58:	55                   	push   %rbp
  400c59:	53                   	push   %rbx
  400c5a:	48 83 ec 58          	sub    $0x58,%rsp
  400c5e:	83 ff 02             	cmp    $0x2,%edi
  400c61:	0f 85 c6 06 00 00    	jne    40132d <main+0x6dd>
  400c67:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400c6b:	be 3b 57 40 00       	mov    $0x40573b,%esi
  400c70:	e8 8b ff ff ff       	callq  400c00 <fopen@plt>
  400c75:	48 89 c5             	mov    %rax,%rbp
  400c78:	48 85 c0             	test   %rax,%rax
  400c7b:	0f 84 d6 09 00 00    	je     401657 <main+0xa07>
  400c81:	bf 10 27 00 00       	mov    $0x2710,%edi
  400c86:	e8 c5 11 00 00       	callq  401e50 <Seq_new>
  400c8b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  400c90:	48 85 c0             	test   %rax,%rax
  400c93:	0f 84 41 09 00 00    	je     4015da <main+0x98a>
  400c99:	48 89 ef             	mov    %rbp,%rdi
  400c9c:	e8 8f ff ff ff       	callq  400c30 <getc@plt>
  400ca1:	89 c3                	mov    %eax,%ebx
  400ca3:	83 f8 ff             	cmp    $0xffffffff,%eax
  400ca6:	0f 84 ac 00 00 00    	je     400d58 <main+0x108>
  400cac:	0f 1f 40 00          	nopl   0x0(%rax)
  400cb0:	bf 04 00 00 00       	mov    $0x4,%edi
  400cb5:	e8 06 ff ff ff       	callq  400bc0 <malloc@plt>
  400cba:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  400cc0:	49 89 c4             	mov    %rax,%r12
  400cc3:	b8 03 00 00 00       	mov    $0x3,%eax
  400cc8:	44 8d 34 c5 00 00 00 	lea    0x0(,%rax,8),%r14d
  400ccf:	00 
  400cd0:	44 8d 68 ff          	lea    -0x1(%rax),%r13d
  400cd4:	83 f8 03             	cmp    $0x3,%eax
  400cd7:	74 37                	je     400d10 <main+0xc0>
  400cd9:	48 89 ef             	mov    %rbp,%rdi
  400cdc:	e8 4f ff ff ff       	callq  400c30 <getc@plt>
  400ce1:	89 c3                	mov    %eax,%ebx
  400ce3:	83 f8 ff             	cmp    $0xffffffff,%eax
  400ce6:	0f 84 d4 01 00 00    	je     400ec0 <main+0x270>
  400cec:	41 8b 3c 24          	mov    (%r12),%edi
  400cf0:	89 d9                	mov    %ebx,%ecx
  400cf2:	44 89 f2             	mov    %r14d,%edx
  400cf5:	be 08 00 00 00       	mov    $0x8,%esi
  400cfa:	e8 d1 1c 00 00       	callq  4029d0 <Bitpack_newu>
  400cff:	41 89 04 24          	mov    %eax,(%r12)
  400d03:	41 83 fd ff          	cmp    $0xffffffff,%r13d
  400d07:	74 2f                	je     400d38 <main+0xe8>
  400d09:	44 89 e8             	mov    %r13d,%eax
  400d0c:	eb ba                	jmp    400cc8 <main+0x78>
  400d0e:	66 90                	xchg   %ax,%ax
  400d10:	89 d9                	mov    %ebx,%ecx
  400d12:	83 fb ff             	cmp    $0xffffffff,%ebx
  400d15:	0f 84 a5 01 00 00    	je     400ec0 <main+0x270>
  400d1b:	41 8b 3c 24          	mov    (%r12),%edi
  400d1f:	44 89 f2             	mov    %r14d,%edx
  400d22:	be 08 00 00 00       	mov    $0x8,%esi
  400d27:	e8 a4 1c 00 00       	callq  4029d0 <Bitpack_newu>
  400d2c:	41 89 04 24          	mov    %eax,(%r12)
  400d30:	eb d7                	jmp    400d09 <main+0xb9>
  400d32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400d38:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  400d3d:	4c 89 e6             	mov    %r12,%rsi
  400d40:	e8 5b 14 00 00       	callq  4021a0 <Seq_addhi>
  400d45:	48 89 ef             	mov    %rbp,%rdi
  400d48:	e8 e3 fe ff ff       	callq  400c30 <getc@plt>
  400d4d:	89 c3                	mov    %eax,%ebx
  400d4f:	83 f8 ff             	cmp    $0xffffffff,%eax
  400d52:	0f 85 58 ff ff ff    	jne    400cb0 <main+0x60>
  400d58:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  400d5d:	e8 ee 11 00 00       	callq  401f50 <Seq_length>
  400d62:	ba 87 00 00 00       	mov    $0x87,%edx
  400d67:	be 3d 57 40 00       	mov    $0x40573d,%esi
  400d6c:	bf 10 00 00 00       	mov    $0x10,%edi
  400d71:	41 89 c6             	mov    %eax,%r14d
  400d74:	e8 b7 0d 00 00       	callq  401b30 <Mem_alloc>
  400d79:	49 89 c4             	mov    %rax,%r12
  400d7c:	48 85 c0             	test   %rax,%rax
  400d7f:	0f 84 6e 08 00 00    	je     4015f3 <main+0x9a3>
  400d85:	45 89 34 24          	mov    %r14d,(%r12)
  400d89:	4d 63 ee             	movslq %r14d,%r13
  400d8c:	31 db                	xor    %ebx,%ebx
  400d8e:	49 c1 e5 02          	shl    $0x2,%r13
  400d92:	4c 89 ef             	mov    %r13,%rdi
  400d95:	e8 26 fe ff ff       	callq  400bc0 <malloc@plt>
  400d9a:	49 89 44 24 08       	mov    %rax,0x8(%r12)
  400d9f:	45 85 f6             	test   %r14d,%r14d
  400da2:	7e 29                	jle    400dcd <main+0x17d>
  400da4:	0f 1f 40 00          	nopl   0x0(%rax)
  400da8:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  400dad:	e8 5e 13 00 00       	callq  402110 <Seq_remlo>
  400db2:	8b 10                	mov    (%rax),%edx
  400db4:	48 89 c7             	mov    %rax,%rdi
  400db7:	49 8b 44 24 08       	mov    0x8(%r12),%rax
  400dbc:	89 14 18             	mov    %edx,(%rax,%rbx,1)
  400dbf:	48 83 c3 04          	add    $0x4,%rbx
  400dc3:	e8 38 fd ff ff       	callq  400b00 <free@plt>
  400dc8:	49 39 dd             	cmp    %rbx,%r13
  400dcb:	75 db                	jne    400da8 <main+0x158>
  400dcd:	bf 10 27 00 00       	mov    $0x2710,%edi
  400dd2:	e8 79 10 00 00       	callq  401e50 <Seq_new>
  400dd7:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
  400ddc:	48 85 c0             	test   %rax,%rax
  400ddf:	0f 84 27 08 00 00    	je     40160c <main+0x9bc>
  400de5:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
  400dea:	4c 89 e6             	mov    %r12,%rsi
  400ded:	e8 ae 13 00 00       	callq  4021a0 <Seq_addhi>
  400df2:	bf 10 27 00 00       	mov    $0x2710,%edi
  400df7:	e8 54 10 00 00       	callq  401e50 <Seq_new>
  400dfc:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  400e01:	48 85 c0             	test   %rax,%rax
  400e04:	0f 84 1b 08 00 00    	je     401625 <main+0x9d5>
  400e0a:	be 01 00 00 00       	mov    $0x1,%esi
  400e0f:	bf 20 00 00 00       	mov    $0x20,%edi
  400e14:	e8 77 fd ff ff       	callq  400b90 <calloc@plt>
  400e19:	49 89 c4             	mov    %rax,%r12
  400e1c:	48 85 c0             	test   %rax,%rax
  400e1f:	0f 84 85 0a 00 00    	je     4018aa <main+0xc5a>
  400e25:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
  400e2a:	48 8b 5c 24 40       	mov    0x40(%rsp),%rbx
  400e2f:	48 89 04 24          	mov    %rax,(%rsp)
  400e33:	48 85 db             	test   %rbx,%rbx
  400e36:	0f 84 02 08 00 00    	je     40163e <main+0x9ee>
  400e3c:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
  400e41:	0f 84 7a 07 00 00    	je     4015c1 <main+0x971>
  400e47:	48 89 df             	mov    %rbx,%rdi
  400e4a:	e8 01 11 00 00       	callq  401f50 <Seq_length>
  400e4f:	85 c0                	test   %eax,%eax
  400e51:	0f 8e 51 05 00 00    	jle    4013a8 <main+0x758>
  400e57:	31 f6                	xor    %esi,%esi
  400e59:	48 89 df             	mov    %rbx,%rdi
  400e5c:	45 31 ff             	xor    %r15d,%r15d
  400e5f:	e8 1c 11 00 00       	callq  401f80 <Seq_get>
  400e64:	c6 44 24 0f 00       	movb   $0x0,0xf(%rsp)
  400e69:	44 8b 28             	mov    (%rax),%r13d
  400e6c:	4c 8b 70 08          	mov    0x8(%rax),%r14
  400e70:	45 85 ed             	test   %r13d,%r13d
  400e73:	0f 84 82 04 00 00    	je     4012fb <main+0x6ab>
  400e79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400e80:	44 89 f8             	mov    %r15d,%eax
  400e83:	41 8b 04 86          	mov    (%r14,%rax,4),%eax
  400e87:	89 c2                	mov    %eax,%edx
  400e89:	c1 ea 1c             	shr    $0x1c,%edx
  400e8c:	83 fa 0d             	cmp    $0xd,%edx
  400e8f:	74 4f                	je     400ee0 <main+0x290>
  400e91:	41 89 c2             	mov    %eax,%r10d
  400e94:	41 89 c0             	mov    %eax,%r8d
  400e97:	c1 e8 06             	shr    $0x6,%eax
  400e9a:	83 e0 07             	and    $0x7,%eax
  400e9d:	41 c1 e8 03          	shr    $0x3,%r8d
  400ea1:	41 83 e2 07          	and    $0x7,%r10d
  400ea5:	89 c1                	mov    %eax,%ecx
  400ea7:	41 83 e0 07          	and    $0x7,%r8d
  400eab:	89 ce                	mov    %ecx,%esi
  400ead:	83 fa 0d             	cmp    $0xd,%edx
  400eb0:	0f 87 5e 04 00 00    	ja     401314 <main+0x6c4>
  400eb6:	ff 24 d5 e8 57 40 00 	jmpq   *0x4057e8(,%rdx,8)
  400ebd:	0f 1f 00             	nopl   (%rax)
  400ec0:	ba 79 00 00 00       	mov    $0x79,%edx
  400ec5:	be 3d 57 40 00       	mov    $0x40573d,%esi
  400eca:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  400ecf:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
  400ed4:	e8 17 0b 00 00       	callq  4019f0 <Except_raise>
  400ed9:	e9 0e fe ff ff       	jmpq   400cec <main+0x9c>
  400ede:	66 90                	xchg   %ax,%ax
  400ee0:	89 c6                	mov    %eax,%esi
  400ee2:	25 ff ff ff 01       	and    $0x1ffffff,%eax
  400ee7:	c1 ee 19             	shr    $0x19,%esi
  400eea:	83 e6 07             	and    $0x7,%esi
  400eed:	48 63 f6             	movslq %esi,%rsi
  400ef0:	41 89 04 b4          	mov    %eax,(%r12,%rsi,4)
  400ef4:	0f 1f 40 00          	nopl   0x0(%rax)
  400ef8:	41 83 c7 01          	add    $0x1,%r15d
  400efc:	45 39 ef             	cmp    %r13d,%r15d
  400eff:	0f 82 7b ff ff ff    	jb     400e80 <main+0x230>
  400f05:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%rsp)
  400f0a:	0f 84 eb 03 00 00    	je     4012fb <main+0x6ab>
  400f10:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
  400f15:	31 db                	xor    %ebx,%ebx
  400f17:	e8 34 10 00 00       	callq  401f50 <Seq_length>
  400f1c:	41 89 c6             	mov    %eax,%r14d
  400f1f:	85 c0                	test   %eax,%eax
  400f21:	7f 1f                	jg     400f42 <main+0x2f2>
  400f23:	eb 3b                	jmp    400f60 <main+0x310>
  400f25:	0f 1f 00             	nopl   (%rax)
  400f28:	ba b5 00 00 00       	mov    $0xb5,%edx
  400f2d:	be 3d 57 40 00       	mov    $0x40573d,%esi
  400f32:	4c 89 ef             	mov    %r13,%rdi
  400f35:	83 c3 01             	add    $0x1,%ebx
  400f38:	e8 a3 0d 00 00       	callq  401ce0 <Mem_free>
  400f3d:	41 39 de             	cmp    %ebx,%r14d
  400f40:	74 1e                	je     400f60 <main+0x310>
  400f42:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
  400f47:	e8 c4 11 00 00       	callq  402110 <Seq_remlo>
  400f4c:	49 89 c5             	mov    %rax,%r13
  400f4f:	8b 00                	mov    (%rax),%eax
  400f51:	85 c0                	test   %eax,%eax
  400f53:	74 d3                	je     400f28 <main+0x2d8>
  400f55:	49 8b 7d 08          	mov    0x8(%r13),%rdi
  400f59:	e8 a2 fb ff ff       	callq  400b00 <free@plt>
  400f5e:	eb c8                	jmp    400f28 <main+0x2d8>
  400f60:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
  400f65:	e8 96 0f 00 00       	callq  401f00 <Seq_free>
  400f6a:	4c 89 e7             	mov    %r12,%rdi
  400f6d:	e8 8e fb ff ff       	callq  400b00 <free@plt>
  400f72:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
  400f77:	e8 84 0f 00 00       	callq  401f00 <Seq_free>
  400f7c:	48 8d 7c 24 48       	lea    0x48(%rsp),%rdi
  400f81:	e8 7a 0f 00 00       	callq  401f00 <Seq_free>
  400f86:	48 89 ef             	mov    %rbp,%rdi
  400f89:	e8 92 fb ff ff       	callq  400b20 <fclose@plt>
  400f8e:	31 c0                	xor    %eax,%eax
  400f90:	48 83 c4 58          	add    $0x58,%rsp
  400f94:	5b                   	pop    %rbx
  400f95:	5d                   	pop    %rbp
  400f96:	41 5c                	pop    %r12
  400f98:	41 5d                	pop    %r13
  400f9a:	41 5e                	pop    %r14
  400f9c:	41 5f                	pop    %r15
  400f9e:	c3                   	retq   
  400f9f:	48 85 db             	test   %rbx,%rbx
  400fa2:	0f 84 78 07 00 00    	je     401720 <main+0xad0>
  400fa8:	47 8b 34 84          	mov    (%r12,%r8,4),%r14d
  400fac:	45 85 f6             	test   %r14d,%r14d
  400faf:	0f 85 19 04 00 00    	jne    4013ce <main+0x77e>
  400fb5:	47 8b 0c 94          	mov    (%r12,%r10,4),%r9d
  400fb9:	31 f6                	xor    %esi,%esi
  400fbb:	48 89 df             	mov    %rbx,%rdi
  400fbe:	45 8d 79 ff          	lea    -0x1(%r9),%r15d
  400fc2:	e8 b9 0f 00 00       	callq  401f80 <Seq_get>
  400fc7:	4c 8b 70 08          	mov    0x8(%rax),%r14
  400fcb:	44 8b 28             	mov    (%rax),%r13d
  400fce:	e9 25 ff ff ff       	jmpq   400ef8 <main+0x2a8>
  400fd3:	48 8b 3d 66 69 20 00 	mov    0x206966(%rip),%rdi        # 607940 <stdin@@GLIBC_2.2.5>
  400fda:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  400fdf:	e8 4c fc ff ff       	callq  400c30 <getc@plt>
  400fe4:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  400fe9:	83 f8 ff             	cmp    $0xffffffff,%eax
  400fec:	0f 84 cf 03 00 00    	je     4013c1 <main+0x771>
  400ff2:	3d ff 00 00 00       	cmp    $0xff,%eax
  400ff7:	0f 87 92 03 00 00    	ja     40138f <main+0x73f>
  400ffd:	43 89 04 94          	mov    %eax,(%r12,%r10,4)
  401001:	e9 f2 fe ff ff       	jmpq   400ef8 <main+0x2a8>
  401006:	47 8b 04 94          	mov    (%r12,%r10,4),%r8d
  40100a:	41 81 f8 ff 00 00 00 	cmp    $0xff,%r8d
  401011:	0f 87 66 04 00 00    	ja     40147d <main+0x82d>
  401017:	44 89 c6             	mov    %r8d,%esi
  40101a:	bf 48 57 40 00       	mov    $0x405748,%edi
  40101f:	31 c0                	xor    %eax,%eax
  401021:	e8 2a fb ff ff       	callq  400b50 <printf@plt>
  401026:	e9 cd fe ff ff       	jmpq   400ef8 <main+0x2a8>
  40102b:	48 85 db             	test   %rbx,%rbx
  40102e:	0f 84 c9 06 00 00    	je     4016fd <main+0xaad>
  401034:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
  401039:	0f 84 95 07 00 00    	je     4017d4 <main+0xb84>
  40103f:	43 8b 34 94          	mov    (%r12,%r10,4),%esi
  401043:	48 8b 3c 24          	mov    (%rsp),%rdi
  401047:	89 74 24 10          	mov    %esi,0x10(%rsp)
  40104b:	e8 80 12 00 00       	callq  4022d0 <Seq_addlo>
  401050:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  401055:	45 85 c0             	test   %r8d,%r8d
  401058:	0f 84 95 04 00 00    	je     4014f3 <main+0x8a3>
  40105e:	48 89 df             	mov    %rbx,%rdi
  401061:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
  401066:	e8 e5 0e 00 00       	callq  401f50 <Seq_length>
  40106b:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  401070:	41 39 c0             	cmp    %eax,%r8d
  401073:	0f 83 5c 04 00 00    	jae    4014d5 <main+0x885>
  401079:	44 89 c6             	mov    %r8d,%esi
  40107c:	48 89 df             	mov    %rbx,%rdi
  40107f:	e8 fc 0e 00 00       	callq  401f80 <Seq_get>
  401084:	4c 8b 40 08          	mov    0x8(%rax),%r8
  401088:	4d 85 c0             	test   %r8,%r8
  40108b:	0f 84 16 07 00 00    	je     4017a7 <main+0xb57>
  401091:	4c 89 c7             	mov    %r8,%rdi
  401094:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  401099:	e8 62 fa ff ff       	callq  400b00 <free@plt>
  40109e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  4010a3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  4010a9:	e9 4a fe ff ff       	jmpq   400ef8 <main+0x2a8>
  4010ae:	48 85 db             	test   %rbx,%rbx
  4010b1:	0f 84 c3 06 00 00    	je     40177a <main+0xb2a>
  4010b7:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
  4010bc:	0f 84 8b 06 00 00    	je     40174d <main+0xafd>
  4010c2:	4b 63 3c 94          	movslq (%r12,%r10,4),%rdi
  4010c6:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  4010cb:	89 7c 24 10          	mov    %edi,0x10(%rsp)
  4010cf:	48 c1 e7 02          	shl    $0x2,%rdi
  4010d3:	e8 e8 fa ff ff       	callq  400bc0 <malloc@plt>
  4010d8:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  4010dd:	48 85 c0             	test   %rax,%rax
  4010e0:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4010e5:	0f 84 a1 07 00 00    	je     40188c <main+0xc3c>
  4010eb:	83 7c 24 10 00       	cmpl   $0x0,0x10(%rsp)
  4010f0:	7e 1e                	jle    401110 <main+0x4c0>
  4010f2:	8b 54 24 10          	mov    0x10(%rsp),%edx
  4010f6:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  4010fb:	31 f6                	xor    %esi,%esi
  4010fd:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  401102:	48 c1 e2 02          	shl    $0x2,%rdx
  401106:	e8 65 fa ff ff       	callq  400b70 <memset@plt>
  40110b:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  401110:	48 8b 3c 24          	mov    (%rsp),%rdi
  401114:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  401119:	e8 32 0e 00 00       	callq  401f50 <Seq_length>
  40111e:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  401123:	85 c0                	test   %eax,%eax
  401125:	0f 85 27 02 00 00    	jne    401352 <main+0x702>
  40112b:	ba da 01 00 00       	mov    $0x1da,%edx
  401130:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401135:	bf 10 00 00 00       	mov    $0x10,%edi
  40113a:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  40113f:	e8 ec 09 00 00       	callq  401b30 <Mem_alloc>
  401144:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  401149:	48 85 c0             	test   %rax,%rax
  40114c:	49 89 c2             	mov    %rax,%r10
  40114f:	0f 84 f1 06 00 00    	je     401846 <main+0xbf6>
  401155:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40115a:	4c 89 d6             	mov    %r10,%rsi
  40115d:	48 89 df             	mov    %rbx,%rdi
  401160:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  401165:	49 89 42 08          	mov    %rax,0x8(%r10)
  401169:	8b 44 24 10          	mov    0x10(%rsp),%eax
  40116d:	41 89 02             	mov    %eax,(%r10)
  401170:	e8 2b 10 00 00       	callq  4021a0 <Seq_addhi>
  401175:	48 89 df             	mov    %rbx,%rdi
  401178:	e8 d3 0d 00 00       	callq  401f50 <Seq_length>
  40117d:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  401182:	8d 50 ff             	lea    -0x1(%rax),%edx
  401185:	e9 fc 01 00 00       	jmpq   401386 <main+0x736>
  40118a:	c6 44 24 0f 01       	movb   $0x1,0xf(%rsp)
  40118f:	45 89 ef             	mov    %r13d,%r15d
  401192:	e9 61 fd ff ff       	jmpq   400ef8 <main+0x2a8>
  401197:	43 8b 04 84          	mov    (%r12,%r8,4),%eax
  40119b:	43 23 04 94          	and    (%r12,%r10,4),%eax
  40119f:	f7 d0                	not    %eax
  4011a1:	41 89 04 8c          	mov    %eax,(%r12,%rcx,4)
  4011a5:	e9 4e fd ff ff       	jmpq   400ef8 <main+0x2a8>
  4011aa:	47 8b 14 94          	mov    (%r12,%r10,4),%r10d
  4011ae:	45 85 d2             	test   %r10d,%r10d
  4011b1:	0f 84 e9 02 00 00    	je     4014a0 <main+0x850>
  4011b7:	43 8b 04 84          	mov    (%r12,%r8,4),%eax
  4011bb:	31 d2                	xor    %edx,%edx
  4011bd:	41 f7 f2             	div    %r10d
  4011c0:	41 89 04 8c          	mov    %eax,(%r12,%rcx,4)
  4011c4:	e9 2f fd ff ff       	jmpq   400ef8 <main+0x2a8>
  4011c9:	43 8b 04 84          	mov    (%r12,%r8,4),%eax
  4011cd:	43 0f af 04 94       	imul   (%r12,%r10,4),%eax
  4011d2:	41 89 04 8c          	mov    %eax,(%r12,%rcx,4)
  4011d6:	e9 1d fd ff ff       	jmpq   400ef8 <main+0x2a8>
  4011db:	43 8b 04 94          	mov    (%r12,%r10,4),%eax
  4011df:	43 03 04 84          	add    (%r12,%r8,4),%eax
  4011e3:	41 89 04 8c          	mov    %eax,(%r12,%rcx,4)
  4011e7:	e9 0c fd ff ff       	jmpq   400ef8 <main+0x2a8>
  4011ec:	48 85 db             	test   %rbx,%rbx
  4011ef:	0f 84 6c 04 00 00    	je     401661 <main+0xa11>
  4011f5:	45 8b 1c 8c          	mov    (%r12,%rcx,4),%r11d
  4011f9:	43 8b 04 84          	mov    (%r12,%r8,4),%eax
  4011fd:	48 89 df             	mov    %rbx,%rdi
  401200:	44 89 54 24 20       	mov    %r10d,0x20(%rsp)
  401205:	44 89 5c 24 18       	mov    %r11d,0x18(%rsp)
  40120a:	89 44 24 10          	mov    %eax,0x10(%rsp)
  40120e:	e8 3d 0d 00 00       	callq  401f50 <Seq_length>
  401213:	44 8b 5c 24 18       	mov    0x18(%rsp),%r11d
  401218:	44 8b 54 24 20       	mov    0x20(%rsp),%r10d
  40121d:	41 39 c3             	cmp    %eax,%r11d
  401220:	0f 83 16 03 00 00    	jae    40153c <main+0x8ec>
  401226:	44 89 de             	mov    %r11d,%esi
  401229:	48 89 df             	mov    %rbx,%rdi
  40122c:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
  401231:	e8 4a 0d 00 00       	callq  401f80 <Seq_get>
  401236:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  40123b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40123f:	48 85 c9             	test   %rcx,%rcx
  401242:	0f 84 83 04 00 00    	je     4016cb <main+0xa7b>
  401248:	8b 74 24 10          	mov    0x10(%rsp),%esi
  40124c:	3b 30                	cmp    (%rax),%esi
  40124e:	0f 8d 40 03 00 00    	jge    401594 <main+0x944>
  401254:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
  401259:	43 8b 14 94          	mov    (%r12,%r10,4),%edx
  40125d:	89 14 81             	mov    %edx,(%rcx,%rax,4)
  401260:	e9 93 fc ff ff       	jmpq   400ef8 <main+0x2a8>
  401265:	48 85 db             	test   %rbx,%rbx
  401268:	0f 84 28 04 00 00    	je     401696 <main+0xa46>
  40126e:	47 8b 04 84          	mov    (%r12,%r8,4),%r8d
  401272:	43 8b 04 94          	mov    (%r12,%r10,4),%eax
  401276:	48 89 df             	mov    %rbx,%rdi
  401279:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
  40127d:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
  401282:	89 44 24 10          	mov    %eax,0x10(%rsp)
  401286:	e8 c5 0c 00 00       	callq  401f50 <Seq_length>
  40128b:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
  401290:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
  401294:	41 39 c0             	cmp    %eax,%r8d
  401297:	0f 83 cc 02 00 00    	jae    401569 <main+0x919>
  40129d:	44 89 c6             	mov    %r8d,%esi
  4012a0:	48 89 df             	mov    %rbx,%rdi
  4012a3:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
  4012a7:	e8 d4 0c 00 00       	callq  401f80 <Seq_get>
  4012ac:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  4012b0:	4c 8b 40 08          	mov    0x8(%rax),%r8
  4012b4:	4d 85 c0             	test   %r8,%r8
  4012b7:	0f 84 3a 05 00 00    	je     4017f7 <main+0xba7>
  4012bd:	8b 74 24 10          	mov    0x10(%rsp),%esi
  4012c1:	3b 30                	cmp    (%rax),%esi
  4012c3:	0f 8d 48 02 00 00    	jge    401511 <main+0x8c1>
  4012c9:	48 63 44 24 10       	movslq 0x10(%rsp),%rax
  4012ce:	41 8b 04 80          	mov    (%r8,%rax,4),%eax
  4012d2:	41 89 04 8c          	mov    %eax,(%r12,%rcx,4)
  4012d6:	e9 1d fc ff ff       	jmpq   400ef8 <main+0x2a8>
  4012db:	43 83 3c 94 00       	cmpl   $0x0,(%r12,%r10,4)
  4012e0:	0f 84 12 fc ff ff    	je     400ef8 <main+0x2a8>
  4012e6:	43 8b 04 84          	mov    (%r12,%r8,4),%eax
  4012ea:	41 89 04 8c          	mov    %eax,(%r12,%rcx,4)
  4012ee:	e9 05 fc ff ff       	jmpq   400ef8 <main+0x2a8>
  4012f3:	83 c8 ff             	or     $0xffffffff,%eax
  4012f6:	e9 f2 fb ff ff       	jmpq   400eed <main+0x29d>
  4012fb:	ba 39 01 00 00       	mov    $0x139,%edx
  401300:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401305:	bf f8 70 60 00       	mov    $0x6070f8,%edi
  40130a:	e8 e1 06 00 00       	callq  4019f0 <Except_raise>
  40130f:	e9 fc fb ff ff       	jmpq   400f10 <main+0x2c0>
  401314:	ba 33 01 00 00       	mov    $0x133,%edx
  401319:	be 3d 57 40 00       	mov    $0x40573d,%esi
  40131e:	bf 00 71 60 00       	mov    $0x607100,%edi
  401323:	e8 c8 06 00 00       	callq  4019f0 <Except_raise>
  401328:	e9 cb fb ff ff       	jmpq   400ef8 <main+0x2a8>
  40132d:	ba 1f 00 00 00       	mov    $0x1f,%edx
  401332:	be 01 00 00 00       	mov    $0x1,%esi
  401337:	bf f0 56 40 00       	mov    $0x4056f0,%edi
  40133c:	48 8b 0d 1d 66 20 00 	mov    0x20661d(%rip),%rcx        # 607960 <stderr@@GLIBC_2.2.5>
  401343:	e8 d8 f8 ff ff       	callq  400c20 <fwrite@plt>
  401348:	b8 01 00 00 00       	mov    $0x1,%eax
  40134d:	e9 3e fc ff ff       	jmpq   400f90 <main+0x340>
  401352:	48 8b 3c 24          	mov    (%rsp),%rdi
  401356:	44 89 44 24 28       	mov    %r8d,0x28(%rsp)
  40135b:	e8 b0 0d 00 00       	callq  402110 <Seq_remlo>
  401360:	48 89 df             	mov    %rbx,%rdi
  401363:	89 c6                	mov    %eax,%esi
  401365:	89 44 24 20          	mov    %eax,0x20(%rsp)
  401369:	e8 12 0c 00 00       	callq  401f80 <Seq_get>
  40136e:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
  401373:	44 8b 44 24 28       	mov    0x28(%rsp),%r8d
  401378:	8b 54 24 20          	mov    0x20(%rsp),%edx
  40137c:	48 89 70 08          	mov    %rsi,0x8(%rax)
  401380:	8b 74 24 10          	mov    0x10(%rsp),%esi
  401384:	89 30                	mov    %esi,(%rax)
  401386:	43 89 14 84          	mov    %edx,(%r12,%r8,4)
  40138a:	e9 69 fb ff ff       	jmpq   400ef8 <main+0x2a8>
  40138f:	ba 38 02 00 00       	mov    $0x238,%edx
  401394:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401399:	bf f0 70 60 00       	mov    $0x6070f0,%edi
  40139e:	e8 4d 06 00 00       	callq  4019f0 <Except_raise>
  4013a3:	e9 50 fb ff ff       	jmpq   400ef8 <main+0x2a8>
  4013a8:	ba c6 00 00 00       	mov    $0xc6,%edx
  4013ad:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4013b2:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  4013b7:	e8 34 06 00 00       	callq  4019f0 <Except_raise>
  4013bc:	e9 96 fa ff ff       	jmpq   400e57 <main+0x207>
  4013c1:	43 c7 04 94 ff ff ff 	movl   $0xffffffff,(%r12,%r10,4)
  4013c8:	ff 
  4013c9:	e9 2a fb ff ff       	jmpq   400ef8 <main+0x2a8>
  4013ce:	31 f6                	xor    %esi,%esi
  4013d0:	48 89 df             	mov    %rbx,%rdi
  4013d3:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  4013d8:	e8 a3 0b 00 00       	callq  401f80 <Seq_get>
  4013dd:	48 8b 78 08          	mov    0x8(%rax),%rdi
  4013e1:	49 89 c5             	mov    %rax,%r13
  4013e4:	e8 17 f7 ff ff       	callq  400b00 <free@plt>
  4013e9:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
  4013f0:	00 
  4013f1:	48 89 df             	mov    %rbx,%rdi
  4013f4:	e8 57 0b 00 00       	callq  401f50 <Seq_length>
  4013f9:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  4013fe:	41 39 c6             	cmp    %eax,%r14d
  401401:	0f 83 21 04 00 00    	jae    401828 <main+0xbd8>
  401407:	44 89 f6             	mov    %r14d,%esi
  40140a:	48 89 df             	mov    %rbx,%rdi
  40140d:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  401412:	e8 69 0b 00 00       	callq  401f80 <Seq_get>
  401417:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  40141c:	4c 8b 70 08          	mov    0x8(%rax),%r14
  401420:	49 89 c7             	mov    %rax,%r15
  401423:	4d 85 f6             	test   %r14,%r14
  401426:	0f 84 42 04 00 00    	je     40186e <main+0xc1e>
  40142c:	49 63 37             	movslq (%r15),%rsi
  40142f:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
  401434:	49 89 f7             	mov    %rsi,%r15
  401437:	48 8d 3c b5 00 00 00 	lea    0x0(,%rsi,4),%rdi
  40143e:	00 
  40143f:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
  401444:	e8 77 f7 ff ff       	callq  400bc0 <malloc@plt>
  401449:	31 d2                	xor    %edx,%edx
  40144b:	45 85 ff             	test   %r15d,%r15d
  40144e:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
  401453:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  401458:	7e 16                	jle    401470 <main+0x820>
  40145a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401460:	41 8b 0c 96          	mov    (%r14,%rdx,4),%ecx
  401464:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
  401467:	48 83 c2 01          	add    $0x1,%rdx
  40146b:	48 39 f2             	cmp    %rsi,%rdx
  40146e:	75 f0                	jne    401460 <main+0x810>
  401470:	49 89 45 08          	mov    %rax,0x8(%r13)
  401474:	45 89 7d 00          	mov    %r15d,0x0(%r13)
  401478:	e9 38 fb ff ff       	jmpq   400fb5 <main+0x365>
  40147d:	ba 1f 02 00 00       	mov    $0x21f,%edx
  401482:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401487:	bf f0 70 60 00       	mov    $0x6070f0,%edi
  40148c:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
  401491:	e8 5a 05 00 00       	callq  4019f0 <Except_raise>
  401496:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  40149b:	e9 77 fb ff ff       	jmpq   401017 <main+0x3c7>
  4014a0:	ba ae 01 00 00       	mov    $0x1ae,%edx
  4014a5:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4014aa:	bf e8 70 60 00       	mov    $0x6070e8,%edi
  4014af:	44 89 54 24 20       	mov    %r10d,0x20(%rsp)
  4014b4:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
  4014b8:	44 89 44 24 10       	mov    %r8d,0x10(%rsp)
  4014bd:	e8 2e 05 00 00       	callq  4019f0 <Except_raise>
  4014c2:	44 8b 54 24 20       	mov    0x20(%rsp),%r10d
  4014c7:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  4014cb:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  4014d0:	e9 e2 fc ff ff       	jmpq   4011b7 <main+0x567>
  4014d5:	ba 01 02 00 00       	mov    $0x201,%edx
  4014da:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4014df:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  4014e4:	e8 07 05 00 00       	callq  4019f0 <Except_raise>
  4014e9:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  4014ee:	e9 86 fb ff ff       	jmpq   401079 <main+0x429>
  4014f3:	ba fc 01 00 00       	mov    $0x1fc,%edx
  4014f8:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4014fd:	bf d0 70 60 00       	mov    $0x6070d0,%edi
  401502:	e8 e9 04 00 00       	callq  4019f0 <Except_raise>
  401507:	44 8b 44 24 10       	mov    0x10(%rsp),%r8d
  40150c:	e9 4d fb ff ff       	jmpq   40105e <main+0x40e>
  401511:	ba 64 01 00 00       	mov    $0x164,%edx
  401516:	be 3d 57 40 00       	mov    $0x40573d,%esi
  40151b:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  401520:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
  401525:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
  401529:	e8 c2 04 00 00       	callq  4019f0 <Except_raise>
  40152e:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
  401533:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  401537:	e9 8d fd ff ff       	jmpq   4012c9 <main+0x679>
  40153c:	ba 79 01 00 00       	mov    $0x179,%edx
  401541:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401546:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  40154b:	44 89 5c 24 20       	mov    %r11d,0x20(%rsp)
  401550:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
  401555:	e8 96 04 00 00       	callq  4019f0 <Except_raise>
  40155a:	44 8b 5c 24 20       	mov    0x20(%rsp),%r11d
  40155f:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  401564:	e9 bd fc ff ff       	jmpq   401226 <main+0x5d6>
  401569:	ba 59 01 00 00       	mov    $0x159,%edx
  40156e:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401573:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  401578:	44 89 44 24 20       	mov    %r8d,0x20(%rsp)
  40157d:	89 4c 24 18          	mov    %ecx,0x18(%rsp)
  401581:	e8 6a 04 00 00       	callq  4019f0 <Except_raise>
  401586:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  40158b:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  40158f:	e9 09 fd ff ff       	jmpq   40129d <main+0x64d>
  401594:	ba 85 01 00 00       	mov    $0x185,%edx
  401599:	be 3d 57 40 00       	mov    $0x40573d,%esi
  40159e:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  4015a3:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
  4015a8:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
  4015ad:	e8 3e 04 00 00       	callq  4019f0 <Except_raise>
  4015b2:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4015b7:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  4015bc:	e9 93 fc ff ff       	jmpq   401254 <main+0x604>
  4015c1:	ba c2 00 00 00       	mov    $0xc2,%edx
  4015c6:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4015cb:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  4015d0:	e8 1b 04 00 00       	callq  4019f0 <Except_raise>
  4015d5:	e9 6d f8 ff ff       	jmpq   400e47 <main+0x1f7>
  4015da:	ba 69 00 00 00       	mov    $0x69,%edx
  4015df:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4015e4:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  4015e9:	e8 02 04 00 00       	callq  4019f0 <Except_raise>
  4015ee:	e9 a6 f6 ff ff       	jmpq   400c99 <main+0x49>
  4015f3:	ba 88 00 00 00       	mov    $0x88,%edx
  4015f8:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4015fd:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  401602:	e8 e9 03 00 00       	callq  4019f0 <Except_raise>
  401607:	e9 79 f7 ff ff       	jmpq   400d85 <main+0x135>
  40160c:	ba 96 00 00 00       	mov    $0x96,%edx
  401611:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401616:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40161b:	e8 d0 03 00 00       	callq  4019f0 <Except_raise>
  401620:	e9 c0 f7 ff ff       	jmpq   400de5 <main+0x195>
  401625:	ba 9c 00 00 00       	mov    $0x9c,%edx
  40162a:	be 3d 57 40 00       	mov    $0x40573d,%esi
  40162f:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  401634:	e8 b7 03 00 00       	callq  4019f0 <Except_raise>
  401639:	e9 cc f7 ff ff       	jmpq   400e0a <main+0x1ba>
  40163e:	ba c0 00 00 00       	mov    $0xc0,%edx
  401643:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401648:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40164d:	e8 9e 03 00 00       	callq  4019f0 <Except_raise>
  401652:	e9 e5 f7 ff ff       	jmpq   400e3c <main+0x1ec>
  401657:	b8 01 00 00 00       	mov    $0x1,%eax
  40165c:	e9 2f f9 ff ff       	jmpq   400f90 <main+0x340>
  401661:	ba 6c 01 00 00       	mov    $0x16c,%edx
  401666:	be 3d 57 40 00       	mov    $0x40573d,%esi
  40166b:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  401670:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
  401674:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
  401679:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  40167e:	e8 6d 03 00 00       	callq  4019f0 <Except_raise>
  401683:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
  401687:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
  40168c:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  401691:	e9 5f fb ff ff       	jmpq   4011f5 <main+0x5a5>
  401696:	ba 4c 01 00 00       	mov    $0x14c,%edx
  40169b:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4016a0:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  4016a5:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
  4016a9:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
  4016ae:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  4016b3:	e8 38 03 00 00       	callq  4019f0 <Except_raise>
  4016b8:	8b 4c 24 20          	mov    0x20(%rsp),%ecx
  4016bc:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
  4016c1:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  4016c6:	e9 a3 fb ff ff       	jmpq   40126e <main+0x61e>
  4016cb:	ba 81 01 00 00       	mov    $0x181,%edx
  4016d0:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4016d5:	bf e0 70 60 00       	mov    $0x6070e0,%edi
  4016da:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
  4016df:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  4016e4:	e8 07 03 00 00       	callq  4019f0 <Except_raise>
  4016e9:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4016ee:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  4016f3:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  4016f8:	e9 4b fb ff ff       	jmpq   401248 <main+0x5f8>
  4016fd:	ba ee 01 00 00       	mov    $0x1ee,%edx
  401702:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401707:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40170c:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  401711:	e8 da 02 00 00       	callq  4019f0 <Except_raise>
  401716:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  40171b:	e9 14 f9 ff ff       	jmpq   401034 <main+0x3e4>
  401720:	ba 41 02 00 00       	mov    $0x241,%edx
  401725:	be 3d 57 40 00       	mov    $0x40573d,%esi
  40172a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40172f:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
  401734:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  401739:	e8 b2 02 00 00       	callq  4019f0 <Except_raise>
  40173e:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
  401743:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  401748:	e9 5b f8 ff ff       	jmpq   400fa8 <main+0x358>
  40174d:	ba c3 01 00 00       	mov    $0x1c3,%edx
  401752:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401757:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40175c:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
  401761:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  401766:	e8 85 02 00 00       	callq  4019f0 <Except_raise>
  40176b:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
  401770:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  401775:	e9 48 f9 ff ff       	jmpq   4010c2 <main+0x472>
  40177a:	ba c1 01 00 00       	mov    $0x1c1,%edx
  40177f:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401784:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  401789:	44 89 44 24 18       	mov    %r8d,0x18(%rsp)
  40178e:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  401793:	e8 58 02 00 00       	callq  4019f0 <Except_raise>
  401798:	44 8b 44 24 18       	mov    0x18(%rsp),%r8d
  40179d:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  4017a2:	e9 10 f9 ff ff       	jmpq   4010b7 <main+0x467>
  4017a7:	ba 09 02 00 00       	mov    $0x209,%edx
  4017ac:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4017b1:	bf d0 70 60 00       	mov    $0x6070d0,%edi
  4017b6:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  4017bb:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  4017c0:	e8 2b 02 00 00       	callq  4019f0 <Except_raise>
  4017c5:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
  4017ca:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  4017cf:	e9 bd f8 ff ff       	jmpq   401091 <main+0x441>
  4017d4:	ba f0 01 00 00       	mov    $0x1f0,%edx
  4017d9:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4017de:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  4017e3:	44 89 54 24 10       	mov    %r10d,0x10(%rsp)
  4017e8:	e8 03 02 00 00       	callq  4019f0 <Except_raise>
  4017ed:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  4017f2:	e9 48 f8 ff ff       	jmpq   40103f <main+0x3ef>
  4017f7:	ba 61 01 00 00       	mov    $0x161,%edx
  4017fc:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401801:	bf e0 70 60 00       	mov    $0x6070e0,%edi
  401806:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
  40180b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  401810:	e8 db 01 00 00       	callq  4019f0 <Except_raise>
  401815:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40181a:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
  40181f:	8b 4c 24 18          	mov    0x18(%rsp),%ecx
  401823:	e9 95 fa ff ff       	jmpq   4012bd <main+0x66d>
  401828:	ba 56 02 00 00       	mov    $0x256,%edx
  40182d:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401832:	bf d8 70 60 00       	mov    $0x6070d8,%edi
  401837:	e8 b4 01 00 00       	callq  4019f0 <Except_raise>
  40183c:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  401841:	e9 c1 fb ff ff       	jmpq   401407 <main+0x7b7>
  401846:	ba db 01 00 00       	mov    $0x1db,%edx
  40184b:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401850:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  401855:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  40185a:	e8 91 01 00 00       	callq  4019f0 <Except_raise>
  40185f:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
  401864:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  401869:	e9 e7 f8 ff ff       	jmpq   401155 <main+0x505>
  40186e:	ba 5c 02 00 00       	mov    $0x25c,%edx
  401873:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401878:	bf e0 70 60 00       	mov    $0x6070e0,%edi
  40187d:	e8 6e 01 00 00       	callq  4019f0 <Except_raise>
  401882:	44 8b 54 24 10       	mov    0x10(%rsp),%r10d
  401887:	e9 a0 fb ff ff       	jmpq   40142c <main+0x7dc>
  40188c:	ba cc 01 00 00       	mov    $0x1cc,%edx
  401891:	be 3d 57 40 00       	mov    $0x40573d,%esi
  401896:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40189b:	e8 50 01 00 00       	callq  4019f0 <Except_raise>
  4018a0:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
  4018a5:	e9 41 f8 ff ff       	jmpq   4010eb <main+0x49b>
  4018aa:	ba 9f 00 00 00       	mov    $0x9f,%edx
  4018af:	be 3d 57 40 00       	mov    $0x40573d,%esi
  4018b4:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  4018b9:	e8 32 01 00 00       	callq  4019f0 <Except_raise>
  4018be:	e9 62 f5 ff ff       	jmpq   400e25 <main+0x1d5>

00000000004018c3 <.annobin_elf_init.c.hot>:
  4018c3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4018ca:	00 00 00 
  4018cd:	0f 1f 00             	nopl   (%rax)

00000000004018d0 <_start>:
  4018d0:	f3 0f 1e fa          	endbr64 
  4018d4:	31 ed                	xor    %ebp,%ebp
  4018d6:	49 89 d1             	mov    %rdx,%r9
  4018d9:	5e                   	pop    %rsi
  4018da:	48 89 e2             	mov    %rsp,%rdx
  4018dd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4018e1:	50                   	push   %rax
  4018e2:	54                   	push   %rsp
  4018e3:	49 c7 c0 d0 56 40 00 	mov    $0x4056d0,%r8
  4018ea:	48 c7 c1 60 56 40 00 	mov    $0x405660,%rcx
  4018f1:	48 c7 c7 50 0c 40 00 	mov    $0x400c50,%rdi
  4018f8:	ff 15 e2 56 20 00    	callq  *0x2056e2(%rip)        # 606fe0 <__libc_start_main@GLIBC_2.2.5>
  4018fe:	f4                   	hlt    

00000000004018ff <.annobin_init.c>:
  4018ff:	90                   	nop

0000000000401900 <_dl_relocate_static_pie>:
  401900:	f3 0f 1e fa          	endbr64 
  401904:	c3                   	retq   

0000000000401905 <.annobin__dl_relocate_static_pie.end>:
  401905:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40190c:	00 00 00 
  40190f:	90                   	nop

0000000000401910 <deregister_tm_clones>:
  401910:	48 8d 3d 11 60 20 00 	lea    0x206011(%rip),%rdi        # 607928 <__TMC_END__>
  401917:	48 8d 05 0a 60 20 00 	lea    0x20600a(%rip),%rax        # 607928 <__TMC_END__>
  40191e:	48 39 f8             	cmp    %rdi,%rax
  401921:	74 15                	je     401938 <deregister_tm_clones+0x28>
  401923:	48 8b 05 a6 56 20 00 	mov    0x2056a6(%rip),%rax        # 606fd0 <_ITM_deregisterTMCloneTable@Base>
  40192a:	48 85 c0             	test   %rax,%rax
  40192d:	74 09                	je     401938 <deregister_tm_clones+0x28>
  40192f:	ff e0                	jmpq   *%rax
  401931:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401938:	c3                   	retq   
  401939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401940 <register_tm_clones>:
  401940:	48 8d 3d e1 5f 20 00 	lea    0x205fe1(%rip),%rdi        # 607928 <__TMC_END__>
  401947:	48 8d 35 da 5f 20 00 	lea    0x205fda(%rip),%rsi        # 607928 <__TMC_END__>
  40194e:	48 29 fe             	sub    %rdi,%rsi
  401951:	48 89 f0             	mov    %rsi,%rax
  401954:	48 c1 ee 3f          	shr    $0x3f,%rsi
  401958:	48 c1 f8 03          	sar    $0x3,%rax
  40195c:	48 01 c6             	add    %rax,%rsi
  40195f:	48 d1 fe             	sar    %rsi
  401962:	74 14                	je     401978 <register_tm_clones+0x38>
  401964:	48 8b 05 85 56 20 00 	mov    0x205685(%rip),%rax        # 606ff0 <_ITM_registerTMCloneTable@Base>
  40196b:	48 85 c0             	test   %rax,%rax
  40196e:	74 08                	je     401978 <register_tm_clones+0x38>
  401970:	ff e0                	jmpq   *%rax
  401972:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401978:	c3                   	retq   
  401979:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401980 <__do_global_dtors_aux>:
  401980:	f3 0f 1e fa          	endbr64 
  401984:	80 3d dd 5f 20 00 00 	cmpb   $0x0,0x205fdd(%rip)        # 607968 <completed.0>
  40198b:	75 13                	jne    4019a0 <__do_global_dtors_aux+0x20>
  40198d:	55                   	push   %rbp
  40198e:	48 89 e5             	mov    %rsp,%rbp
  401991:	e8 7a ff ff ff       	callq  401910 <deregister_tm_clones>
  401996:	c6 05 cb 5f 20 00 01 	movb   $0x1,0x205fcb(%rip)        # 607968 <completed.0>
  40199d:	5d                   	pop    %rbp
  40199e:	c3                   	retq   
  40199f:	90                   	nop
  4019a0:	c3                   	retq   
  4019a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4019a8:	00 00 00 00 
  4019ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004019b0 <frame_dummy>:
  4019b0:	f3 0f 1e fa          	endbr64 
  4019b4:	eb 8a                	jmp    401940 <register_tm_clones>
  4019b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019bd:	00 00 00 

00000000004019c0 <assert>:
  4019c0:	85 ff                	test   %edi,%edi
  4019c2:	74 0c                	je     4019d0 <assert+0x10>
  4019c4:	f3 c3                	repz retq 
  4019c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4019cd:	00 00 00 
  4019d0:	48 8d 3d e1 53 20 00 	lea    0x2053e1(%rip),%rdi        # 606db8 <Assert_Failed>
  4019d7:	48 8d 35 7a 3e 00 00 	lea    0x3e7a(%rip),%rsi        # 405858 <_IO_stdin_used+0x170>
  4019de:	ba 05 00 00 00       	mov    $0x5,%edx
  4019e3:	e9 08 00 00 00       	jmpq   4019f0 <Except_raise>
  4019e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4019ef:	00 

00000000004019f0 <Except_raise>:
  4019f0:	48 89 5c 24 d8       	mov    %rbx,-0x28(%rsp)
  4019f5:	48 89 6c 24 e0       	mov    %rbp,-0x20(%rsp)
  4019fa:	48 89 fb             	mov    %rdi,%rbx
  4019fd:	4c 89 64 24 e8       	mov    %r12,-0x18(%rsp)
  401a02:	4c 89 74 24 f8       	mov    %r14,-0x8(%rsp)
  401a07:	49 89 f4             	mov    %rsi,%r12
  401a0a:	4c 89 6c 24 f0       	mov    %r13,-0x10(%rsp)
  401a0f:	48 83 ec 28          	sub    $0x28,%rsp
  401a13:	4c 8d 35 56 5f 20 00 	lea    0x205f56(%rip),%r14        # 607970 <Except_stack>
  401a1a:	48 85 ff             	test   %rdi,%rdi
  401a1d:	89 d5                	mov    %edx,%ebp
  401a1f:	4d 8b 2e             	mov    (%r14),%r13
  401a22:	0f 84 a8 00 00 00    	je     401ad0 <Except_raise+0xe0>
  401a28:	4d 85 ed             	test   %r13,%r13
  401a2b:	74 33                	je     401a60 <Except_raise+0x70>
  401a2d:	49 8b 06             	mov    (%r14),%rax
  401a30:	49 8d 7d 08          	lea    0x8(%r13),%rdi
  401a34:	49 89 9d e0 00 00 00 	mov    %rbx,0xe0(%r13)
  401a3b:	4d 89 a5 d0 00 00 00 	mov    %r12,0xd0(%r13)
  401a42:	41 89 ad d8 00 00 00 	mov    %ebp,0xd8(%r13)
  401a49:	be 01 00 00 00       	mov    $0x1,%esi
  401a4e:	48 8b 00             	mov    (%rax),%rax
  401a51:	49 89 06             	mov    %rax,(%r14)
  401a54:	e8 97 f1 ff ff       	callq  400bf0 <longjmp@plt>
  401a59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401a60:	4c 8b 2d 91 55 20 00 	mov    0x205591(%rip),%r13        # 606ff8 <stderr@@GLIBC_2.2.5-0x968>
  401a67:	48 8d 3d 15 3e 00 00 	lea    0x3e15(%rip),%rdi        # 405883 <_IO_stdin_used+0x19b>
  401a6e:	ba 12 00 00 00       	mov    $0x12,%edx
  401a73:	be 01 00 00 00       	mov    $0x1,%esi
  401a78:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401a7c:	e8 9f f1 ff ff       	callq  400c20 <fwrite@plt>
  401a81:	48 8b 13             	mov    (%rbx),%rdx
  401a84:	48 85 d2             	test   %rdx,%rdx
  401a87:	0f 84 83 00 00 00    	je     401b10 <Except_raise+0x120>
  401a8d:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401a91:	48 8d 35 fe 3d 00 00 	lea    0x3dfe(%rip),%rsi        # 405896 <_IO_stdin_used+0x1ae>
  401a98:	31 c0                	xor    %eax,%eax
  401a9a:	e8 01 f1 ff ff       	callq  400ba0 <fprintf@plt>
  401a9f:	85 ed                	test   %ebp,%ebp
  401aa1:	7f 4d                	jg     401af0 <Except_raise+0x100>
  401aa3:	49 8b 4d 00          	mov    0x0(%r13),%rcx
  401aa7:	48 8d 3d 07 3e 00 00 	lea    0x3e07(%rip),%rdi        # 4058b5 <_IO_stdin_used+0x1cd>
  401aae:	ba 0c 00 00 00       	mov    $0xc,%edx
  401ab3:	be 01 00 00 00       	mov    $0x1,%esi
  401ab8:	e8 63 f1 ff ff       	callq  400c20 <fwrite@plt>
  401abd:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401ac1:	e8 0a f1 ff ff       	callq  400bd0 <fflush@plt>
  401ac6:	e8 45 f0 ff ff       	callq  400b10 <abort@plt>
  401acb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401ad0:	48 8d 3d e1 52 20 00 	lea    0x2052e1(%rip),%rdi        # 606db8 <Assert_Failed>
  401ad7:	48 8d 35 98 3d 00 00 	lea    0x3d98(%rip),%rsi        # 405876 <_IO_stdin_used+0x18e>
  401ade:	ba 13 00 00 00       	mov    $0x13,%edx
  401ae3:	e8 08 ff ff ff       	callq  4019f0 <Except_raise>
  401ae8:	e9 3b ff ff ff       	jmpq   401a28 <Except_raise+0x38>
  401aed:	0f 1f 00             	nopl   (%rax)
  401af0:	4d 85 e4             	test   %r12,%r12
  401af3:	74 ae                	je     401aa3 <Except_raise+0xb3>
  401af5:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401af9:	48 8d 35 a3 3d 00 00 	lea    0x3da3(%rip),%rsi        # 4058a3 <_IO_stdin_used+0x1bb>
  401b00:	89 e9                	mov    %ebp,%ecx
  401b02:	4c 89 e2             	mov    %r12,%rdx
  401b05:	31 c0                	xor    %eax,%eax
  401b07:	e8 94 f0 ff ff       	callq  400ba0 <fprintf@plt>
  401b0c:	eb 95                	jmp    401aa3 <Except_raise+0xb3>
  401b0e:	66 90                	xchg   %ax,%ax
  401b10:	49 8b 7d 00          	mov    0x0(%r13),%rdi
  401b14:	48 8d 35 7f 3d 00 00 	lea    0x3d7f(%rip),%rsi        # 40589a <_IO_stdin_used+0x1b2>
  401b1b:	48 89 da             	mov    %rbx,%rdx
  401b1e:	31 c0                	xor    %eax,%eax
  401b20:	e8 7b f0 ff ff       	callq  400ba0 <fprintf@plt>
  401b25:	e9 75 ff ff ff       	jmpq   401a9f <Except_raise+0xaf>
  401b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000401b30 <Mem_alloc>:
  401b30:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  401b35:	48 89 6c 24 f0       	mov    %rbp,-0x10(%rsp)
  401b3a:	48 89 f3             	mov    %rsi,%rbx
  401b3d:	4c 89 64 24 f8       	mov    %r12,-0x8(%rsp)
  401b42:	48 83 ec 28          	sub    $0x28,%rsp
  401b46:	48 85 ff             	test   %rdi,%rdi
  401b49:	49 89 fc             	mov    %rdi,%r12
  401b4c:	89 d5                	mov    %edx,%ebp
  401b4e:	7e 50                	jle    401ba0 <Mem_alloc+0x70>
  401b50:	4c 89 e7             	mov    %r12,%rdi
  401b53:	e8 68 f0 ff ff       	callq  400bc0 <malloc@plt>
  401b58:	48 85 c0             	test   %rax,%rax
  401b5b:	74 1b                	je     401b78 <Mem_alloc+0x48>
  401b5d:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
  401b62:	48 8b 6c 24 18       	mov    0x18(%rsp),%rbp
  401b67:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
  401b6c:	48 83 c4 28          	add    $0x28,%rsp
  401b70:	c3                   	retq   
  401b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401b78:	48 85 db             	test   %rbx,%rbx
  401b7b:	74 43                	je     401bc0 <Mem_alloc+0x90>
  401b7d:	48 8d 3d 3c 52 20 00 	lea    0x20523c(%rip),%rdi        # 606dc0 <Mem_Failed>
  401b84:	89 ea                	mov    %ebp,%edx
  401b86:	48 89 de             	mov    %rbx,%rsi
  401b89:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401b8e:	e8 5d fe ff ff       	callq  4019f0 <Except_raise>
  401b93:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401b98:	eb c3                	jmp    401b5d <Mem_alloc+0x2d>
  401b9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401ba0:	48 8d 3d 11 52 20 00 	lea    0x205211(%rip),%rdi        # 606db8 <Assert_Failed>
  401ba7:	48 8d 35 14 3d 00 00 	lea    0x3d14(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401bae:	ba 0a 00 00 00       	mov    $0xa,%edx
  401bb3:	e8 38 fe ff ff       	callq  4019f0 <Except_raise>
  401bb8:	eb 96                	jmp    401b50 <Mem_alloc+0x20>
  401bba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401bc0:	48 8d 3d f9 51 20 00 	lea    0x2051f9(%rip),%rdi        # 606dc0 <Mem_Failed>
  401bc7:	48 8d 35 f4 3c 00 00 	lea    0x3cf4(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401bce:	ba 0f 00 00 00       	mov    $0xf,%edx
  401bd3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401bd8:	e8 13 fe ff ff       	callq  4019f0 <Except_raise>
  401bdd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401be2:	e9 76 ff ff ff       	jmpq   401b5d <Mem_alloc+0x2d>
  401be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401bee:	00 00 

0000000000401bf0 <Mem_calloc>:
  401bf0:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
  401bf5:	48 89 6c 24 e8       	mov    %rbp,-0x18(%rsp)
  401bfa:	48 89 d3             	mov    %rdx,%rbx
  401bfd:	4c 89 64 24 f0       	mov    %r12,-0x10(%rsp)
  401c02:	4c 89 6c 24 f8       	mov    %r13,-0x8(%rsp)
  401c07:	48 83 ec 38          	sub    $0x38,%rsp
  401c0b:	48 85 ff             	test   %rdi,%rdi
  401c0e:	48 89 fd             	mov    %rdi,%rbp
  401c11:	49 89 f4             	mov    %rsi,%r12
  401c14:	41 89 cd             	mov    %ecx,%r13d
  401c17:	7e 5f                	jle    401c78 <Mem_calloc+0x88>
  401c19:	4d 85 e4             	test   %r12,%r12
  401c1c:	7e 7a                	jle    401c98 <Mem_calloc+0xa8>
  401c1e:	4c 89 e6             	mov    %r12,%rsi
  401c21:	48 89 ef             	mov    %rbp,%rdi
  401c24:	e8 67 ef ff ff       	callq  400b90 <calloc@plt>
  401c29:	48 85 c0             	test   %rax,%rax
  401c2c:	74 22                	je     401c50 <Mem_calloc+0x60>
  401c2e:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  401c33:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  401c38:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  401c3d:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  401c42:	48 83 c4 38          	add    $0x38,%rsp
  401c46:	c3                   	retq   
  401c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401c4e:	00 00 
  401c50:	48 85 db             	test   %rbx,%rbx
  401c53:	74 63                	je     401cb8 <Mem_calloc+0xc8>
  401c55:	48 8d 3d 64 51 20 00 	lea    0x205164(%rip),%rdi        # 606dc0 <Mem_Failed>
  401c5c:	44 89 ea             	mov    %r13d,%edx
  401c5f:	48 89 de             	mov    %rbx,%rsi
  401c62:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401c67:	e8 84 fd ff ff       	callq  4019f0 <Except_raise>
  401c6c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401c71:	eb bb                	jmp    401c2e <Mem_calloc+0x3e>
  401c73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401c78:	48 8d 3d 39 51 20 00 	lea    0x205139(%rip),%rdi        # 606db8 <Assert_Failed>
  401c7f:	48 8d 35 3c 3c 00 00 	lea    0x3c3c(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401c86:	ba 18 00 00 00       	mov    $0x18,%edx
  401c8b:	e8 60 fd ff ff       	callq  4019f0 <Except_raise>
  401c90:	4d 85 e4             	test   %r12,%r12
  401c93:	7f 89                	jg     401c1e <Mem_calloc+0x2e>
  401c95:	0f 1f 00             	nopl   (%rax)
  401c98:	48 8d 3d 19 51 20 00 	lea    0x205119(%rip),%rdi        # 606db8 <Assert_Failed>
  401c9f:	48 8d 35 1c 3c 00 00 	lea    0x3c1c(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401ca6:	ba 19 00 00 00       	mov    $0x19,%edx
  401cab:	e8 40 fd ff ff       	callq  4019f0 <Except_raise>
  401cb0:	e9 69 ff ff ff       	jmpq   401c1e <Mem_calloc+0x2e>
  401cb5:	0f 1f 00             	nopl   (%rax)
  401cb8:	48 8d 3d 01 51 20 00 	lea    0x205101(%rip),%rdi        # 606dc0 <Mem_Failed>
  401cbf:	48 8d 35 fc 3b 00 00 	lea    0x3bfc(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401cc6:	ba 1e 00 00 00       	mov    $0x1e,%edx
  401ccb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401cd0:	e8 1b fd ff ff       	callq  4019f0 <Except_raise>
  401cd5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401cda:	e9 4f ff ff ff       	jmpq   401c2e <Mem_calloc+0x3e>
  401cdf:	90                   	nop

0000000000401ce0 <Mem_free>:
  401ce0:	48 85 ff             	test   %rdi,%rdi
  401ce3:	74 0b                	je     401cf0 <Mem_free+0x10>
  401ce5:	e9 16 ee ff ff       	jmpq   400b00 <free@plt>
  401cea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401cf0:	f3 c3                	repz retq 
  401cf2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000401d00 <Mem_resize>:
  401d00:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
  401d05:	48 89 6c 24 e8       	mov    %rbp,-0x18(%rsp)
  401d0a:	48 89 d3             	mov    %rdx,%rbx
  401d0d:	4c 89 64 24 f0       	mov    %r12,-0x10(%rsp)
  401d12:	4c 89 6c 24 f8       	mov    %r13,-0x8(%rsp)
  401d17:	48 83 ec 38          	sub    $0x38,%rsp
  401d1b:	48 85 ff             	test   %rdi,%rdi
  401d1e:	48 89 fd             	mov    %rdi,%rbp
  401d21:	49 89 f4             	mov    %rsi,%r12
  401d24:	41 89 cd             	mov    %ecx,%r13d
  401d27:	74 7f                	je     401da8 <Mem_resize+0xa8>
  401d29:	4d 85 e4             	test   %r12,%r12
  401d2c:	7e 5a                	jle    401d88 <Mem_resize+0x88>
  401d2e:	4c 89 e6             	mov    %r12,%rsi
  401d31:	48 89 ef             	mov    %rbp,%rdi
  401d34:	e8 a7 ee ff ff       	callq  400be0 <realloc@plt>
  401d39:	48 85 c0             	test   %rax,%rax
  401d3c:	74 22                	je     401d60 <Mem_resize+0x60>
  401d3e:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  401d43:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  401d48:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  401d4d:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  401d52:	48 83 c4 38          	add    $0x38,%rsp
  401d56:	c3                   	retq   
  401d57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401d5e:	00 00 
  401d60:	48 85 db             	test   %rbx,%rbx
  401d63:	74 63                	je     401dc8 <Mem_resize+0xc8>
  401d65:	48 8d 3d 54 50 20 00 	lea    0x205054(%rip),%rdi        # 606dc0 <Mem_Failed>
  401d6c:	44 89 ea             	mov    %r13d,%edx
  401d6f:	48 89 de             	mov    %rbx,%rsi
  401d72:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401d77:	e8 74 fc ff ff       	callq  4019f0 <Except_raise>
  401d7c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401d81:	eb bb                	jmp    401d3e <Mem_resize+0x3e>
  401d83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  401d88:	48 8d 3d 29 50 20 00 	lea    0x205029(%rip),%rdi        # 606db8 <Assert_Failed>
  401d8f:	48 8d 35 2c 3b 00 00 	lea    0x3b2c(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401d96:	ba 2b 00 00 00       	mov    $0x2b,%edx
  401d9b:	e8 50 fc ff ff       	callq  4019f0 <Except_raise>
  401da0:	eb 8c                	jmp    401d2e <Mem_resize+0x2e>
  401da2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  401da8:	48 8d 3d 09 50 20 00 	lea    0x205009(%rip),%rdi        # 606db8 <Assert_Failed>
  401daf:	48 8d 35 0c 3b 00 00 	lea    0x3b0c(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401db6:	ba 2a 00 00 00       	mov    $0x2a,%edx
  401dbb:	e8 30 fc ff ff       	callq  4019f0 <Except_raise>
  401dc0:	e9 64 ff ff ff       	jmpq   401d29 <Mem_resize+0x29>
  401dc5:	0f 1f 00             	nopl   (%rax)
  401dc8:	48 8d 3d f1 4f 20 00 	lea    0x204ff1(%rip),%rdi        # 606dc0 <Mem_Failed>
  401dcf:	48 8d 35 ec 3a 00 00 	lea    0x3aec(%rip),%rsi        # 4058c2 <_IO_stdin_used+0x1da>
  401dd6:	ba 30 00 00 00       	mov    $0x30,%edx
  401ddb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  401de0:	e8 0b fc ff ff       	callq  4019f0 <Except_raise>
  401de5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  401dea:	e9 4f ff ff ff       	jmpq   401d3e <Mem_resize+0x3e>
  401def:	90                   	nop

0000000000401df0 <expand>:
  401df0:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  401df5:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  401dfa:	48 83 ec 18          	sub    $0x18,%rsp
  401dfe:	8b 2f                	mov    (%rdi),%ebp
  401e00:	48 89 fb             	mov    %rdi,%rbx
  401e03:	8d 74 2d 00          	lea    0x0(%rbp,%rbp,1),%esi
  401e07:	e8 24 08 00 00       	callq  402630 <UArray_resize>
  401e0c:	8b 43 14             	mov    0x14(%rbx),%eax
  401e0f:	85 c0                	test   %eax,%eax
  401e11:	7e 25                	jle    401e38 <expand+0x48>
  401e13:	48 63 f0             	movslq %eax,%rsi
  401e16:	48 63 d5             	movslq %ebp,%rdx
  401e19:	48 c1 e6 03          	shl    $0x3,%rsi
  401e1d:	48 03 73 08          	add    0x8(%rbx),%rsi
  401e21:	48 8d 3c d6          	lea    (%rsi,%rdx,8),%rdi
  401e25:	89 ea                	mov    %ebp,%edx
  401e27:	29 c2                	sub    %eax,%edx
  401e29:	48 63 d2             	movslq %edx,%rdx
  401e2c:	48 c1 e2 03          	shl    $0x3,%rdx
  401e30:	e8 7b ed ff ff       	callq  400bb0 <memcpy@plt>
  401e35:	01 6b 14             	add    %ebp,0x14(%rbx)
  401e38:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  401e3d:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  401e42:	48 83 c4 18          	add    $0x18,%rsp
  401e46:	c3                   	retq   
  401e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401e4e:	00 00 

0000000000401e50 <Seq_new>:
  401e50:	55                   	push   %rbp
  401e51:	53                   	push   %rbx
  401e52:	89 fb                	mov    %edi,%ebx
  401e54:	48 83 ec 08          	sub    $0x8,%rsp
  401e58:	85 ff                	test   %edi,%edi
  401e5a:	78 5c                	js     401eb8 <Seq_new+0x68>
  401e5c:	48 8d 15 7b 3a 00 00 	lea    0x3a7b(%rip),%rdx        # 4058de <_IO_stdin_used+0x1f6>
  401e63:	b9 1d 00 00 00       	mov    $0x1d,%ecx
  401e68:	be 18 00 00 00       	mov    $0x18,%esi
  401e6d:	bf 01 00 00 00       	mov    $0x1,%edi
  401e72:	e8 79 fd ff ff       	callq  401bf0 <Mem_calloc>
  401e77:	85 db                	test   %ebx,%ebx
  401e79:	48 89 c5             	mov    %rax,%rbp
  401e7c:	75 70                	jne    401eee <Seq_new+0x9e>
  401e7e:	bf 80 00 00 00       	mov    $0x80,%edi
  401e83:	bb 10 00 00 00       	mov    $0x10,%ebx
  401e88:	48 8d 35 4f 3a 00 00 	lea    0x3a4f(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  401e8f:	ba 21 00 00 00       	mov    $0x21,%edx
  401e94:	e8 97 fc ff ff       	callq  401b30 <Mem_alloc>
  401e99:	89 de                	mov    %ebx,%esi
  401e9b:	48 89 c1             	mov    %rax,%rcx
  401e9e:	48 89 ef             	mov    %rbp,%rdi
  401ea1:	ba 08 00 00 00       	mov    $0x8,%edx
  401ea6:	e8 a5 04 00 00       	callq  402350 <UArrayRep_init>
  401eab:	48 83 c4 08          	add    $0x8,%rsp
  401eaf:	48 89 e8             	mov    %rbp,%rax
  401eb2:	5b                   	pop    %rbx
  401eb3:	5d                   	pop    %rbp
  401eb4:	c3                   	retq   
  401eb5:	0f 1f 00             	nopl   (%rax)
  401eb8:	48 8d 3d f9 4e 20 00 	lea    0x204ef9(%rip),%rdi        # 606db8 <Assert_Failed>
  401ebf:	48 8d 35 18 3a 00 00 	lea    0x3a18(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  401ec6:	ba 1c 00 00 00       	mov    $0x1c,%edx
  401ecb:	e8 20 fb ff ff       	callq  4019f0 <Except_raise>
  401ed0:	48 8d 15 07 3a 00 00 	lea    0x3a07(%rip),%rdx        # 4058de <_IO_stdin_used+0x1f6>
  401ed7:	b9 1d 00 00 00       	mov    $0x1d,%ecx
  401edc:	be 18 00 00 00       	mov    $0x18,%esi
  401ee1:	bf 01 00 00 00       	mov    $0x1,%edi
  401ee6:	e8 05 fd ff ff       	callq  401bf0 <Mem_calloc>
  401eeb:	48 89 c5             	mov    %rax,%rbp
  401eee:	48 63 fb             	movslq %ebx,%rdi
  401ef1:	48 c1 e7 03          	shl    $0x3,%rdi
  401ef5:	eb 91                	jmp    401e88 <Seq_new+0x38>
  401ef7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  401efe:	00 00 

0000000000401f00 <Seq_free>:
  401f00:	48 85 ff             	test   %rdi,%rdi
  401f03:	53                   	push   %rbx
  401f04:	48 89 fb             	mov    %rdi,%rbx
  401f07:	74 17                	je     401f20 <Seq_free+0x20>
  401f09:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  401f0d:	74 11                	je     401f20 <Seq_free+0x20>
  401f0f:	48 89 df             	mov    %rbx,%rdi
  401f12:	5b                   	pop    %rbx
  401f13:	e9 c8 05 00 00       	jmpq   4024e0 <UArray_free>
  401f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401f1f:	00 
  401f20:	48 8d 3d 91 4e 20 00 	lea    0x204e91(%rip),%rdi        # 606db8 <Assert_Failed>
  401f27:	48 8d 35 b0 39 00 00 	lea    0x39b0(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  401f2e:	ba 2e 00 00 00       	mov    $0x2e,%edx
  401f33:	e8 b8 fa ff ff       	callq  4019f0 <Except_raise>
  401f38:	48 89 df             	mov    %rbx,%rdi
  401f3b:	5b                   	pop    %rbx
  401f3c:	e9 9f 05 00 00       	jmpq   4024e0 <UArray_free>
  401f41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  401f48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401f4f:	00 

0000000000401f50 <Seq_length>:
  401f50:	48 85 ff             	test   %rdi,%rdi
  401f53:	53                   	push   %rbx
  401f54:	48 89 fb             	mov    %rdi,%rbx
  401f57:	74 07                	je     401f60 <Seq_length+0x10>
  401f59:	8b 43 10             	mov    0x10(%rbx),%eax
  401f5c:	5b                   	pop    %rbx
  401f5d:	c3                   	retq   
  401f5e:	66 90                	xchg   %ax,%ax
  401f60:	48 8d 3d 51 4e 20 00 	lea    0x204e51(%rip),%rdi        # 606db8 <Assert_Failed>
  401f67:	48 8d 35 70 39 00 00 	lea    0x3970(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  401f6e:	ba 33 00 00 00       	mov    $0x33,%edx
  401f73:	e8 78 fa ff ff       	callq  4019f0 <Except_raise>
  401f78:	8b 43 10             	mov    0x10(%rbx),%eax
  401f7b:	5b                   	pop    %rbx
  401f7c:	c3                   	retq   
  401f7d:	0f 1f 00             	nopl   (%rax)

0000000000401f80 <Seq_get>:
  401f80:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  401f85:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  401f8a:	48 83 ec 18          	sub    $0x18,%rsp
  401f8e:	48 85 ff             	test   %rdi,%rdi # ensures input seq != null
  401f91:	48 89 fb             	mov    %rdi,%rbx # moves (1st p) seq to rbx
  401f94:	89 f5                	mov    %esi,%ebp # moves (2nd p) index to ebp
  401f96:	74 48                	je     401fe0 <Seq_get+0x60> # failed assert for null
  
  401f98:	85 ed                	test   %ebp,%ebp # ensures index >= 0
  401f9a:	78 05                	js     401fa1 <Seq_get+0x21> # assert fails if ind negative
  401f9c:	3b 6b 10             	cmp    0x10(%rbx),%ebp # ensures index < length
  401f9f:	7c 18                	jl     401fb9 <Seq_get+0x39> # continues from line if ensured
  401fa1:	48 8d 3d 10 4e 20 00 	lea    0x204e10(%rip),%rdi        # 606db8 <Assert_Failed>
  401fa8:	48 8d 35 2f 39 00 00 	lea    0x392f(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  401faf:	ba 38 00 00 00       	mov    $0x38,%edx
  401fb4:	e8 37 fa ff ff       	callq  4019f0 <Except_raise>
  
  401fb9:	8b 43 14             	mov    0x14(%rbx),%eax # 20 bytes ahead of seq
  401fbc:	01 e8                	add    %ebp,%eax # moves to index in seq
  401fbe:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  401fc3:	89 c2                	mov    %eax,%edx
  401fc5:	c1 fa 1f             	sar    $0x1f,%edx
  401fc8:	f7 3b                	idivl  (%rbx)
  401fca:	48 8b 43 08          	mov    0x8(%rbx),%rax
  401fce:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  401fd3:	48 63 d2             	movslq %edx,%rdx
  401fd6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  401fda:	48 83 c4 18          	add    $0x18,%rsp
  401fde:	c3                   	retq   
  
  401fdf:	90                   	nop
  401fe0:	48 8d 3d d1 4d 20 00 	lea    0x204dd1(%rip),%rdi        # 606db8 <Assert_Failed>
  401fe7:	48 8d 35 f0 38 00 00 	lea    0x38f0(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  401fee:	ba 37 00 00 00       	mov    $0x37,%edx
  401ff3:	e8 f8 f9 ff ff       	callq  4019f0 <Except_raise>
  401ff8:	eb 9e                	jmp    401f98 <Seq_get+0x18>
  401ffa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402000 <Seq_put>:
  402000:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  402005:	48 89 6c 24 f0       	mov    %rbp,-0x10(%rsp)
  40200a:	48 89 fb             	mov    %rdi,%rbx
  40200d:	4c 89 64 24 f8       	mov    %r12,-0x8(%rsp)
  402012:	48 83 ec 18          	sub    $0x18,%rsp
  402016:	48 85 ff             	test   %rdi,%rdi
  402019:	41 89 f4             	mov    %esi,%r12d
  40201c:	48 89 d5             	mov    %rdx,%rbp
  40201f:	74 57                	je     402078 <Seq_put+0x78>
  402021:	45 85 e4             	test   %r12d,%r12d
  402024:	78 06                	js     40202c <Seq_put+0x2c>
  402026:	44 3b 63 10          	cmp    0x10(%rbx),%r12d
  40202a:	7c 18                	jl     402044 <Seq_put+0x44>
  40202c:	48 8d 3d 85 4d 20 00 	lea    0x204d85(%rip),%rdi        # 606db8 <Assert_Failed>
  402033:	48 8d 35 a4 38 00 00 	lea    0x38a4(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  40203a:	ba 3f 00 00 00       	mov    $0x3f,%edx
  40203f:	e8 ac f9 ff ff       	callq  4019f0 <Except_raise>
  402044:	8b 43 14             	mov    0x14(%rbx),%eax
  402047:	44 01 e0             	add    %r12d,%eax
  40204a:	89 c2                	mov    %eax,%edx
  40204c:	c1 fa 1f             	sar    $0x1f,%edx
  40204f:	f7 3b                	idivl  (%rbx)
  402051:	48 63 d2             	movslq %edx,%rdx
  402054:	48 c1 e2 03          	shl    $0x3,%rdx
  402058:	48 03 53 08          	add    0x8(%rbx),%rdx
  40205c:	48 8b 02             	mov    (%rdx),%rax
  40205f:	48 89 2a             	mov    %rbp,(%rdx)
  402062:	48 8b 1c 24          	mov    (%rsp),%rbx
  402066:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
  40206b:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
  402070:	48 83 c4 18          	add    $0x18,%rsp
  402074:	c3                   	retq   
  402075:	0f 1f 00             	nopl   (%rax)
  402078:	48 8d 3d 39 4d 20 00 	lea    0x204d39(%rip),%rdi        # 606db8 <Assert_Failed>
  40207f:	48 8d 35 58 38 00 00 	lea    0x3858(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  402086:	ba 3e 00 00 00       	mov    $0x3e,%edx
  40208b:	e8 60 f9 ff ff       	callq  4019f0 <Except_raise>
  402090:	eb 8f                	jmp    402021 <Seq_put+0x21>
  402092:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004020a0 <Seq_remhi>:
  4020a0:	48 85 ff             	test   %rdi,%rdi
  4020a3:	53                   	push   %rbx
  4020a4:	48 89 fb             	mov    %rdi,%rbx
  4020a7:	74 47                	je     4020f0 <Seq_remhi+0x50>
  4020a9:	8b 43 10             	mov    0x10(%rbx),%eax
  4020ac:	85 c0                	test   %eax,%eax
  4020ae:	7e 20                	jle    4020d0 <Seq_remhi+0x30>
  4020b0:	83 e8 01             	sub    $0x1,%eax
  4020b3:	89 43 10             	mov    %eax,0x10(%rbx)
  4020b6:	03 43 14             	add    0x14(%rbx),%eax
  4020b9:	89 c2                	mov    %eax,%edx
  4020bb:	c1 fa 1f             	sar    $0x1f,%edx
  4020be:	f7 3b                	idivl  (%rbx)
  4020c0:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4020c4:	5b                   	pop    %rbx
  4020c5:	48 63 d2             	movslq %edx,%rdx
  4020c8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
  4020cc:	c3                   	retq   
  4020cd:	0f 1f 00             	nopl   (%rax)
  4020d0:	48 8d 3d e1 4c 20 00 	lea    0x204ce1(%rip),%rdi        # 606db8 <Assert_Failed>
  4020d7:	48 8d 35 00 38 00 00 	lea    0x3800(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  4020de:	ba 49 00 00 00       	mov    $0x49,%edx
  4020e3:	e8 08 f9 ff ff       	callq  4019f0 <Except_raise>
  4020e8:	8b 43 10             	mov    0x10(%rbx),%eax
  4020eb:	eb c3                	jmp    4020b0 <Seq_remhi+0x10>
  4020ed:	0f 1f 00             	nopl   (%rax)
  4020f0:	48 8d 3d c1 4c 20 00 	lea    0x204cc1(%rip),%rdi        # 606db8 <Assert_Failed>
  4020f7:	48 8d 35 e0 37 00 00 	lea    0x37e0(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  4020fe:	ba 48 00 00 00       	mov    $0x48,%edx
  402103:	e8 e8 f8 ff ff       	callq  4019f0 <Except_raise>
  402108:	eb 9f                	jmp    4020a9 <Seq_remhi+0x9>
  40210a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402110 <Seq_remlo>:
  402110:	48 85 ff             	test   %rdi,%rdi
  402113:	53                   	push   %rbx
  402114:	48 89 fb             	mov    %rdi,%rbx
  402117:	74 5f                	je     402178 <Seq_remlo+0x68>
  402119:	8b 7b 10             	mov    0x10(%rbx),%edi
  40211c:	85 ff                	test   %edi,%edi
  40211e:	7e 38                	jle    402158 <Seq_remlo+0x48>
  402120:	8b 73 14             	mov    0x14(%rbx),%esi
  402123:	8b 0b                	mov    (%rbx),%ecx
  402125:	83 ef 01             	sub    $0x1,%edi
  402128:	89 f2                	mov    %esi,%edx
  40212a:	89 f0                	mov    %esi,%eax
  40212c:	c1 fa 1f             	sar    $0x1f,%edx
  40212f:	f7 f9                	idiv   %ecx
  402131:	48 8b 43 08          	mov    0x8(%rbx),%rax
  402135:	48 63 d2             	movslq %edx,%rdx
  402138:	4c 8b 04 d0          	mov    (%rax,%rdx,8),%r8
  40213c:	8d 46 01             	lea    0x1(%rsi),%eax
  40213f:	89 7b 10             	mov    %edi,0x10(%rbx)
  402142:	89 c2                	mov    %eax,%edx
  402144:	c1 fa 1f             	sar    $0x1f,%edx
  402147:	f7 f9                	idiv   %ecx
  402149:	4c 89 c0             	mov    %r8,%rax
  40214c:	89 53 14             	mov    %edx,0x14(%rbx)
  40214f:	5b                   	pop    %rbx
  402150:	c3                   	retq   
  402151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402158:	48 8d 3d 59 4c 20 00 	lea    0x204c59(%rip),%rdi        # 606db8 <Assert_Failed>
  40215f:	48 8d 35 78 37 00 00 	lea    0x3778(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  402166:	ba 52 00 00 00       	mov    $0x52,%edx
  40216b:	e8 80 f8 ff ff       	callq  4019f0 <Except_raise>
  402170:	8b 7b 10             	mov    0x10(%rbx),%edi
  402173:	eb ab                	jmp    402120 <Seq_remlo+0x10>
  402175:	0f 1f 00             	nopl   (%rax)
  402178:	48 8d 3d 39 4c 20 00 	lea    0x204c39(%rip),%rdi        # 606db8 <Assert_Failed>
  40217f:	48 8d 35 58 37 00 00 	lea    0x3758(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  402186:	ba 51 00 00 00       	mov    $0x51,%edx
  40218b:	e8 60 f8 ff ff       	callq  4019f0 <Except_raise>
  402190:	eb 87                	jmp    402119 <Seq_remlo+0x9>
  402192:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004021a0 <Seq_addhi>:
  4021a0:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  4021a5:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  4021aa:	48 83 ec 18          	sub    $0x18,%rsp
  4021ae:	48 85 ff             	test   %rdi,%rdi
  4021b1:	48 89 fb             	mov    %rdi,%rbx
  4021b4:	48 89 f5             	mov    %rsi,%rbp
  4021b7:	74 47                	je     402200 <Seq_addhi+0x60>
  4021b9:	8b 43 10             	mov    0x10(%rbx),%eax
  4021bc:	8b 0b                	mov    (%rbx),%ecx
  4021be:	39 c8                	cmp    %ecx,%eax
  4021c0:	74 2e                	je     4021f0 <Seq_addhi+0x50>
  4021c2:	8d 50 01             	lea    0x1(%rax),%edx
  4021c5:	03 43 14             	add    0x14(%rbx),%eax
  4021c8:	89 53 10             	mov    %edx,0x10(%rbx)
  4021cb:	89 c2                	mov    %eax,%edx
  4021cd:	c1 fa 1f             	sar    $0x1f,%edx
  4021d0:	f7 f9                	idiv   %ecx
  4021d2:	48 8b 43 08          	mov    0x8(%rbx),%rax
  4021d6:	48 63 d2             	movslq %edx,%rdx
  4021d9:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
  4021dd:	48 89 e8             	mov    %rbp,%rax
  4021e0:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4021e5:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4021ea:	48 83 c4 18          	add    $0x18,%rsp
  4021ee:	c3                   	retq   
  4021ef:	90                   	nop
  4021f0:	48 89 df             	mov    %rbx,%rdi
  4021f3:	e8 f8 fb ff ff       	callq  401df0 <expand>
  4021f8:	8b 43 10             	mov    0x10(%rbx),%eax
  4021fb:	8b 0b                	mov    (%rbx),%ecx
  4021fd:	eb c3                	jmp    4021c2 <Seq_addhi+0x22>
  4021ff:	90                   	nop
  402200:	48 8d 3d b1 4b 20 00 	lea    0x204bb1(%rip),%rdi        # 606db8 <Assert_Failed>
  402207:	48 8d 35 d0 36 00 00 	lea    0x36d0(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  40220e:	ba 5b 00 00 00       	mov    $0x5b,%edx
  402213:	e8 d8 f7 ff ff       	callq  4019f0 <Except_raise>
  402218:	eb 9f                	jmp    4021b9 <Seq_addhi+0x19>
  40221a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402220 <Seq_seq>:
  402220:	53                   	push   %rbx
  402221:	48 83 ec 60          	sub    $0x60,%rsp
  402225:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
  40222a:	48 89 fe             	mov    %rdi,%rsi
  40222d:	31 ff                	xor    %edi,%edi
  40222f:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
  402234:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
  402239:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  40223e:	4c 89 44 24 50       	mov    %r8,0x50(%rsp)
  402243:	4c 89 4c 24 58       	mov    %r9,0x58(%rsp)
  402248:	e8 03 fc ff ff       	callq  401e50 <Seq_new>
  40224d:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
  402252:	48 89 c3             	mov    %rax,%rbx
  402255:	48 8d 44 24 70       	lea    0x70(%rsp),%rax
  40225a:	c7 44 24 10 08 00 00 	movl   $0x8,0x10(%rsp)
  402261:	00 
  402262:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  402267:	48 8d 44 24 30       	lea    0x30(%rsp),%rax
  40226c:	48 85 f6             	test   %rsi,%rsi
  40226f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  402274:	75 20                	jne    402296 <Seq_seq+0x76>
  402276:	eb 45                	jmp    4022bd <Seq_seq+0x9d>
  402278:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40227f:	00 
  402280:	89 d0                	mov    %edx,%eax
  402282:	48 03 44 24 20       	add    0x20(%rsp),%rax
  402287:	83 c2 08             	add    $0x8,%edx
  40228a:	89 54 24 10          	mov    %edx,0x10(%rsp)
  40228e:	48 8b 30             	mov    (%rax),%rsi
  402291:	48 85 f6             	test   %rsi,%rsi
  402294:	74 27                	je     4022bd <Seq_seq+0x9d>
  402296:	48 89 df             	mov    %rbx,%rdi
  402299:	e8 02 ff ff ff       	callq  4021a0 <Seq_addhi>
  40229e:	8b 54 24 10          	mov    0x10(%rsp),%edx
  4022a2:	83 fa 30             	cmp    $0x30,%edx
  4022a5:	72 d9                	jb     402280 <Seq_seq+0x60>
  4022a7:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4022ac:	48 8d 50 08          	lea    0x8(%rax),%rdx
  4022b0:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
  4022b5:	48 8b 30             	mov    (%rax),%rsi
  4022b8:	48 85 f6             	test   %rsi,%rsi
  4022bb:	75 d9                	jne    402296 <Seq_seq+0x76>
  4022bd:	48 89 d8             	mov    %rbx,%rax
  4022c0:	48 83 c4 60          	add    $0x60,%rsp
  4022c4:	5b                   	pop    %rbx
  4022c5:	c3                   	retq   
  4022c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4022cd:	00 00 00 

00000000004022d0 <Seq_addlo>:
  4022d0:	55                   	push   %rbp
  4022d1:	48 89 f5             	mov    %rsi,%rbp
  4022d4:	53                   	push   %rbx
  4022d5:	48 89 fb             	mov    %rdi,%rbx
  4022d8:	48 83 ec 08          	sub    $0x8,%rsp
  4022dc:	48 85 ff             	test   %rdi,%rdi
  4022df:	74 4f                	je     402330 <Seq_addlo+0x60>
  4022e1:	8b 0b                	mov    (%rbx),%ecx
  4022e3:	39 4b 10             	cmp    %ecx,0x10(%rbx)
  4022e6:	74 38                	je     402320 <Seq_addlo+0x50>
  4022e8:	8b 43 14             	mov    0x14(%rbx),%eax
  4022eb:	83 e8 01             	sub    $0x1,%eax
  4022ee:	85 c0                	test   %eax,%eax
  4022f0:	89 43 14             	mov    %eax,0x14(%rbx)
  4022f3:	79 06                	jns    4022fb <Seq_addlo+0x2b>
  4022f5:	8d 41 ff             	lea    -0x1(%rcx),%eax
  4022f8:	89 43 14             	mov    %eax,0x14(%rbx)
  4022fb:	89 c2                	mov    %eax,%edx
  4022fd:	83 43 10 01          	addl   $0x1,0x10(%rbx)
  402301:	c1 fa 1f             	sar    $0x1f,%edx
  402304:	f7 f9                	idiv   %ecx
  402306:	48 8b 43 08          	mov    0x8(%rbx),%rax
  40230a:	48 63 d2             	movslq %edx,%rdx
  40230d:	48 89 2c d0          	mov    %rbp,(%rax,%rdx,8)
  402311:	48 83 c4 08          	add    $0x8,%rsp
  402315:	48 89 e8             	mov    %rbp,%rax
  402318:	5b                   	pop    %rbx
  402319:	5d                   	pop    %rbp
  40231a:	c3                   	retq   
  40231b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402320:	48 89 df             	mov    %rbx,%rdi
  402323:	e8 c8 fa ff ff       	callq  401df0 <expand>
  402328:	8b 0b                	mov    (%rbx),%ecx
  40232a:	eb bc                	jmp    4022e8 <Seq_addlo+0x18>
  40232c:	0f 1f 40 00          	nopl   0x0(%rax)
  402330:	48 8d 3d 81 4a 20 00 	lea    0x204a81(%rip),%rdi        # 606db8 <Assert_Failed>
  402337:	48 8d 35 a0 35 00 00 	lea    0x35a0(%rip),%rsi        # 4058de <_IO_stdin_used+0x1f6>
  40233e:	ba 64 00 00 00       	mov    $0x64,%edx
  402343:	e8 a8 f6 ff ff       	callq  4019f0 <Except_raise>
  402348:	eb 97                	jmp    4022e1 <Seq_addlo+0x11>
  40234a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000402350 <UArrayRep_init>:
  402350:	48 89 5c 24 e0       	mov    %rbx,-0x20(%rsp)
  402355:	48 89 6c 24 e8       	mov    %rbp,-0x18(%rsp)
  40235a:	48 89 fb             	mov    %rdi,%rbx
  40235d:	4c 89 64 24 f0       	mov    %r12,-0x10(%rsp)
  402362:	4c 89 6c 24 f8       	mov    %r13,-0x8(%rsp)
  402367:	48 83 ec 38          	sub    $0x38,%rsp
  40236b:	48 85 ff             	test   %rdi,%rdi
  40236e:	89 f5                	mov    %esi,%ebp
  402370:	41 89 d4             	mov    %edx,%r12d
  402373:	0f 84 a7 00 00 00    	je     402420 <UArrayRep_init+0xd0>
  402379:	85 ed                	test   %ebp,%ebp
  40237b:	41 0f 9f c5          	setg   %r13b
  40237f:	48 85 c9             	test   %rcx,%rcx
  402382:	74 3c                	je     4023c0 <UArrayRep_init+0x70>
  402384:	45 84 ed             	test   %r13b,%r13b
  402387:	74 37                	je     4023c0 <UArrayRep_init+0x70>
  402389:	45 85 e4             	test   %r12d,%r12d
  40238c:	7e 62                	jle    4023f0 <UArrayRep_init+0xa0>
  40238e:	31 c0                	xor    %eax,%eax
  402390:	45 84 ed             	test   %r13b,%r13b
  402393:	89 2b                	mov    %ebp,(%rbx)
  402395:	48 0f 45 c1          	cmovne %rcx,%rax
  402399:	44 89 63 04          	mov    %r12d,0x4(%rbx)
  40239d:	48 8b 6c 24 20       	mov    0x20(%rsp),%rbp
  4023a2:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4023a6:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
  4023ab:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
  4023b0:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
  4023b5:	48 83 c4 38          	add    $0x38,%rsp
  4023b9:	c3                   	retq   
  4023ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4023c0:	48 85 c9             	test   %rcx,%rcx
  4023c3:	75 04                	jne    4023c9 <UArrayRep_init+0x79>
  4023c5:	85 ed                	test   %ebp,%ebp
  4023c7:	74 c0                	je     402389 <UArrayRep_init+0x39>
  4023c9:	48 8d 3d e8 49 20 00 	lea    0x2049e8(%rip),%rdi        # 606db8 <Assert_Failed>
  4023d0:	48 8d 35 11 35 00 00 	lea    0x3511(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4023d7:	ba 14 00 00 00       	mov    $0x14,%edx
  4023dc:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  4023e1:	e8 0a f6 ff ff       	callq  4019f0 <Except_raise>
  4023e6:	45 85 e4             	test   %r12d,%r12d
  4023e9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  4023ee:	7f 9e                	jg     40238e <UArrayRep_init+0x3e>
  4023f0:	48 8d 3d c1 49 20 00 	lea    0x2049c1(%rip),%rdi        # 606db8 <Assert_Failed>
  4023f7:	48 8d 35 ea 34 00 00 	lea    0x34ea(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4023fe:	ba 15 00 00 00       	mov    $0x15,%edx
  402403:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  402408:	e8 e3 f5 ff ff       	callq  4019f0 <Except_raise>
  40240d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  402412:	e9 77 ff ff ff       	jmpq   40238e <UArrayRep_init+0x3e>
  402417:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40241e:	00 00 
  402420:	48 8d 3d 91 49 20 00 	lea    0x204991(%rip),%rdi        # 606db8 <Assert_Failed>
  402427:	48 8d 35 ba 34 00 00 	lea    0x34ba(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  40242e:	ba 13 00 00 00       	mov    $0x13,%edx
  402433:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  402438:	e8 b3 f5 ff ff       	callq  4019f0 <Except_raise>
  40243d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
  402442:	e9 32 ff ff ff       	jmpq   402379 <UArrayRep_init+0x29>
  402447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40244e:	00 00 

0000000000402450 <UArray_new>:
  402450:	4c 89 64 24 f8       	mov    %r12,-0x8(%rsp)
  402455:	41 89 f4             	mov    %esi,%r12d
  402458:	48 8d 35 89 34 00 00 	lea    0x3489(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  40245f:	48 89 5c 24 e8       	mov    %rbx,-0x18(%rsp)
  402464:	48 89 6c 24 f0       	mov    %rbp,-0x10(%rsp)
  402469:	89 fb                	mov    %edi,%ebx
  40246b:	48 83 ec 18          	sub    $0x18,%rsp
  40246f:	ba 0b 00 00 00       	mov    $0xb,%edx
  402474:	bf 10 00 00 00       	mov    $0x10,%edi
  402479:	e8 b2 f6 ff ff       	callq  401b30 <Mem_alloc>
  40247e:	85 db                	test   %ebx,%ebx
  402480:	48 89 c5             	mov    %rax,%rbp
  402483:	7e 43                	jle    4024c8 <UArray_new+0x78>
  402485:	48 8d 15 5c 34 00 00 	lea    0x345c(%rip),%rdx        # 4058e8 <_IO_stdin_used+0x200>
  40248c:	49 63 f4             	movslq %r12d,%rsi
  40248f:	48 63 fb             	movslq %ebx,%rdi
  402492:	b9 0d 00 00 00       	mov    $0xd,%ecx
  402497:	e8 54 f7 ff ff       	callq  401bf0 <Mem_calloc>
  40249c:	44 89 e2             	mov    %r12d,%edx
  40249f:	48 89 c1             	mov    %rax,%rcx
  4024a2:	89 de                	mov    %ebx,%esi
  4024a4:	48 89 ef             	mov    %rbp,%rdi
  4024a7:	e8 a4 fe ff ff       	callq  402350 <UArrayRep_init>
  4024ac:	48 89 e8             	mov    %rbp,%rax
  4024af:	48 8b 1c 24          	mov    (%rsp),%rbx
  4024b3:	48 8b 6c 24 08       	mov    0x8(%rsp),%rbp
  4024b8:	4c 8b 64 24 10       	mov    0x10(%rsp),%r12
  4024bd:	48 83 c4 18          	add    $0x18,%rsp
  4024c1:	c3                   	retq   
  4024c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4024c8:	31 c9                	xor    %ecx,%ecx
  4024ca:	44 89 e2             	mov    %r12d,%edx
  4024cd:	89 de                	mov    %ebx,%esi
  4024cf:	48 89 c7             	mov    %rax,%rdi
  4024d2:	e8 79 fe ff ff       	callq  402350 <UArrayRep_init>
  4024d7:	eb d3                	jmp    4024ac <UArray_new+0x5c>
  4024d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004024e0 <UArray_free>:
  4024e0:	48 85 ff             	test   %rdi,%rdi
  4024e3:	53                   	push   %rbx
  4024e4:	48 89 fb             	mov    %rdi,%rbx
  4024e7:	74 47                	je     402530 <UArray_free+0x50>
  4024e9:	48 8b 07             	mov    (%rdi),%rax
  4024ec:	48 85 c0             	test   %rax,%rax
  4024ef:	74 3f                	je     402530 <UArray_free+0x50>
  4024f1:	48 8b 78 08          	mov    0x8(%rax),%rdi
  4024f5:	48 8d 35 ec 33 00 00 	lea    0x33ec(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4024fc:	ba 1f 00 00 00       	mov    $0x1f,%edx
  402501:	e8 da f7 ff ff       	callq  401ce0 <Mem_free>
  402506:	48 8b 3b             	mov    (%rbx),%rdi
  402509:	48 8d 35 d8 33 00 00 	lea    0x33d8(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  402510:	ba 20 00 00 00       	mov    $0x20,%edx
  402515:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
  40251c:	00 
  40251d:	e8 be f7 ff ff       	callq  401ce0 <Mem_free>
  402522:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
  402529:	5b                   	pop    %rbx
  40252a:	c3                   	retq   
  40252b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402530:	48 8d 3d 81 48 20 00 	lea    0x204881(%rip),%rdi        # 606db8 <Assert_Failed>
  402537:	48 8d 35 aa 33 00 00 	lea    0x33aa(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  40253e:	ba 1e 00 00 00       	mov    $0x1e,%edx
  402543:	e8 a8 f4 ff ff       	callq  4019f0 <Except_raise>
  402548:	48 8b 03             	mov    (%rbx),%rax
  40254b:	eb a4                	jmp    4024f1 <UArray_free+0x11>
  40254d:	0f 1f 00             	nopl   (%rax)

0000000000402550 <UArray_at>:
  402550:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  402555:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  40255a:	48 83 ec 18          	sub    $0x18,%rsp
  40255e:	48 85 ff             	test   %rdi,%rdi
  402561:	48 89 fb             	mov    %rdi,%rbx
  402564:	89 f5                	mov    %esi,%ebp
  402566:	74 40                	je     4025a8 <UArray_at+0x58>
  402568:	85 ed                	test   %ebp,%ebp
  40256a:	78 04                	js     402570 <UArray_at+0x20>
  40256c:	3b 2b                	cmp    (%rbx),%ebp
  40256e:	7c 18                	jl     402588 <UArray_at+0x38>
  402570:	48 8d 3d 41 48 20 00 	lea    0x204841(%rip),%rdi        # 606db8 <Assert_Failed>
  402577:	48 8d 35 6a 33 00 00 	lea    0x336a(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  40257e:	ba 24 00 00 00       	mov    $0x24,%edx
  402583:	e8 68 f4 ff ff       	callq  4019f0 <Except_raise>
  402588:	0f af 6b 04          	imul   0x4(%rbx),%ebp
  40258c:	48 63 c5             	movslq %ebp,%rax
  40258f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  402594:	48 03 43 08          	add    0x8(%rbx),%rax
  402598:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40259d:	48 83 c4 18          	add    $0x18,%rsp
  4025a1:	c3                   	retq   
  4025a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4025a8:	48 8d 3d 09 48 20 00 	lea    0x204809(%rip),%rdi        # 606db8 <Assert_Failed>
  4025af:	48 8d 35 32 33 00 00 	lea    0x3332(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4025b6:	ba 23 00 00 00       	mov    $0x23,%edx
  4025bb:	e8 30 f4 ff ff       	callq  4019f0 <Except_raise>
  4025c0:	eb a6                	jmp    402568 <UArray_at+0x18>
  4025c2:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4025c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004025d0 <UArray_length>:
  4025d0:	48 85 ff             	test   %rdi,%rdi
  4025d3:	53                   	push   %rbx
  4025d4:	48 89 fb             	mov    %rdi,%rbx
  4025d7:	74 07                	je     4025e0 <UArray_length+0x10>
  4025d9:	8b 03                	mov    (%rbx),%eax
  4025db:	5b                   	pop    %rbx
  4025dc:	c3                   	retq   
  4025dd:	0f 1f 00             	nopl   (%rax)
  4025e0:	48 8d 3d d1 47 20 00 	lea    0x2047d1(%rip),%rdi        # 606db8 <Assert_Failed>
  4025e7:	48 8d 35 fa 32 00 00 	lea    0x32fa(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4025ee:	ba 28 00 00 00       	mov    $0x28,%edx
  4025f3:	e8 f8 f3 ff ff       	callq  4019f0 <Except_raise>
  4025f8:	8b 03                	mov    (%rbx),%eax
  4025fa:	5b                   	pop    %rbx
  4025fb:	c3                   	retq   
  4025fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000402600 <UArray_size>:
  402600:	48 85 ff             	test   %rdi,%rdi
  402603:	53                   	push   %rbx
  402604:	48 89 fb             	mov    %rdi,%rbx
  402607:	74 07                	je     402610 <UArray_size+0x10>
  402609:	8b 43 04             	mov    0x4(%rbx),%eax
  40260c:	5b                   	pop    %rbx
  40260d:	c3                   	retq   
  40260e:	66 90                	xchg   %ax,%ax
  402610:	48 8d 3d a1 47 20 00 	lea    0x2047a1(%rip),%rdi        # 606db8 <Assert_Failed>
  402617:	48 8d 35 ca 32 00 00 	lea    0x32ca(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  40261e:	ba 2c 00 00 00       	mov    $0x2c,%edx
  402623:	e8 c8 f3 ff ff       	callq  4019f0 <Except_raise>
  402628:	8b 43 04             	mov    0x4(%rbx),%eax
  40262b:	5b                   	pop    %rbx
  40262c:	c3                   	retq   
  40262d:	0f 1f 00             	nopl   (%rax)

0000000000402630 <UArray_resize>:
  402630:	48 89 5c 24 f0       	mov    %rbx,-0x10(%rsp)
  402635:	48 89 6c 24 f8       	mov    %rbp,-0x8(%rsp)
  40263a:	48 83 ec 18          	sub    $0x18,%rsp
  40263e:	48 85 ff             	test   %rdi,%rdi
  402641:	48 89 fb             	mov    %rdi,%rbx
  402644:	89 f5                	mov    %esi,%ebp
  402646:	0f 84 a4 00 00 00    	je     4026f0 <UArray_resize+0xc0>
  40264c:	83 fd 00             	cmp    $0x0,%ebp
  40264f:	0f 8c 7b 00 00 00    	jl     4026d0 <UArray_resize+0xa0>
  402655:	74 59                	je     4026b0 <UArray_resize+0x80>
  402657:	8b 03                	mov    (%rbx),%eax
  402659:	85 c0                	test   %eax,%eax
  40265b:	74 33                	je     402690 <UArray_resize+0x60>
  40265d:	8b 73 04             	mov    0x4(%rbx),%esi
  402660:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  402664:	48 8d 15 7d 32 00 00 	lea    0x327d(%rip),%rdx        # 4058e8 <_IO_stdin_used+0x200>
  40266b:	b9 37 00 00 00       	mov    $0x37,%ecx
  402670:	0f af f5             	imul   %ebp,%esi
  402673:	48 63 f6             	movslq %esi,%rsi
  402676:	e8 85 f6 ff ff       	callq  401d00 <Mem_resize>
  40267b:	48 89 43 08          	mov    %rax,0x8(%rbx)
  40267f:	89 2b                	mov    %ebp,(%rbx)
  402681:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  402686:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  40268b:	48 83 c4 18          	add    $0x18,%rsp
  40268f:	c3                   	retq   
  402690:	8b 7b 04             	mov    0x4(%rbx),%edi
  402693:	48 8d 35 4e 32 00 00 	lea    0x324e(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  40269a:	ba 35 00 00 00       	mov    $0x35,%edx
  40269f:	0f af fd             	imul   %ebp,%edi
  4026a2:	48 63 ff             	movslq %edi,%rdi
  4026a5:	e8 86 f4 ff ff       	callq  401b30 <Mem_alloc>
  4026aa:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4026ae:	eb cf                	jmp    40267f <UArray_resize+0x4f>
  4026b0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
  4026b4:	48 8d 35 2d 32 00 00 	lea    0x322d(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4026bb:	ba 33 00 00 00       	mov    $0x33,%edx
  4026c0:	e8 1b f6 ff ff       	callq  401ce0 <Mem_free>
  4026c5:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
  4026cc:	00 
  4026cd:	eb b0                	jmp    40267f <UArray_resize+0x4f>
  4026cf:	90                   	nop
  4026d0:	48 8d 3d e1 46 20 00 	lea    0x2046e1(%rip),%rdi        # 606db8 <Assert_Failed>
  4026d7:	48 8d 35 0a 32 00 00 	lea    0x320a(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4026de:	ba 31 00 00 00       	mov    $0x31,%edx
  4026e3:	e8 08 f3 ff ff       	callq  4019f0 <Except_raise>
  4026e8:	e9 6a ff ff ff       	jmpq   402657 <UArray_resize+0x27>
  4026ed:	0f 1f 00             	nopl   (%rax)
  4026f0:	48 8d 3d c1 46 20 00 	lea    0x2046c1(%rip),%rdi        # 606db8 <Assert_Failed>
  4026f7:	48 8d 35 ea 31 00 00 	lea    0x31ea(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4026fe:	ba 30 00 00 00       	mov    $0x30,%edx
  402703:	e8 e8 f2 ff ff       	callq  4019f0 <Except_raise>
  402708:	e9 3f ff ff ff       	jmpq   40264c <UArray_resize+0x1c>
  40270d:	0f 1f 00             	nopl   (%rax)

0000000000402710 <UArray_copy>:
  402710:	55                   	push   %rbp
  402711:	89 f5                	mov    %esi,%ebp
  402713:	53                   	push   %rbx
  402714:	48 89 fb             	mov    %rdi,%rbx
  402717:	48 83 ec 08          	sub    $0x8,%rsp
  40271b:	48 85 ff             	test   %rdi,%rdi
  40271e:	0f 84 94 00 00 00    	je     4027b8 <UArray_copy+0xa8>
  402724:	85 ed                	test   %ebp,%ebp
  402726:	78 70                	js     402798 <UArray_copy+0x88>
  402728:	8b 73 04             	mov    0x4(%rbx),%esi
  40272b:	89 ef                	mov    %ebp,%edi
  40272d:	e8 1e fd ff ff       	callq  402450 <UArray_new>
  402732:	8b 10                	mov    (%rax),%edx
  402734:	48 89 c5             	mov    %rax,%rbp
  402737:	8b 03                	mov    (%rbx),%eax
  402739:	39 c2                	cmp    %eax,%edx
  40273b:	7c 33                	jl     402770 <UArray_copy+0x60>
  40273d:	85 c0                	test   %eax,%eax
  40273f:	7f 0f                	jg     402750 <UArray_copy+0x40>
  402741:	48 83 c4 08          	add    $0x8,%rsp
  402745:	48 89 e8             	mov    %rbp,%rax
  402748:	5b                   	pop    %rbx
  402749:	5d                   	pop    %rbp
  40274a:	c3                   	retq   
  40274b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402750:	0f af 43 04          	imul   0x4(%rbx),%eax
  402754:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
  402758:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  40275c:	48 63 d0             	movslq %eax,%rdx
  40275f:	e8 4c e4 ff ff       	callq  400bb0 <memcpy@plt>
  402764:	48 83 c4 08          	add    $0x8,%rsp
  402768:	48 89 e8             	mov    %rbp,%rax
  40276b:	5b                   	pop    %rbx
  40276c:	5d                   	pop    %rbp
  40276d:	c3                   	retq   
  40276e:	66 90                	xchg   %ax,%ax
  402770:	85 d2                	test   %edx,%edx
  402772:	7e cd                	jle    402741 <UArray_copy+0x31>
  402774:	0f af 53 04          	imul   0x4(%rbx),%edx
  402778:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
  40277c:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  402780:	48 63 d2             	movslq %edx,%rdx
  402783:	e8 28 e4 ff ff       	callq  400bb0 <memcpy@plt>
  402788:	48 83 c4 08          	add    $0x8,%rsp
  40278c:	48 89 e8             	mov    %rbp,%rax
  40278f:	5b                   	pop    %rbx
  402790:	5d                   	pop    %rbp
  402791:	c3                   	retq   
  402792:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402798:	48 8d 3d 19 46 20 00 	lea    0x204619(%rip),%rdi        # 606db8 <Assert_Failed>
  40279f:	48 8d 35 42 31 00 00 	lea    0x3142(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4027a6:	ba 3d 00 00 00       	mov    $0x3d,%edx
  4027ab:	e8 40 f2 ff ff       	callq  4019f0 <Except_raise>
  4027b0:	e9 73 ff ff ff       	jmpq   402728 <UArray_copy+0x18>
  4027b5:	0f 1f 00             	nopl   (%rax)
  4027b8:	48 8d 3d f9 45 20 00 	lea    0x2045f9(%rip),%rdi        # 606db8 <Assert_Failed>
  4027bf:	48 8d 35 22 31 00 00 	lea    0x3122(%rip),%rsi        # 4058e8 <_IO_stdin_used+0x200>
  4027c6:	ba 3c 00 00 00       	mov    $0x3c,%edx
  4027cb:	e8 20 f2 ff ff       	callq  4019f0 <Except_raise>
  4027d0:	e9 4f ff ff ff       	jmpq   402724 <UArray_copy+0x14>
  4027d5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4027dc:	00 00 00 
  4027df:	90                   	nop

00000000004027e0 <Bitpack_gets.part.0>:
  4027e0:	41 55                	push   %r13
  4027e2:	41 54                	push   %r12
  4027e4:	49 89 fc             	mov    %rdi,%r12
  4027e7:	55                   	push   %rbp
  4027e8:	89 f5                	mov    %esi,%ebp
  4027ea:	53                   	push   %rbx
  4027eb:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  4027ee:	48 83 ec 08          	sub    $0x8,%rsp
  4027f2:	83 fb 40             	cmp    $0x40,%ebx
  4027f5:	77 49                	ja     402840 <Bitpack_gets.part.0+0x60>
  4027f7:	b9 40 00 00 00       	mov    $0x40,%ecx
  4027fc:	89 c8                	mov    %ecx,%eax
  4027fe:	29 d9                	sub    %ebx,%ecx
  402800:	29 e8                	sub    %ebp,%eax
  402802:	83 f9 40             	cmp    $0x40,%ecx
  402805:	41 89 cd             	mov    %ecx,%r13d
  402808:	89 c5                	mov    %eax,%ebp
  40280a:	77 74                	ja     402880 <Bitpack_gets.part.0+0xa0>
  40280c:	bb 00 00 00 00       	mov    $0x0,%ebx
  402811:	74 09                	je     40281c <Bitpack_gets.part.0+0x3c>
  402813:	4c 89 e3             	mov    %r12,%rbx
  402816:	44 89 e9             	mov    %r13d,%ecx
  402819:	48 d3 e3             	shl    %cl,%rbx
  40281c:	83 fd 40             	cmp    $0x40,%ebp
  40281f:	77 3f                	ja     402860 <Bitpack_gets.part.0+0x80>
  402821:	b9 3f 00 00 00       	mov    $0x3f,%ecx
  402826:	74 02                	je     40282a <Bitpack_gets.part.0+0x4a>
  402828:	89 e9                	mov    %ebp,%ecx
  40282a:	48 83 c4 08          	add    $0x8,%rsp
  40282e:	48 89 d8             	mov    %rbx,%rax
  402831:	5b                   	pop    %rbx
  402832:	5d                   	pop    %rbp
  402833:	41 5c                	pop    %r12
  402835:	48 d3 f8             	sar    %cl,%rax
  402838:	41 5d                	pop    %r13
  40283a:	c3                   	retq   
  40283b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  402840:	ba 50 00 00 00       	mov    $0x50,%edx
  402845:	be f5 58 40 00       	mov    $0x4058f5,%esi
  40284a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40284f:	e8 9c f1 ff ff       	callq  4019f0 <Except_raise>
  402854:	eb a1                	jmp    4027f7 <Bitpack_gets.part.0+0x17>
  402856:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40285d:	00 00 00 
  402860:	ba 2c 00 00 00       	mov    $0x2c,%edx
  402865:	be f5 58 40 00       	mov    $0x4058f5,%esi
  40286a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40286f:	e8 7c f1 ff ff       	callq  4019f0 <Except_raise>
  402874:	eb b2                	jmp    402828 <Bitpack_gets.part.0+0x48>
  402876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40287d:	00 00 00 
  402880:	ba 14 00 00 00       	mov    $0x14,%edx
  402885:	be f5 58 40 00       	mov    $0x4058f5,%esi
  40288a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40288f:	e8 5c f1 ff ff       	callq  4019f0 <Except_raise>
  402894:	e9 7a ff ff ff       	jmpq   402813 <Bitpack_gets.part.0+0x33>
  402899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004028a0 <Bitpack_fitss>:
  4028a0:	83 fe 3f             	cmp    $0x3f,%esi
  4028a3:	b8 01 00 00 00       	mov    $0x1,%eax
  4028a8:	77 1d                	ja     4028c7 <Bitpack_fitss+0x27>
  4028aa:	b9 40 00 00 00       	mov    $0x40,%ecx
  4028af:	31 c0                	xor    %eax,%eax
  4028b1:	29 f1                	sub    %esi,%ecx
  4028b3:	83 f9 40             	cmp    $0x40,%ecx
  4028b6:	74 09                	je     4028c1 <Bitpack_fitss+0x21>
  4028b8:	48 89 f8             	mov    %rdi,%rax
  4028bb:	48 d3 e0             	shl    %cl,%rax
  4028be:	48 d3 f8             	sar    %cl,%rax
  4028c1:	48 39 c7             	cmp    %rax,%rdi
  4028c4:	0f 94 c0             	sete   %al
  4028c7:	f3 c3                	repz retq 
  4028c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004028d0 <Bitpack_fitsu>:
  4028d0:	83 fe 3f             	cmp    $0x3f,%esi
  4028d3:	b8 01 00 00 00       	mov    $0x1,%eax
  4028d8:	77 0b                	ja     4028e5 <Bitpack_fitsu+0x15>
  4028da:	89 f1                	mov    %esi,%ecx
  4028dc:	48 d3 ef             	shr    %cl,%rdi
  4028df:	48 85 ff             	test   %rdi,%rdi
  4028e2:	0f 94 c0             	sete   %al
  4028e5:	f3 c3                	repz retq 
  4028e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4028ee:	00 00 

00000000004028f0 <Bitpack_gets>:
  4028f0:	85 f6                	test   %esi,%esi
  4028f2:	74 0c                	je     402900 <Bitpack_gets+0x10>
  4028f4:	e9 e7 fe ff ff       	jmpq   4027e0 <Bitpack_gets.part.0>
  4028f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402900:	31 c0                	xor    %eax,%eax
  402902:	c3                   	retq   
  402903:	66 66 66 66 2e 0f 1f 	data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  40290a:	84 00 00 00 00 00 

0000000000402910 <Bitpack_getu>:
  402910:	41 55                	push   %r13
  402912:	49 89 fd             	mov    %rdi,%r13
  402915:	41 54                	push   %r12
  402917:	55                   	push   %rbp
  402918:	89 f5                	mov    %esi,%ebp
  40291a:	53                   	push   %rbx
  40291b:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  40291e:	48 83 ec 08          	sub    $0x8,%rsp
  402922:	83 fb 40             	cmp    $0x40,%ebx
  402925:	77 49                	ja     402970 <Bitpack_getu+0x60>
  402927:	b8 40 00 00 00       	mov    $0x40,%eax
  40292c:	89 c6                	mov    %eax,%esi
  40292e:	29 d8                	sub    %ebx,%eax
  402930:	29 ee                	sub    %ebp,%esi
  402932:	83 f8 40             	cmp    $0x40,%eax
  402935:	89 c3                	mov    %eax,%ebx
  402937:	89 f5                	mov    %esi,%ebp
  402939:	77 75                	ja     4029b0 <Bitpack_getu+0xa0>
  40293b:	41 bc 00 00 00 00    	mov    $0x0,%r12d
  402941:	74 08                	je     40294b <Bitpack_getu+0x3b>
  402943:	89 d9                	mov    %ebx,%ecx
  402945:	49 d3 e5             	shl    %cl,%r13
  402948:	4d 89 ec             	mov    %r13,%r12
  40294b:	83 fd 40             	cmp    $0x40,%ebp
  40294e:	77 40                	ja     402990 <Bitpack_getu+0x80>
  402950:	b8 00 00 00 00       	mov    $0x0,%eax
  402955:	74 08                	je     40295f <Bitpack_getu+0x4f>
  402957:	4c 89 e0             	mov    %r12,%rax
  40295a:	89 e9                	mov    %ebp,%ecx
  40295c:	48 d3 e8             	shr    %cl,%rax
  40295f:	48 83 c4 08          	add    $0x8,%rsp
  402963:	5b                   	pop    %rbx
  402964:	5d                   	pop    %rbp
  402965:	41 5c                	pop    %r12
  402967:	41 5d                	pop    %r13
  402969:	c3                   	retq   
  40296a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402970:	ba 58 00 00 00       	mov    $0x58,%edx
  402975:	be f5 58 40 00       	mov    $0x4058f5,%esi
  40297a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40297f:	e8 6c f0 ff ff       	callq  4019f0 <Except_raise>
  402984:	eb a1                	jmp    402927 <Bitpack_getu+0x17>
  402986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40298d:	00 00 00 
  402990:	ba 20 00 00 00       	mov    $0x20,%edx
  402995:	be f5 58 40 00       	mov    $0x4058f5,%esi
  40299a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  40299f:	e8 4c f0 ff ff       	callq  4019f0 <Except_raise>
  4029a4:	eb b1                	jmp    402957 <Bitpack_getu+0x47>
  4029a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4029ad:	00 00 00 
  4029b0:	ba 14 00 00 00       	mov    $0x14,%edx
  4029b5:	be f5 58 40 00       	mov    $0x4058f5,%esi
  4029ba:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  4029bf:	e8 2c f0 ff ff       	callq  4019f0 <Except_raise>
  4029c4:	e9 7a ff ff ff       	jmpq   402943 <Bitpack_getu+0x33>
  4029c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004029d0 <Bitpack_newu>:
  4029d0:	41 56                	push   %r14
  4029d2:	49 89 fe             	mov    %rdi,%r14
  4029d5:	41 55                	push   %r13
  4029d7:	41 89 f5             	mov    %esi,%r13d
  4029da:	41 54                	push   %r12
  4029dc:	49 89 cc             	mov    %rcx,%r12
  4029df:	55                   	push   %rbp
  4029e0:	89 d5                	mov    %edx,%ebp
  4029e2:	53                   	push   %rbx
  4029e3:	8d 1c 32             	lea    (%rdx,%rsi,1),%ebx
  4029e6:	83 fb 40             	cmp    $0x40,%ebx
  4029e9:	0f 87 f9 00 00 00    	ja     402ae8 <Bitpack_newu+0x118>
  4029ef:	44 89 ee             	mov    %r13d,%esi
  4029f2:	4c 89 e7             	mov    %r12,%rdi
  4029f5:	e8 d6 fe ff ff       	callq  4028d0 <Bitpack_fitsu>
  4029fa:	84 c0                	test   %al,%al
  4029fc:	0f 84 c6 00 00 00    	je     402ac8 <Bitpack_newu+0xf8>
  402a02:	83 fb 40             	cmp    $0x40,%ebx
  402a05:	0f 87 85 00 00 00    	ja     402a90 <Bitpack_newu+0xc0>
  402a0b:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  402a11:	74 0d                	je     402a20 <Bitpack_newu+0x50>
  402a13:	4d 89 f5             	mov    %r14,%r13
  402a16:	89 d9                	mov    %ebx,%ecx
  402a18:	49 d3 ed             	shr    %cl,%r13
  402a1b:	89 d9                	mov    %ebx,%ecx
  402a1d:	49 d3 e5             	shl    %cl,%r13
  402a20:	bb 40 00 00 00       	mov    $0x40,%ebx
  402a25:	29 eb                	sub    %ebp,%ebx
  402a27:	83 fb 40             	cmp    $0x40,%ebx
  402a2a:	77 34                	ja     402a60 <Bitpack_newu+0x90>
  402a2c:	ba 00 00 00 00       	mov    $0x0,%edx
  402a31:	74 0d                	je     402a40 <Bitpack_newu+0x70>
  402a33:	89 d9                	mov    %ebx,%ecx
  402a35:	49 d3 e6             	shl    %cl,%r14
  402a38:	4c 89 f2             	mov    %r14,%rdx
  402a3b:	89 d9                	mov    %ebx,%ecx
  402a3d:	48 d3 ea             	shr    %cl,%rdx
  402a40:	5b                   	pop    %rbx
  402a41:	4c 89 e0             	mov    %r12,%rax
  402a44:	89 e9                	mov    %ebp,%ecx
  402a46:	5d                   	pop    %rbp
  402a47:	41 5c                	pop    %r12
  402a49:	48 d3 e0             	shl    %cl,%rax
  402a4c:	4c 09 e8             	or     %r13,%rax
  402a4f:	41 5d                	pop    %r13
  402a51:	48 09 d0             	or     %rdx,%rax
  402a54:	41 5e                	pop    %r14
  402a56:	c3                   	retq   
  402a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402a5e:	00 00 
  402a60:	ba 14 00 00 00       	mov    $0x14,%edx
  402a65:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402a6a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  402a6f:	e8 7c ef ff ff       	callq  4019f0 <Except_raise>
  402a74:	89 d9                	mov    %ebx,%ecx
  402a76:	ba 20 00 00 00       	mov    $0x20,%edx
  402a7b:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402a80:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  402a85:	49 d3 e6             	shl    %cl,%r14
  402a88:	e8 63 ef ff ff       	callq  4019f0 <Except_raise>
  402a8d:	eb a9                	jmp    402a38 <Bitpack_newu+0x68>
  402a8f:	90                   	nop
  402a90:	ba 20 00 00 00       	mov    $0x20,%edx
  402a95:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402a9a:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  402a9f:	e8 4c ef ff ff       	callq  4019f0 <Except_raise>
  402aa4:	4d 89 f5             	mov    %r14,%r13
  402aa7:	89 d9                	mov    %ebx,%ecx
  402aa9:	ba 14 00 00 00       	mov    $0x14,%edx
  402aae:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402ab3:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  402ab8:	49 d3 ed             	shr    %cl,%r13
  402abb:	e8 30 ef ff ff       	callq  4019f0 <Except_raise>
  402ac0:	e9 56 ff ff ff       	jmpq   402a1b <Bitpack_newu+0x4b>
  402ac5:	0f 1f 00             	nopl   (%rax)
  402ac8:	ba 65 00 00 00       	mov    $0x65,%edx
  402acd:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402ad2:	bf 08 71 60 00       	mov    $0x607108,%edi
  402ad7:	e8 14 ef ff ff       	callq  4019f0 <Except_raise>
  402adc:	e9 21 ff ff ff       	jmpq   402a02 <Bitpack_newu+0x32>
  402ae1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  402ae8:	ba 63 00 00 00       	mov    $0x63,%edx
  402aed:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402af2:	bf b8 6d 60 00       	mov    $0x606db8,%edi
  402af7:	e8 f4 ee ff ff       	callq  4019f0 <Except_raise>
  402afc:	e9 ee fe ff ff       	jmpq   4029ef <Bitpack_newu+0x1f>
  402b01:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  402b08:	0f 1f 84 00 00 00 00 
  402b0f:	00 

0000000000402b10 <Bitpack_news>:
  402b10:	41 55                	push   %r13
  402b12:	41 89 d5             	mov    %edx,%r13d
  402b15:	41 54                	push   %r12
  402b17:	49 89 fc             	mov    %rdi,%r12
  402b1a:	48 89 cf             	mov    %rcx,%rdi
  402b1d:	55                   	push   %rbp
  402b1e:	48 89 cd             	mov    %rcx,%rbp
  402b21:	53                   	push   %rbx
  402b22:	89 f3                	mov    %esi,%ebx
  402b24:	48 83 ec 08          	sub    $0x8,%rsp
  402b28:	e8 73 fd ff ff       	callq  4028a0 <Bitpack_fitss>
  402b2d:	84 c0                	test   %al,%al
  402b2f:	75 14                	jne    402b45 <Bitpack_news+0x35>
  402b31:	ba 6f 00 00 00       	mov    $0x6f,%edx
  402b36:	be f5 58 40 00       	mov    $0x4058f5,%esi
  402b3b:	bf 08 71 60 00       	mov    $0x607108,%edi
  402b40:	e8 ab ee ff ff       	callq  4019f0 <Except_raise>
  402b45:	89 de                	mov    %ebx,%esi
  402b47:	48 89 ef             	mov    %rbp,%rdi
  402b4a:	31 d2                	xor    %edx,%edx
  402b4c:	e8 bf fd ff ff       	callq  402910 <Bitpack_getu>
  402b51:	48 83 c4 08          	add    $0x8,%rsp
  402b55:	89 de                	mov    %ebx,%esi
  402b57:	4c 89 e7             	mov    %r12,%rdi
  402b5a:	5b                   	pop    %rbx
  402b5b:	5d                   	pop    %rbp
  402b5c:	41 5c                	pop    %r12
  402b5e:	44 89 ea             	mov    %r13d,%edx
  402b61:	48 89 c1             	mov    %rax,%rcx
  402b64:	41 5d                	pop    %r13
  402b66:	e9 65 fe ff ff       	jmpq   4029d0 <Bitpack_newu>
  402b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000402b70 <Bitpack_run_tests>:
  402b70:	41 56                	push   %r14
  402b72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402b77:	55                   	push   %rbp
  402b78:	53                   	push   %rbx
  402b79:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
  402b80:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
  402b87:	00 
  402b88:	48 b8 ef be ad de ce 	movabs $0xfeedfacedeadbeef,%rax
  402b8f:	fa ed fe 
  402b92:	c7 44 24 58 00 00 00 	movl   $0x0,0x58(%rsp)
  402b99:	00 
  402b9a:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
  402ba1:	00 
  402ba2:	8b 44 24 58          	mov    0x58(%rsp),%eax
  402ba6:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
  402bab:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
  402bb0:	40 88 7c 24 43       	mov    %dil,0x43(%rsp)
  402bb5:	48 c7 84 24 b0 00 00 	movq   $0x0,0xb0(%rsp)
  402bbc:	00 00 00 00 00 
  402bc1:	83 f8 02             	cmp    $0x2,%eax
  402bc4:	c7 84 24 a0 00 00 00 	movl   $0x0,0xa0(%rsp)
  402bcb:	00 00 00 00 
  402bcf:	c7 84 24 a4 00 00 00 	movl   $0x6,0xa4(%rsp)
  402bd6:	06 00 00 00 
  402bda:	c7 84 24 a8 00 00 00 	movl   $0x8,0xa8(%rsp)
  402be1:	08 00 00 00 
  402be5:	c7 84 24 ac 00 00 00 	movl   $0x40,0xac(%rsp)
  402bec:	40 00 00 00 
  402bf0:	c7 84 24 90 00 00 00 	movl   $0x10,0x90(%rsp)
  402bf7:	10 00 00 00 
  402bfb:	c7 84 24 94 00 00 00 	movl   $0x0,0x94(%rsp)
  402c02:	00 00 00 00 
  402c06:	c7 84 24 98 00 00 00 	movl   $0x63,0x98(%rsp)
  402c0d:	63 00 00 00 
  402c11:	48 c7 84 24 00 01 00 	movq   $0xfffffffffffffffe,0x100(%rsp)
  402c18:	00 fe ff ff ff 
  402c1d:	48 c7 84 24 08 01 00 	movq   $0x7,0x108(%rsp)
  402c24:	00 07 00 00 00 
  402c29:	48 c7 84 24 10 01 00 	movq   $0x0,0x110(%rsp)
  402c30:	00 00 00 00 00 
  402c35:	48 c7 84 24 18 01 00 	movq   $0xb,0x118(%rsp)
  402c3c:	00 0b 00 00 00 
  402c41:	48 c7 84 24 20 01 00 	movq   $0xfffffffffffffff8,0x120(%rsp)
  402c48:	00 f8 ff ff ff 
  402c4d:	48 c7 84 24 28 01 00 	movq   $0xfffffffffffffff5,0x128(%rsp)
  402c54:	00 f5 ff ff ff 
  402c59:	48 c7 84 24 d0 00 00 	movq   $0x33,0xd0(%rsp)
  402c60:	00 33 00 00 00 
  402c65:	48 c7 84 24 d8 00 00 	movq   $0x7,0xd8(%rsp)
  402c6c:	00 07 00 00 00 
  402c71:	48 c7 84 24 e0 00 00 	movq   $0x0,0xe0(%rsp)
  402c78:	00 00 00 00 00 
  402c7d:	48 c7 84 24 e8 00 00 	movq   $0xb,0xe8(%rsp)
  402c84:	00 0b 00 00 00 
  402c89:	48 c7 84 24 f0 00 00 	movq   $0x1,0xf0(%rsp)
  402c90:	00 01 00 00 00 
  402c95:	0f 87 bd 02 00 00    	ja     402f58 <Bitpack_run_tests+0x3e8>
  402c9b:	48 8d 84 24 38 01 00 	lea    0x138(%rsp),%rax
  402ca2:	00 
  402ca3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
  402ca8:	8b 44 24 58          	mov    0x58(%rsp),%eax
  402cac:	c7 44 24 5c 00 00 00 	movl   $0x0,0x5c(%rsp)
  402cb3:	00 
  402cb4:	48 8b 84 c4 b0 00 00 	mov    0xb0(%rsp,%rax,8),%rax
  402cbb:	00 
  402cbc:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  402cc1:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  402cc5:	83 f8 03             	cmp    $0x3,%eax
  402cc8:	0f 87 72 02 00 00    	ja     402f40 <Bitpack_run_tests+0x3d0>
  402cce:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  402cd2:	c7 44 24 60 00 00 00 	movl   $0x0,0x60(%rsp)
  402cd9:	00 
  402cda:	b9 40 00 00 00       	mov    $0x40,%ecx
  402cdf:	8b 84 84 a0 00 00 00 	mov    0xa0(%rsp,%rax,4),%eax
  402ce6:	89 c3                	mov    %eax,%ebx
  402ce8:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  402cec:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402cf0:	29 d9                	sub    %ebx,%ecx
  402cf2:	89 4c 24 44          	mov    %ecx,0x44(%rsp)
  402cf6:	83 f8 02             	cmp    $0x2,%eax
  402cf9:	0f 87 29 02 00 00    	ja     402f28 <Bitpack_run_tests+0x3b8>
  402cff:	90                   	nop
  402d00:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402d04:	83 bc 84 90 00 00 00 	cmpl   $0x63,0x90(%rsp,%rax,4)
  402d0b:	63 
  402d0c:	0f 84 76 09 00 00    	je     403688 <Bitpack_run_tests+0xb18>
  402d12:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402d16:	8b 84 84 90 00 00 00 	mov    0x90(%rsp,%rax,4),%eax
  402d1d:	89 44 24 64          	mov    %eax,0x64(%rsp)
  402d21:	c7 44 24 68 00 00 00 	movl   $0x0,0x68(%rsp)
  402d28:	00 
  402d29:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402d2d:	83 f8 05             	cmp    $0x5,%eax
  402d30:	76 26                	jbe    402d58 <Bitpack_run_tests+0x1e8>
  402d32:	e9 d9 00 00 00       	jmpq   402e10 <Bitpack_run_tests+0x2a0>
  402d37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  402d3e:	00 00 
  402d40:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402d44:	83 c0 01             	add    $0x1,%eax
  402d47:	89 44 24 68          	mov    %eax,0x68(%rsp)
  402d4b:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402d4f:	83 f8 05             	cmp    $0x5,%eax
  402d52:	0f 87 b8 00 00 00    	ja     402e10 <Bitpack_run_tests+0x2a0>
  402d58:	8b 44 24 68          	mov    0x68(%rsp),%eax
  402d5c:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  402d63:	00 00 
  402d65:	74 08                	je     402d6f <Bitpack_run_tests+0x1ff>
  402d67:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  402d6b:	85 c0                	test   %eax,%eax
  402d6d:	74 d1                	je     402d40 <Bitpack_run_tests+0x1d0>
  402d6f:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402d73:	03 44 24 0c          	add    0xc(%rsp),%eax
  402d77:	83 f8 40             	cmp    $0x40,%eax
  402d7a:	77 c4                	ja     402d40 <Bitpack_run_tests+0x1d0>
  402d7c:	48 8b 05 ed 4b 20 00 	mov    0x204bed(%rip),%rax        # 607970 <Except_stack>
  402d83:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402d88:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402d8f:	00 
  402d90:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402d97:	00 
  402d98:	48 89 05 d1 4b 20 00 	mov    %rax,0x204bd1(%rip)        # 607970 <Except_stack>
  402d9f:	e8 dc dd ff ff       	callq  400b80 <_setjmp@plt>
  402da4:	89 44 24 6c          	mov    %eax,0x6c(%rsp)
  402da8:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  402dac:	85 c0                	test   %eax,%eax
  402dae:	0f 84 3c 05 00 00    	je     4032f0 <Bitpack_run_tests+0x780>
  402db4:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402db9:	c7 44 24 6c 02 00 00 	movl   $0x2,0x6c(%rsp)
  402dc0:	00 
  402dc1:	be 06 00 00 00       	mov    $0x6,%esi
  402dc6:	74 2d                	je     402df5 <Bitpack_run_tests+0x285>
  402dc8:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402dcc:	85 c0                	test   %eax,%eax
  402dce:	0f 84 a4 01 00 00    	je     402f78 <Bitpack_run_tests+0x408>
  402dd4:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402dd8:	03 44 24 0c          	add    0xc(%rsp),%eax
  402ddc:	83 f8 40             	cmp    $0x40,%eax
  402ddf:	0f 84 93 01 00 00    	je     402f78 <Bitpack_run_tests+0x408>
  402de5:	31 c0                	xor    %eax,%eax
  402de7:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
  402deb:	31 f6                	xor    %esi,%esi
  402ded:	85 c9                	test   %ecx,%ecx
  402def:	40 0f 94 c6          	sete   %sil
  402df3:	09 c6                	or     %eax,%esi
  402df5:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402dfa:	31 d2                	xor    %edx,%edx
  402dfc:	bf 28 59 40 00       	mov    $0x405928,%edi
  402e01:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402e06:	ff d0                	callq  *%rax
  402e08:	e9 33 ff ff ff       	jmpq   402d40 <Bitpack_run_tests+0x1d0>
  402e0d:	0f 1f 00             	nopl   (%rax)
  402e10:	c7 44 24 7c 00 00 00 	movl   $0x0,0x7c(%rsp)
  402e17:	00 
  402e18:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402e1c:	83 f8 04             	cmp    $0x4,%eax
  402e1f:	76 27                	jbe    402e48 <Bitpack_run_tests+0x2d8>
  402e21:	e9 ea 00 00 00       	jmpq   402f10 <Bitpack_run_tests+0x3a0>
  402e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  402e2d:	00 00 00 
  402e30:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402e34:	83 c0 01             	add    $0x1,%eax
  402e37:	89 44 24 7c          	mov    %eax,0x7c(%rsp)
  402e3b:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402e3f:	83 f8 04             	cmp    $0x4,%eax
  402e42:	0f 87 c8 00 00 00    	ja     402f10 <Bitpack_run_tests+0x3a0>
  402e48:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402e4c:	48 83 bc c4 d0 00 00 	cmpq   $0x0,0xd0(%rsp,%rax,8)
  402e53:	00 00 
  402e55:	74 0a                	je     402e61 <Bitpack_run_tests+0x2f1>
  402e57:	44 8b 54 24 0c       	mov    0xc(%rsp),%r10d
  402e5c:	45 85 d2             	test   %r10d,%r10d
  402e5f:	74 cf                	je     402e30 <Bitpack_run_tests+0x2c0>
  402e61:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402e65:	03 44 24 0c          	add    0xc(%rsp),%eax
  402e69:	83 f8 40             	cmp    $0x40,%eax
  402e6c:	77 c2                	ja     402e30 <Bitpack_run_tests+0x2c0>
  402e6e:	48 8b 05 fb 4a 20 00 	mov    0x204afb(%rip),%rax        # 607970 <Except_stack>
  402e75:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  402e7a:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  402e81:	00 
  402e82:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  402e89:	00 
  402e8a:	48 89 05 df 4a 20 00 	mov    %rax,0x204adf(%rip)        # 607970 <Except_stack>
  402e91:	e8 ea dc ff ff       	callq  400b80 <_setjmp@plt>
  402e96:	89 84 24 80 00 00 00 	mov    %eax,0x80(%rsp)
  402e9d:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402ea4:	85 c0                	test   %eax,%eax
  402ea6:	0f 84 dc 00 00 00    	je     402f88 <Bitpack_run_tests+0x418>
  402eac:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  402eb1:	c7 84 24 80 00 00 00 	movl   $0x2,0x80(%rsp)
  402eb8:	02 00 00 00 
  402ebc:	be 06 00 00 00       	mov    $0x6,%esi
  402ec1:	74 2d                	je     402ef0 <Bitpack_run_tests+0x380>
  402ec3:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ec7:	85 c0                	test   %eax,%eax
  402ec9:	0f 84 99 00 00 00    	je     402f68 <Bitpack_run_tests+0x3f8>
  402ecf:	8b 44 24 64          	mov    0x64(%rsp),%eax
  402ed3:	03 44 24 0c          	add    0xc(%rsp),%eax
  402ed7:	83 f8 40             	cmp    $0x40,%eax
  402eda:	0f 84 88 00 00 00    	je     402f68 <Bitpack_run_tests+0x3f8>
  402ee0:	31 c0                	xor    %eax,%eax
  402ee2:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  402ee6:	31 f6                	xor    %esi,%esi
  402ee8:	85 d2                	test   %edx,%edx
  402eea:	40 0f 94 c6          	sete   %sil
  402eee:	09 c6                	or     %eax,%esi
  402ef0:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  402ef5:	31 d2                	xor    %edx,%edx
  402ef7:	bf 68 5a 40 00       	mov    $0x405a68,%edi
  402efc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  402f01:	ff d0                	callq  *%rax
  402f03:	e9 28 ff ff ff       	jmpq   402e30 <Bitpack_run_tests+0x2c0>
  402f08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  402f0f:	00 
  402f10:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402f14:	83 c0 01             	add    $0x1,%eax
  402f17:	89 44 24 60          	mov    %eax,0x60(%rsp)
  402f1b:	8b 44 24 60          	mov    0x60(%rsp),%eax
  402f1f:	83 f8 02             	cmp    $0x2,%eax
  402f22:	0f 86 d8 fd ff ff    	jbe    402d00 <Bitpack_run_tests+0x190>
  402f28:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  402f2c:	83 c0 01             	add    $0x1,%eax
  402f2f:	89 44 24 5c          	mov    %eax,0x5c(%rsp)
  402f33:	8b 44 24 5c          	mov    0x5c(%rsp),%eax
  402f37:	83 f8 03             	cmp    $0x3,%eax
  402f3a:	0f 86 8e fd ff ff    	jbe    402cce <Bitpack_run_tests+0x15e>
  402f40:	8b 44 24 58          	mov    0x58(%rsp),%eax
  402f44:	83 c0 01             	add    $0x1,%eax
  402f47:	89 44 24 58          	mov    %eax,0x58(%rsp)
  402f4b:	8b 44 24 58          	mov    0x58(%rsp),%eax
  402f4f:	83 f8 02             	cmp    $0x2,%eax
  402f52:	0f 86 50 fd ff ff    	jbe    402ca8 <Bitpack_run_tests+0x138>
  402f58:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
  402f5f:	5b                   	pop    %rbx
  402f60:	5d                   	pop    %rbp
  402f61:	41 5e                	pop    %r14
  402f63:	c3                   	retq   
  402f64:	0f 1f 40 00          	nopl   0x0(%rax)
  402f68:	b8 04 00 00 00       	mov    $0x4,%eax
  402f6d:	e9 70 ff ff ff       	jmpq   402ee2 <Bitpack_run_tests+0x372>
  402f72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402f78:	b8 04 00 00 00       	mov    $0x4,%eax
  402f7d:	e9 65 fe ff ff       	jmpq   402de7 <Bitpack_run_tests+0x277>
  402f82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  402f88:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402f8c:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402f90:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402f94:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402f99:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  402fa0:	00 
  402fa1:	e8 2a fa ff ff       	callq  4029d0 <Bitpack_newu>
  402fa6:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402fad:	85 c0                	test   %eax,%eax
  402faf:	75 11                	jne    402fc2 <Bitpack_run_tests+0x452>
  402fb1:	48 8b 05 b8 49 20 00 	mov    0x2049b8(%rip),%rax        # 607970 <Except_stack>
  402fb8:	48 8b 00             	mov    (%rax),%rax
  402fbb:	48 89 05 ae 49 20 00 	mov    %rax,0x2049ae(%rip)        # 607970 <Except_stack>
  402fc2:	8b 84 24 80 00 00 00 	mov    0x80(%rsp),%eax
  402fc9:	83 f8 01             	cmp    $0x1,%eax
  402fcc:	0f 84 d0 0b 00 00    	je     403ba2 <Bitpack_run_tests+0x1032>
  402fd2:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  402fd6:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  402fda:	8b 54 24 64          	mov    0x64(%rsp),%edx
  402fde:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  402fe3:	48 8b 8c c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%rcx
  402fea:	00 
  402feb:	e8 e0 f9 ff ff       	callq  4029d0 <Bitpack_newu>
  402ff0:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  402ff5:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  402ffa:	0f 85 98 0a 00 00    	jne    403a98 <Bitpack_run_tests+0xf28>
  403000:	48 8b 05 69 49 20 00 	mov    0x204969(%rip),%rax        # 607970 <Except_stack>
  403007:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40300c:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  403013:	00 
  403014:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40301b:	00 
  40301c:	48 89 05 4d 49 20 00 	mov    %rax,0x20494d(%rip)        # 607970 <Except_stack>
  403023:	e8 58 db ff ff       	callq  400b80 <_setjmp@plt>
  403028:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
  40302f:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  403036:	85 c0                	test   %eax,%eax
  403038:	0f 84 c2 09 00 00    	je     403a00 <Bitpack_run_tests+0xe90>
  40303e:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
  403043:	c7 84 24 84 00 00 00 	movl   $0x2,0x84(%rsp)
  40304a:	02 00 00 00 
  40304e:	bb 05 00 00 00       	mov    $0x5,%ebx
  403053:	45 85 c0             	test   %r8d,%r8d
  403056:	74 28                	je     403080 <Bitpack_run_tests+0x510>
  403058:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40305d:	b3 06                	mov    $0x6,%bl
  40305f:	74 1f                	je     403080 <Bitpack_run_tests+0x510>
  403061:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403065:	85 c0                	test   %eax,%eax
  403067:	0f 84 b3 0a 00 00    	je     403b20 <Bitpack_run_tests+0xfb0>
  40306d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403071:	03 44 24 0c          	add    0xc(%rsp),%eax
  403075:	83 f8 40             	cmp    $0x40,%eax
  403078:	0f 84 a2 0a 00 00    	je     403b20 <Bitpack_run_tests+0xfb0>
  40307e:	30 db                	xor    %bl,%bl
  403080:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  403085:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  40308a:	bf c8 59 40 00       	mov    $0x4059c8,%edi
  40308f:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403093:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  403098:	31 c0                	xor    %eax,%eax
  40309a:	e8 59 1b 00 00       	callq  404bf8 <Fmt_string>
  40309f:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4030a4:	31 d2                	xor    %edx,%edx
  4030a6:	48 89 c7             	mov    %rax,%rdi
  4030a9:	89 de                	mov    %ebx,%esi
  4030ab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4030b0:	ff d0                	callq  *%rax
  4030b2:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  4030b9:	85 c0                	test   %eax,%eax
  4030bb:	75 11                	jne    4030ce <Bitpack_run_tests+0x55e>
  4030bd:	48 8b 05 ac 48 20 00 	mov    0x2048ac(%rip),%rax        # 607970 <Except_stack>
  4030c4:	48 8b 00             	mov    (%rax),%rax
  4030c7:	48 89 05 a2 48 20 00 	mov    %rax,0x2048a2(%rip)        # 607970 <Except_stack>
  4030ce:	8b 84 24 84 00 00 00 	mov    0x84(%rsp),%eax
  4030d5:	83 f8 01             	cmp    $0x1,%eax
  4030d8:	0f 84 27 0b 00 00    	je     403c05 <Bitpack_run_tests+0x1095>
  4030de:	48 8b 05 8b 48 20 00 	mov    0x20488b(%rip),%rax        # 607970 <Except_stack>
  4030e5:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4030ea:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4030f1:	00 
  4030f2:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  4030f9:	00 
  4030fa:	48 89 05 6f 48 20 00 	mov    %rax,0x20486f(%rip)        # 607970 <Except_stack>
  403101:	e8 7a da ff ff       	callq  400b80 <_setjmp@plt>
  403106:	89 84 24 88 00 00 00 	mov    %eax,0x88(%rsp)
  40310d:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  403114:	85 c0                	test   %eax,%eax
  403116:	0f 84 04 08 00 00    	je     403920 <Bitpack_run_tests+0xdb0>
  40311c:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  403120:	c7 84 24 88 00 00 00 	movl   $0x2,0x88(%rsp)
  403127:	02 00 00 00 
  40312b:	bb 05 00 00 00       	mov    $0x5,%ebx
  403130:	85 ff                	test   %edi,%edi
  403132:	74 2c                	je     403160 <Bitpack_run_tests+0x5f0>
  403134:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  403139:	b3 06                	mov    $0x6,%bl
  40313b:	74 23                	je     403160 <Bitpack_run_tests+0x5f0>
  40313d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403141:	85 c0                	test   %eax,%eax
  403143:	0f 84 97 09 00 00    	je     403ae0 <Bitpack_run_tests+0xf70>
  403149:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40314d:	03 44 24 0c          	add    0xc(%rsp),%eax
  403151:	83 f8 40             	cmp    $0x40,%eax
  403154:	0f 84 86 09 00 00    	je     403ae0 <Bitpack_run_tests+0xf70>
  40315a:	30 db                	xor    %bl,%bl
  40315c:	0f 1f 40 00          	nopl   0x0(%rax)
  403160:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403164:	8b 74 24 64          	mov    0x64(%rsp),%esi
  403168:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40316e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403172:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403176:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40317a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40317f:	41 29 f1             	sub    %esi,%r9d
  403182:	be 40 00 00 00       	mov    $0x40,%esi
  403187:	29 d6                	sub    %edx,%esi
  403189:	89 f2                	mov    %esi,%edx
  40318b:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  403190:	01 f8                	add    %edi,%eax
  403192:	01 f9                	add    %edi,%ecx
  403194:	29 fa                	sub    %edi,%edx
  403196:	89 04 24             	mov    %eax,(%rsp)
  403199:	41 29 f9             	sub    %edi,%r9d
  40319c:	31 c0                	xor    %eax,%eax
  40319e:	bf 00 5a 40 00       	mov    $0x405a00,%edi
  4031a3:	e8 50 1a 00 00       	callq  404bf8 <Fmt_string>
  4031a8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4031ad:	31 d2                	xor    %edx,%edx
  4031af:	48 89 c7             	mov    %rax,%rdi
  4031b2:	89 de                	mov    %ebx,%esi
  4031b4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4031b9:	ff d0                	callq  *%rax
  4031bb:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  4031c2:	85 c0                	test   %eax,%eax
  4031c4:	75 11                	jne    4031d7 <Bitpack_run_tests+0x667>
  4031c6:	48 8b 05 a3 47 20 00 	mov    0x2047a3(%rip),%rax        # 607970 <Except_stack>
  4031cd:	48 8b 00             	mov    (%rax),%rax
  4031d0:	48 89 05 99 47 20 00 	mov    %rax,0x204799(%rip)        # 607970 <Except_stack>
  4031d7:	8b 84 24 88 00 00 00 	mov    0x88(%rsp),%eax
  4031de:	83 f8 01             	cmp    $0x1,%eax
  4031e1:	0f 84 3f 0a 00 00    	je     403c26 <Bitpack_run_tests+0x10b6>
  4031e7:	48 8b 05 82 47 20 00 	mov    0x204782(%rip),%rax        # 607970 <Except_stack>
  4031ee:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4031f3:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  4031fa:	00 
  4031fb:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  403202:	00 
  403203:	48 89 05 66 47 20 00 	mov    %rax,0x204766(%rip)        # 607970 <Except_stack>
  40320a:	e8 71 d9 ff ff       	callq  400b80 <_setjmp@plt>
  40320f:	89 84 24 8c 00 00 00 	mov    %eax,0x8c(%rsp)
  403216:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  40321d:	85 c0                	test   %eax,%eax
  40321f:	0f 84 63 06 00 00    	je     403888 <Bitpack_run_tests+0xd18>
  403225:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  403229:	c7 84 24 8c 00 00 00 	movl   $0x2,0x8c(%rsp)
  403230:	02 00 00 00 
  403234:	bb 05 00 00 00       	mov    $0x5,%ebx
  403239:	85 f6                	test   %esi,%esi
  40323b:	74 2b                	je     403268 <Bitpack_run_tests+0x6f8>
  40323d:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  403242:	b3 06                	mov    $0x6,%bl
  403244:	74 22                	je     403268 <Bitpack_run_tests+0x6f8>
  403246:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40324a:	85 c0                	test   %eax,%eax
  40324c:	0f 84 9e 08 00 00    	je     403af0 <Bitpack_run_tests+0xf80>
  403252:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403256:	03 44 24 0c          	add    0xc(%rsp),%eax
  40325a:	83 f8 40             	cmp    $0x40,%eax
  40325d:	0f 84 8d 08 00 00    	je     403af0 <Bitpack_run_tests+0xf80>
  403263:	30 db                	xor    %bl,%bl
  403265:	0f 1f 00             	nopl   (%rax)
  403268:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  40326c:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  403270:	bf e0 5a 40 00       	mov    $0x405ae0,%edi
  403275:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403279:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  40327e:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  403285:	00 
  403286:	31 c0                	xor    %eax,%eax
  403288:	e8 6b 19 00 00       	callq  404bf8 <Fmt_string>
  40328d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  403292:	31 d2                	xor    %edx,%edx
  403294:	48 89 c7             	mov    %rax,%rdi
  403297:	89 de                	mov    %ebx,%esi
  403299:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  40329e:	ff d0                	callq  *%rax
  4032a0:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  4032a7:	85 c0                	test   %eax,%eax
  4032a9:	75 11                	jne    4032bc <Bitpack_run_tests+0x74c>
  4032ab:	48 8b 05 be 46 20 00 	mov    0x2046be(%rip),%rax        # 607970 <Except_stack>
  4032b2:	48 8b 00             	mov    (%rax),%rax
  4032b5:	48 89 05 b4 46 20 00 	mov    %rax,0x2046b4(%rip)        # 607970 <Except_stack>
  4032bc:	8b 84 24 8c 00 00 00 	mov    0x8c(%rsp),%eax
  4032c3:	83 f8 01             	cmp    $0x1,%eax
  4032c6:	0f 85 64 fb ff ff    	jne    402e30 <Bitpack_run_tests+0x2c0>
  4032cc:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  4032d3:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  4032da:	00 
  4032db:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  4032e2:	00 
  4032e3:	e8 08 e7 ff ff       	callq  4019f0 <Except_raise>
  4032e8:	e9 43 fb ff ff       	jmpq   402e30 <Bitpack_run_tests+0x2c0>
  4032ed:	0f 1f 00             	nopl   (%rax)
  4032f0:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4032f4:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  4032f8:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4032fc:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  403301:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  403308:	00 
  403309:	e8 02 f8 ff ff       	callq  402b10 <Bitpack_news>
  40330e:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  403312:	85 c0                	test   %eax,%eax
  403314:	75 11                	jne    403327 <Bitpack_run_tests+0x7b7>
  403316:	48 8b 05 53 46 20 00 	mov    0x204653(%rip),%rax        # 607970 <Except_stack>
  40331d:	48 8b 00             	mov    (%rax),%rax
  403320:	48 89 05 49 46 20 00 	mov    %rax,0x204649(%rip)        # 607970 <Except_stack>
  403327:	8b 44 24 6c          	mov    0x6c(%rsp),%eax
  40332b:	83 f8 01             	cmp    $0x1,%eax
  40332e:	0f 84 b0 08 00 00    	je     403be4 <Bitpack_run_tests+0x1074>
  403334:	8b 44 24 68          	mov    0x68(%rsp),%eax
  403338:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40333c:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403340:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  403345:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  40334c:	00 
  40334d:	e8 be f7 ff ff       	callq  402b10 <Bitpack_news>
  403352:	80 7c 24 43 00       	cmpb   $0x0,0x43(%rsp)
  403357:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  40335c:	0f 85 1e 04 00 00    	jne    403780 <Bitpack_run_tests+0xc10>
  403362:	48 8b 05 07 46 20 00 	mov    0x204607(%rip),%rax        # 607970 <Except_stack>
  403369:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40336e:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  403375:	00 
  403376:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40337d:	00 
  40337e:	48 89 05 eb 45 20 00 	mov    %rax,0x2045eb(%rip)        # 607970 <Except_stack>
  403385:	e8 f6 d7 ff ff       	callq  400b80 <_setjmp@plt>
  40338a:	89 44 24 70          	mov    %eax,0x70(%rsp)
  40338e:	8b 44 24 70          	mov    0x70(%rsp),%eax
  403392:	85 c0                	test   %eax,%eax
  403394:	0f 84 56 04 00 00    	je     4037f0 <Bitpack_run_tests+0xc80>
  40339a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40339f:	c7 44 24 70 02 00 00 	movl   $0x2,0x70(%rsp)
  4033a6:	00 
  4033a7:	bb 05 00 00 00       	mov    $0x5,%ebx
  4033ac:	45 85 f6             	test   %r14d,%r14d
  4033af:	74 2f                	je     4033e0 <Bitpack_run_tests+0x870>
  4033b1:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4033b6:	b3 06                	mov    $0x6,%bl
  4033b8:	74 26                	je     4033e0 <Bitpack_run_tests+0x870>
  4033ba:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4033be:	85 c0                	test   %eax,%eax
  4033c0:	0f 84 4a 07 00 00    	je     403b10 <Bitpack_run_tests+0xfa0>
  4033c6:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4033ca:	03 44 24 0c          	add    0xc(%rsp),%eax
  4033ce:	83 f8 40             	cmp    $0x40,%eax
  4033d1:	0f 84 39 07 00 00    	je     403b10 <Bitpack_run_tests+0xfa0>
  4033d7:	30 db                	xor    %bl,%bl
  4033d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4033e0:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  4033e5:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  4033ea:	bf c8 59 40 00       	mov    $0x4059c8,%edi
  4033ef:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4033f3:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4033f8:	31 c0                	xor    %eax,%eax
  4033fa:	e8 f9 17 00 00       	callq  404bf8 <Fmt_string>
  4033ff:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  403404:	31 d2                	xor    %edx,%edx
  403406:	48 89 c7             	mov    %rax,%rdi
  403409:	89 de                	mov    %ebx,%esi
  40340b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  403410:	ff d0                	callq  *%rax
  403412:	8b 44 24 70          	mov    0x70(%rsp),%eax
  403416:	85 c0                	test   %eax,%eax
  403418:	75 11                	jne    40342b <Bitpack_run_tests+0x8bb>
  40341a:	48 8b 05 4f 45 20 00 	mov    0x20454f(%rip),%rax        # 607970 <Except_stack>
  403421:	48 8b 00             	mov    (%rax),%rax
  403424:	48 89 05 45 45 20 00 	mov    %rax,0x204545(%rip)        # 607970 <Except_stack>
  40342b:	8b 44 24 70          	mov    0x70(%rsp),%eax
  40342f:	83 f8 01             	cmp    $0x1,%eax
  403432:	0f 84 8b 07 00 00    	je     403bc3 <Bitpack_run_tests+0x1053>
  403438:	48 8b 05 31 45 20 00 	mov    0x204531(%rip),%rax        # 607970 <Except_stack>
  40343f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  403444:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  40344b:	00 
  40344c:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  403453:	00 
  403454:	48 89 05 15 45 20 00 	mov    %rax,0x204515(%rip)        # 607970 <Except_stack>
  40345b:	e8 20 d7 ff ff       	callq  400b80 <_setjmp@plt>
  403460:	89 44 24 74          	mov    %eax,0x74(%rsp)
  403464:	8b 44 24 74          	mov    0x74(%rsp),%eax
  403468:	85 c0                	test   %eax,%eax
  40346a:	0f 84 28 02 00 00    	je     403698 <Bitpack_run_tests+0xb28>
  403470:	8b 6c 24 0c          	mov    0xc(%rsp),%ebp
  403474:	c7 44 24 74 02 00 00 	movl   $0x2,0x74(%rsp)
  40347b:	00 
  40347c:	bb 05 00 00 00       	mov    $0x5,%ebx
  403481:	85 ed                	test   %ebp,%ebp
  403483:	74 2b                	je     4034b0 <Bitpack_run_tests+0x940>
  403485:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40348a:	b3 06                	mov    $0x6,%bl
  40348c:	74 22                	je     4034b0 <Bitpack_run_tests+0x940>
  40348e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403492:	85 c0                	test   %eax,%eax
  403494:	0f 84 66 06 00 00    	je     403b00 <Bitpack_run_tests+0xf90>
  40349a:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40349e:	03 44 24 0c          	add    0xc(%rsp),%eax
  4034a2:	83 f8 40             	cmp    $0x40,%eax
  4034a5:	0f 84 55 06 00 00    	je     403b00 <Bitpack_run_tests+0xf90>
  4034ab:	30 db                	xor    %bl,%bl
  4034ad:	0f 1f 00             	nopl   (%rax)
  4034b0:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4034b4:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4034b8:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4034be:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4034c2:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4034c6:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4034ca:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4034cf:	41 29 f1             	sub    %esi,%r9d
  4034d2:	be 40 00 00 00       	mov    $0x40,%esi
  4034d7:	29 d6                	sub    %edx,%esi
  4034d9:	89 f2                	mov    %esi,%edx
  4034db:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4034e0:	01 f8                	add    %edi,%eax
  4034e2:	01 f9                	add    %edi,%ecx
  4034e4:	29 fa                	sub    %edi,%edx
  4034e6:	89 04 24             	mov    %eax,(%rsp)
  4034e9:	41 29 f9             	sub    %edi,%r9d
  4034ec:	31 c0                	xor    %eax,%eax
  4034ee:	bf 00 5a 40 00       	mov    $0x405a00,%edi
  4034f3:	e8 00 17 00 00       	callq  404bf8 <Fmt_string>
  4034f8:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4034fd:	31 d2                	xor    %edx,%edx
  4034ff:	48 89 c7             	mov    %rax,%rdi
  403502:	89 de                	mov    %ebx,%esi
  403504:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  403509:	ff d0                	callq  *%rax
  40350b:	8b 44 24 74          	mov    0x74(%rsp),%eax
  40350f:	85 c0                	test   %eax,%eax
  403511:	75 11                	jne    403524 <Bitpack_run_tests+0x9b4>
  403513:	48 8b 05 56 44 20 00 	mov    0x204456(%rip),%rax        # 607970 <Except_stack>
  40351a:	48 8b 00             	mov    (%rax),%rax
  40351d:	48 89 05 4c 44 20 00 	mov    %rax,0x20444c(%rip)        # 607970 <Except_stack>
  403524:	8b 44 24 74          	mov    0x74(%rsp),%eax
  403528:	83 f8 01             	cmp    $0x1,%eax
  40352b:	0f 84 50 06 00 00    	je     403b81 <Bitpack_run_tests+0x1011>
  403531:	48 8b 05 38 44 20 00 	mov    0x204438(%rip),%rax        # 607970 <Except_stack>
  403538:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  40353d:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
  403544:	00 
  403545:	48 8d 84 24 30 01 00 	lea    0x130(%rsp),%rax
  40354c:	00 
  40354d:	48 89 05 1c 44 20 00 	mov    %rax,0x20441c(%rip)        # 607970 <Except_stack>
  403554:	e8 27 d6 ff ff       	callq  400b80 <_setjmp@plt>
  403559:	89 44 24 78          	mov    %eax,0x78(%rsp)
  40355d:	8b 44 24 78          	mov    0x78(%rsp),%eax
  403561:	85 c0                	test   %eax,%eax
  403563:	0f 85 a7 00 00 00    	jne    403610 <Bitpack_run_tests+0xaa0>
  403569:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  40356d:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403571:	85 db                	test   %ebx,%ebx
  403573:	0f 85 b1 05 00 00    	jne    403b2a <Bitpack_run_tests+0xfba>
  403579:	8b 44 24 68          	mov    0x68(%rsp),%eax
  40357d:	31 ed                	xor    %ebp,%ebp
  40357f:	bb 05 00 00 00       	mov    $0x5,%ebx
  403584:	48 83 bc c4 00 01 00 	cmpq   $0x0,0x100(%rsp,%rax,8)
  40358b:	00 00 
  40358d:	40 0f 94 c5          	sete   %bpl
  403591:	8b 44 24 68          	mov    0x68(%rsp),%eax
  403595:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  403599:	bf 40 5a 40 00       	mov    $0x405a40,%edi
  40359e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4035a2:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  4035a7:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  4035ae:	00 
  4035af:	31 c0                	xor    %eax,%eax
  4035b1:	e8 42 16 00 00       	callq  404bf8 <Fmt_string>
  4035b6:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4035bb:	89 ea                	mov    %ebp,%edx
  4035bd:	48 89 c7             	mov    %rax,%rdi
  4035c0:	89 de                	mov    %ebx,%esi
  4035c2:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4035c7:	ff d0                	callq  *%rax
  4035c9:	8b 44 24 78          	mov    0x78(%rsp),%eax
  4035cd:	85 c0                	test   %eax,%eax
  4035cf:	75 11                	jne    4035e2 <Bitpack_run_tests+0xa72>
  4035d1:	48 8b 05 98 43 20 00 	mov    0x204398(%rip),%rax        # 607970 <Except_stack>
  4035d8:	48 8b 00             	mov    (%rax),%rax
  4035db:	48 89 05 8e 43 20 00 	mov    %rax,0x20438e(%rip)        # 607970 <Except_stack>
  4035e2:	8b 44 24 78          	mov    0x78(%rsp),%eax
  4035e6:	83 f8 01             	cmp    $0x1,%eax
  4035e9:	0f 85 51 f7 ff ff    	jne    402d40 <Bitpack_run_tests+0x1d0>
  4035ef:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  4035f6:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  4035fd:	00 
  4035fe:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403605:	00 
  403606:	e8 e5 e3 ff ff       	callq  4019f0 <Except_raise>
  40360b:	e9 30 f7 ff ff       	jmpq   402d40 <Bitpack_run_tests+0x1d0>
  403610:	44 8b 5c 24 0c       	mov    0xc(%rsp),%r11d
  403615:	c7 44 24 78 02 00 00 	movl   $0x2,0x78(%rsp)
  40361c:	00 
  40361d:	bb 05 00 00 00       	mov    $0x5,%ebx
  403622:	45 85 db             	test   %r11d,%r11d
  403625:	74 29                	je     403650 <Bitpack_run_tests+0xae0>
  403627:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40362c:	b3 06                	mov    $0x6,%bl
  40362e:	74 20                	je     403650 <Bitpack_run_tests+0xae0>
  403630:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403634:	85 c0                	test   %eax,%eax
  403636:	0f 84 15 06 00 00    	je     403c51 <Bitpack_run_tests+0x10e1>
  40363c:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403640:	03 44 24 0c          	add    0xc(%rsp),%eax
  403644:	83 f8 40             	cmp    $0x40,%eax
  403647:	0f 84 04 06 00 00    	je     403c51 <Bitpack_run_tests+0x10e1>
  40364d:	30 db                	xor    %bl,%bl
  40364f:	90                   	nop
  403650:	8b 44 24 68          	mov    0x68(%rsp),%eax
  403654:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  403658:	bf 40 5a 40 00       	mov    $0x405a40,%edi
  40365d:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403661:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  403666:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  40366d:	00 
  40366e:	31 c0                	xor    %eax,%eax
  403670:	e8 83 15 00 00       	callq  404bf8 <Fmt_string>
  403675:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40367a:	31 d2                	xor    %edx,%edx
  40367c:	e9 3c ff ff ff       	jmpq   4035bd <Bitpack_run_tests+0xa4d>
  403681:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  403688:	8b 44 24 44          	mov    0x44(%rsp),%eax
  40368c:	e9 8c f6 ff ff       	jmpq   402d1d <Bitpack_run_tests+0x1ad>
  403691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  403698:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40369c:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4036a0:	be 40 00 00 00       	mov    $0x40,%esi
  4036a5:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  4036aa:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4036af:	31 ed                	xor    %ebp,%ebp
  4036b1:	29 c6                	sub    %eax,%esi
  4036b3:	44 01 f2             	add    %r14d,%edx
  4036b6:	44 29 f6             	sub    %r14d,%esi
  4036b9:	e8 52 f2 ff ff       	callq  402910 <Bitpack_getu>
  4036be:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4036c2:	48 89 c3             	mov    %rax,%rbx
  4036c5:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4036c9:	be 40 00 00 00       	mov    $0x40,%esi
  4036ce:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  4036d3:	29 c6                	sub    %eax,%esi
  4036d5:	44 01 f2             	add    %r14d,%edx
  4036d8:	44 29 f6             	sub    %r14d,%esi
  4036db:	e8 30 f2 ff ff       	callq  402910 <Bitpack_getu>
  4036e0:	48 39 c3             	cmp    %rax,%rbx
  4036e3:	bb 05 00 00 00       	mov    $0x5,%ebx
  4036e8:	40 0f 94 c5          	sete   %bpl
  4036ec:	45 85 f6             	test   %r14d,%r14d
  4036ef:	74 2f                	je     403720 <Bitpack_run_tests+0xbb0>
  4036f1:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4036f6:	b3 06                	mov    $0x6,%bl
  4036f8:	74 26                	je     403720 <Bitpack_run_tests+0xbb0>
  4036fa:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4036fe:	85 c0                	test   %eax,%eax
  403700:	0f 84 93 05 00 00    	je     403c99 <Bitpack_run_tests+0x1129>
  403706:	8b 44 24 64          	mov    0x64(%rsp),%eax
  40370a:	03 44 24 0c          	add    0xc(%rsp),%eax
  40370e:	83 f8 40             	cmp    $0x40,%eax
  403711:	0f 84 82 05 00 00    	je     403c99 <Bitpack_run_tests+0x1129>
  403717:	30 db                	xor    %bl,%bl
  403719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  403720:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403724:	8b 74 24 64          	mov    0x64(%rsp),%esi
  403728:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  40372e:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403732:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403736:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  40373a:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  40373f:	41 29 f1             	sub    %esi,%r9d
  403742:	be 40 00 00 00       	mov    $0x40,%esi
  403747:	29 c6                	sub    %eax,%esi
  403749:	89 f0                	mov    %esi,%eax
  40374b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  403750:	01 fa                	add    %edi,%edx
  403752:	29 f8                	sub    %edi,%eax
  403754:	01 f9                	add    %edi,%ecx
  403756:	89 14 24             	mov    %edx,(%rsp)
  403759:	41 29 f9             	sub    %edi,%r9d
  40375c:	89 c2                	mov    %eax,%edx
  40375e:	bf 00 5a 40 00       	mov    $0x405a00,%edi
  403763:	31 c0                	xor    %eax,%eax
  403765:	e8 8e 14 00 00       	callq  404bf8 <Fmt_string>
  40376a:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40376f:	89 ea                	mov    %ebp,%edx
  403771:	e9 89 fd ff ff       	jmpq   4034ff <Bitpack_run_tests+0x98f>
  403776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40377d:	00 00 00 
  403780:	8b 54 24 68          	mov    0x68(%rsp),%edx
  403784:	8b 44 24 68          	mov    0x68(%rsp),%eax
  403788:	bf 60 59 40 00       	mov    $0x405960,%edi
  40378d:	8b 5c 24 0c          	mov    0xc(%rsp),%ebx
  403791:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403795:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  40379a:	4c 8b 84 c4 00 01 00 	mov    0x100(%rsp,%rax,8),%r8
  4037a1:	00 
  4037a2:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4037a7:	4c 8b 8c d4 00 01 00 	mov    0x100(%rsp,%rdx,8),%r9
  4037ae:	00 
  4037af:	89 da                	mov    %ebx,%edx
  4037b1:	48 89 04 24          	mov    %rax,(%rsp)
  4037b5:	31 c0                	xor    %eax,%eax
  4037b7:	e8 94 d3 ff ff       	callq  400b50 <printf@plt>
  4037bc:	8b 44 24 68          	mov    0x68(%rsp),%eax
  4037c0:	31 f6                	xor    %esi,%esi
  4037c2:	85 db                	test   %ebx,%ebx
  4037c4:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4037c8:	48 8b 8c c4 00 01 00 	mov    0x100(%rsp,%rax,8),%rcx
  4037cf:	00 
  4037d0:	0f 85 85 04 00 00    	jne    403c5b <Bitpack_run_tests+0x10eb>
  4037d6:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
  4037db:	bf 98 59 40 00       	mov    $0x405998,%edi
  4037e0:	31 c0                	xor    %eax,%eax
  4037e2:	e8 69 d3 ff ff       	callq  400b50 <printf@plt>
  4037e7:	e9 76 fb ff ff       	jmpq   403362 <Bitpack_run_tests+0x7f2>
  4037ec:	0f 1f 40 00          	nopl   0x0(%rax)
  4037f0:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4037f4:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  4037f9:	31 d2                	xor    %edx,%edx
  4037fb:	31 ed                	xor    %ebp,%ebp
  4037fd:	e8 0e f1 ff ff       	callq  402910 <Bitpack_getu>
  403802:	8b 74 24 64          	mov    0x64(%rsp),%esi
  403806:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40380b:	48 89 c3             	mov    %rax,%rbx
  40380e:	31 d2                	xor    %edx,%edx
  403810:	e8 fb f0 ff ff       	callq  402910 <Bitpack_getu>
  403815:	48 39 c3             	cmp    %rax,%rbx
  403818:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  40381c:	bb 05 00 00 00       	mov    $0x5,%ebx
  403821:	40 0f 94 c5          	sete   %bpl
  403825:	85 c0                	test   %eax,%eax
  403827:	74 2f                	je     403858 <Bitpack_run_tests+0xce8>
  403829:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40382e:	b3 06                	mov    $0x6,%bl
  403830:	74 26                	je     403858 <Bitpack_run_tests+0xce8>
  403832:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403836:	85 c0                	test   %eax,%eax
  403838:	0f 84 65 04 00 00    	je     403ca3 <Bitpack_run_tests+0x1133>
  40383e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403842:	03 44 24 0c          	add    0xc(%rsp),%eax
  403846:	83 f8 40             	cmp    $0x40,%eax
  403849:	0f 84 54 04 00 00    	je     403ca3 <Bitpack_run_tests+0x1133>
  40384f:	30 db                	xor    %bl,%bl
  403851:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  403858:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  40385d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  403862:	bf c8 59 40 00       	mov    $0x4059c8,%edi
  403867:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40386b:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  403870:	31 c0                	xor    %eax,%eax
  403872:	e8 81 13 00 00       	callq  404bf8 <Fmt_string>
  403877:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  40387c:	89 ea                	mov    %ebp,%edx
  40387e:	e9 83 fb ff ff       	jmpq   403406 <Bitpack_run_tests+0x896>
  403883:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403888:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  40388d:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403891:	31 ed                	xor    %ebp,%ebp
  403893:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  403898:	bb 05 00 00 00       	mov    $0x5,%ebx
  40389d:	44 89 f6             	mov    %r14d,%esi
  4038a0:	e8 6b f0 ff ff       	callq  402910 <Bitpack_getu>
  4038a5:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  4038a9:	48 3b 84 d4 d0 00 00 	cmp    0xd0(%rsp,%rdx,8),%rax
  4038b0:	00 
  4038b1:	40 0f 94 c5          	sete   %bpl
  4038b5:	45 85 f6             	test   %r14d,%r14d
  4038b8:	74 2e                	je     4038e8 <Bitpack_run_tests+0xd78>
  4038ba:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  4038bf:	b3 06                	mov    $0x6,%bl
  4038c1:	74 25                	je     4038e8 <Bitpack_run_tests+0xd78>
  4038c3:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4038c7:	85 c0                	test   %eax,%eax
  4038c9:	0f 84 c0 03 00 00    	je     403c8f <Bitpack_run_tests+0x111f>
  4038cf:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4038d3:	03 44 24 0c          	add    0xc(%rsp),%eax
  4038d7:	83 f8 40             	cmp    $0x40,%eax
  4038da:	0f 84 af 03 00 00    	je     403c8f <Bitpack_run_tests+0x111f>
  4038e0:	30 db                	xor    %bl,%bl
  4038e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4038e8:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  4038ec:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  4038f0:	bf e0 5a 40 00       	mov    $0x405ae0,%edi
  4038f5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4038f9:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4038fe:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  403905:	00 
  403906:	31 c0                	xor    %eax,%eax
  403908:	e8 eb 12 00 00       	callq  404bf8 <Fmt_string>
  40390d:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  403912:	89 ea                	mov    %ebp,%edx
  403914:	e9 7b f9 ff ff       	jmpq   403294 <Bitpack_run_tests+0x724>
  403919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  403920:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403924:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403928:	be 40 00 00 00       	mov    $0x40,%esi
  40392d:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  403932:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  403937:	31 ed                	xor    %ebp,%ebp
  403939:	29 c6                	sub    %eax,%esi
  40393b:	44 01 f2             	add    %r14d,%edx
  40393e:	44 29 f6             	sub    %r14d,%esi
  403941:	e8 ca ef ff ff       	callq  402910 <Bitpack_getu>
  403946:	8b 54 24 64          	mov    0x64(%rsp),%edx
  40394a:	48 89 c3             	mov    %rax,%rbx
  40394d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403951:	be 40 00 00 00       	mov    $0x40,%esi
  403956:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  40395b:	29 c6                	sub    %eax,%esi
  40395d:	44 01 f2             	add    %r14d,%edx
  403960:	44 29 f6             	sub    %r14d,%esi
  403963:	e8 a8 ef ff ff       	callq  402910 <Bitpack_getu>
  403968:	48 39 c3             	cmp    %rax,%rbx
  40396b:	bb 05 00 00 00       	mov    $0x5,%ebx
  403970:	40 0f 94 c5          	sete   %bpl
  403974:	45 85 f6             	test   %r14d,%r14d
  403977:	74 2f                	je     4039a8 <Bitpack_run_tests+0xe38>
  403979:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  40397e:	b3 06                	mov    $0x6,%bl
  403980:	74 26                	je     4039a8 <Bitpack_run_tests+0xe38>
  403982:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403986:	85 c0                	test   %eax,%eax
  403988:	0f 84 ed 02 00 00    	je     403c7b <Bitpack_run_tests+0x110b>
  40398e:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403992:	03 44 24 0c          	add    0xc(%rsp),%eax
  403996:	83 f8 40             	cmp    $0x40,%eax
  403999:	0f 84 dc 02 00 00    	je     403c7b <Bitpack_run_tests+0x110b>
  40399f:	30 db                	xor    %bl,%bl
  4039a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4039a8:	8b 54 24 64          	mov    0x64(%rsp),%edx
  4039ac:	8b 74 24 64          	mov    0x64(%rsp),%esi
  4039b0:	41 b9 40 00 00 00    	mov    $0x40,%r9d
  4039b6:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  4039ba:	8b 44 24 64          	mov    0x64(%rsp),%eax
  4039be:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  4039c2:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  4039c7:	41 29 f1             	sub    %esi,%r9d
  4039ca:	be 40 00 00 00       	mov    $0x40,%esi
  4039cf:	29 c6                	sub    %eax,%esi
  4039d1:	89 f0                	mov    %esi,%eax
  4039d3:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4039d8:	01 fa                	add    %edi,%edx
  4039da:	29 f8                	sub    %edi,%eax
  4039dc:	01 f9                	add    %edi,%ecx
  4039de:	89 14 24             	mov    %edx,(%rsp)
  4039e1:	41 29 f9             	sub    %edi,%r9d
  4039e4:	89 c2                	mov    %eax,%edx
  4039e6:	bf 00 5a 40 00       	mov    $0x405a00,%edi
  4039eb:	31 c0                	xor    %eax,%eax
  4039ed:	e8 06 12 00 00       	callq  404bf8 <Fmt_string>
  4039f2:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  4039f7:	89 ea                	mov    %ebp,%edx
  4039f9:	e9 b1 f7 ff ff       	jmpq   4031af <Bitpack_run_tests+0x63f>
  4039fe:	66 90                	xchg   %ax,%ax
  403a00:	8b 74 24 64          	mov    0x64(%rsp),%esi
  403a04:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  403a09:	31 d2                	xor    %edx,%edx
  403a0b:	31 ed                	xor    %ebp,%ebp
  403a0d:	e8 fe ee ff ff       	callq  402910 <Bitpack_getu>
  403a12:	8b 74 24 64          	mov    0x64(%rsp),%esi
  403a16:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
  403a1b:	31 d2                	xor    %edx,%edx
  403a1d:	48 89 c3             	mov    %rax,%rbx
  403a20:	e8 eb ee ff ff       	callq  402910 <Bitpack_getu>
  403a25:	44 8b 4c 24 0c       	mov    0xc(%rsp),%r9d
  403a2a:	48 39 c3             	cmp    %rax,%rbx
  403a2d:	bb 05 00 00 00       	mov    $0x5,%ebx
  403a32:	40 0f 94 c5          	sete   %bpl
  403a36:	45 85 c9             	test   %r9d,%r9d
  403a39:	74 2d                	je     403a68 <Bitpack_run_tests+0xef8>
  403a3b:	83 7c 24 0c 40       	cmpl   $0x40,0xc(%rsp)
  403a40:	b3 06                	mov    $0x6,%bl
  403a42:	74 24                	je     403a68 <Bitpack_run_tests+0xef8>
  403a44:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403a48:	85 c0                	test   %eax,%eax
  403a4a:	0f 84 35 02 00 00    	je     403c85 <Bitpack_run_tests+0x1115>
  403a50:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403a54:	03 44 24 0c          	add    0xc(%rsp),%eax
  403a58:	83 f8 40             	cmp    $0x40,%eax
  403a5b:	0f 84 24 02 00 00    	je     403c85 <Bitpack_run_tests+0x1115>
  403a61:	30 db                	xor    %bl,%bl
  403a63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403a68:	44 8b 44 24 64       	mov    0x64(%rsp),%r8d
  403a6d:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
  403a72:	bf c8 59 40 00       	mov    $0x4059c8,%edi
  403a77:	8b 54 24 64          	mov    0x64(%rsp),%edx
  403a7b:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  403a80:	31 c0                	xor    %eax,%eax
  403a82:	e8 71 11 00 00       	callq  404bf8 <Fmt_string>
  403a87:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
  403a8c:	89 ea                	mov    %ebp,%edx
  403a8e:	e9 13 f6 ff ff       	jmpq   4030a6 <Bitpack_run_tests+0x536>
  403a93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  403a98:	8b 54 24 7c          	mov    0x7c(%rsp),%edx
  403a9c:	8b 44 24 7c          	mov    0x7c(%rsp),%eax
  403aa0:	bf a8 5a 40 00       	mov    $0x405aa8,%edi
  403aa5:	8b 4c 24 64          	mov    0x64(%rsp),%ecx
  403aa9:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
  403aae:	4c 8b 84 c4 d0 00 00 	mov    0xd0(%rsp,%rax,8),%r8
  403ab5:	00 
  403ab6:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
  403abb:	4c 8b 8c d4 d0 00 00 	mov    0xd0(%rsp,%rdx,8),%r9
  403ac2:	00 
  403ac3:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  403ac7:	48 89 04 24          	mov    %rax,(%rsp)
  403acb:	31 c0                	xor    %eax,%eax
  403acd:	e8 7e d0 ff ff       	callq  400b50 <printf@plt>
  403ad2:	e9 29 f5 ff ff       	jmpq   403000 <Bitpack_run_tests+0x490>
  403ad7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  403ade:	00 00 
  403ae0:	bb 04 00 00 00       	mov    $0x4,%ebx
  403ae5:	e9 76 f6 ff ff       	jmpq   403160 <Bitpack_run_tests+0x5f0>
  403aea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403af0:	bb 04 00 00 00       	mov    $0x4,%ebx
  403af5:	e9 6e f7 ff ff       	jmpq   403268 <Bitpack_run_tests+0x6f8>
  403afa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403b00:	bb 04 00 00 00       	mov    $0x4,%ebx
  403b05:	e9 a6 f9 ff ff       	jmpq   4034b0 <Bitpack_run_tests+0x940>
  403b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403b10:	bb 04 00 00 00       	mov    $0x4,%ebx
  403b15:	e9 c6 f8 ff ff       	jmpq   4033e0 <Bitpack_run_tests+0x870>
  403b1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  403b20:	bb 04 00 00 00       	mov    $0x4,%ebx
  403b25:	e9 56 f5 ff ff       	jmpq   403080 <Bitpack_run_tests+0x510>
  403b2a:	44 8b 74 24 0c       	mov    0xc(%rsp),%r14d
  403b2f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  403b34:	31 ed                	xor    %ebp,%ebp
  403b36:	bb 06 00 00 00       	mov    $0x6,%ebx
  403b3b:	44 89 f6             	mov    %r14d,%esi
  403b3e:	e8 9d ec ff ff       	callq  4027e0 <Bitpack_gets.part.0>
  403b43:	8b 54 24 68          	mov    0x68(%rsp),%edx
  403b47:	48 3b 84 d4 00 01 00 	cmp    0x100(%rsp,%rdx,8),%rax
  403b4e:	00 
  403b4f:	40 0f 94 c5          	sete   %bpl
  403b53:	41 83 fe 40          	cmp    $0x40,%r14d
  403b57:	0f 84 34 fa ff ff    	je     403591 <Bitpack_run_tests+0xa21>
  403b5d:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403b61:	85 c0                	test   %eax,%eax
  403b63:	0f 84 de 00 00 00    	je     403c47 <Bitpack_run_tests+0x10d7>
  403b69:	8b 44 24 64          	mov    0x64(%rsp),%eax
  403b6d:	03 44 24 0c          	add    0xc(%rsp),%eax
  403b71:	83 f8 40             	cmp    $0x40,%eax
  403b74:	0f 84 cd 00 00 00    	je     403c47 <Bitpack_run_tests+0x10d7>
  403b7a:	30 db                	xor    %bl,%bl
  403b7c:	e9 10 fa ff ff       	jmpq   403591 <Bitpack_run_tests+0xa21>
  403b81:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403b88:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403b8f:	00 
  403b90:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403b97:	00 
  403b98:	e8 53 de ff ff       	callq  4019f0 <Except_raise>
  403b9d:	e9 8f f9 ff ff       	jmpq   403531 <Bitpack_run_tests+0x9c1>
  403ba2:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403ba9:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403bb0:	00 
  403bb1:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403bb8:	00 
  403bb9:	e8 32 de ff ff       	callq  4019f0 <Except_raise>
  403bbe:	e9 0f f4 ff ff       	jmpq   402fd2 <Bitpack_run_tests+0x462>
  403bc3:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403bca:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403bd1:	00 
  403bd2:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403bd9:	00 
  403bda:	e8 11 de ff ff       	callq  4019f0 <Except_raise>
  403bdf:	e9 54 f8 ff ff       	jmpq   403438 <Bitpack_run_tests+0x8c8>
  403be4:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403beb:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403bf2:	00 
  403bf3:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403bfa:	00 
  403bfb:	e8 f0 dd ff ff       	callq  4019f0 <Except_raise>
  403c00:	e9 2f f7 ff ff       	jmpq   403334 <Bitpack_run_tests+0x7c4>
  403c05:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403c0c:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403c13:	00 
  403c14:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403c1b:	00 
  403c1c:	e8 cf dd ff ff       	callq  4019f0 <Except_raise>
  403c21:	e9 b8 f4 ff ff       	jmpq   4030de <Bitpack_run_tests+0x56e>
  403c26:	8b 94 24 08 02 00 00 	mov    0x208(%rsp),%edx
  403c2d:	48 8b b4 24 00 02 00 	mov    0x200(%rsp),%rsi
  403c34:	00 
  403c35:	48 8b bc 24 10 02 00 	mov    0x210(%rsp),%rdi
  403c3c:	00 
  403c3d:	e8 ae dd ff ff       	callq  4019f0 <Except_raise>
  403c42:	e9 a0 f5 ff ff       	jmpq   4031e7 <Bitpack_run_tests+0x677>
  403c47:	bb 04 00 00 00       	mov    $0x4,%ebx
  403c4c:	e9 40 f9 ff ff       	jmpq   403591 <Bitpack_run_tests+0xa21>
  403c51:	bb 04 00 00 00       	mov    $0x4,%ebx
  403c56:	e9 f5 f9 ff ff       	jmpq   403650 <Bitpack_run_tests+0xae0>
  403c5b:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  403c5f:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
  403c64:	48 89 4c 24 48       	mov    %rcx,0x48(%rsp)
  403c69:	e8 72 eb ff ff       	callq  4027e0 <Bitpack_gets.part.0>
  403c6e:	48 8b 4c 24 48       	mov    0x48(%rsp),%rcx
  403c73:	48 89 c6             	mov    %rax,%rsi
  403c76:	e9 5b fb ff ff       	jmpq   4037d6 <Bitpack_run_tests+0xc66>
  403c7b:	bb 04 00 00 00       	mov    $0x4,%ebx
  403c80:	e9 23 fd ff ff       	jmpq   4039a8 <Bitpack_run_tests+0xe38>
  403c85:	bb 04 00 00 00       	mov    $0x4,%ebx
  403c8a:	e9 d9 fd ff ff       	jmpq   403a68 <Bitpack_run_tests+0xef8>
  403c8f:	bb 04 00 00 00       	mov    $0x4,%ebx
  403c94:	e9 4f fc ff ff       	jmpq   4038e8 <Bitpack_run_tests+0xd78>
  403c99:	bb 04 00 00 00       	mov    $0x4,%ebx
  403c9e:	e9 7d fa ff ff       	jmpq   403720 <Bitpack_run_tests+0xbb0>
  403ca3:	bb 04 00 00 00       	mov    $0x4,%ebx
  403ca8:	e9 ab fb ff ff       	jmpq   403858 <Bitpack_run_tests+0xce8>
  403cad:	0f 1f 00             	nopl   (%rax)

0000000000403cb0 <cvt_s>:
  403cb0:	55                   	push   %rbp
  403cb1:	48 89 e5             	mov    %rsp,%rbp
  403cb4:	53                   	push   %rbx
  403cb5:	48 83 ec 58          	sub    $0x58,%rsp
  403cb9:	89 7d dc             	mov    %edi,-0x24(%rbp)
  403cbc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  403cc0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  403cc4:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  403cc8:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  403ccc:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  403cd0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  403cd4:	8b 10                	mov    (%rax),%edx
  403cd6:	83 fa 30             	cmp    $0x30,%edx
  403cd9:	73 15                	jae    403cf0 <cvt_s+0x40>
  403cdb:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403cdf:	8b 10                	mov    (%rax),%edx
  403ce1:	89 d2                	mov    %edx,%edx
  403ce3:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403ce7:	8b 08                	mov    (%rax),%ecx
  403ce9:	83 c1 08             	add    $0x8,%ecx
  403cec:	89 08                	mov    %ecx,(%rax)
  403cee:	eb 0f                	jmp    403cff <cvt_s+0x4f>
  403cf0:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403cf4:	48 89 ca             	mov    %rcx,%rdx
  403cf7:	48 83 c1 08          	add    $0x8,%rcx
  403cfb:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403cff:	48 89 d0             	mov    %rdx,%rax
  403d02:	48 8b 00             	mov    (%rax),%rax
  403d05:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  403d09:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  403d0e:	75 1b                	jne    403d2b <cvt_s+0x7b>
  403d10:	ba 1b 00 00 00       	mov    $0x1b,%edx
  403d15:	48 8d 35 ec 1d 00 00 	lea    0x1dec(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  403d1c:	48 8d 05 95 30 20 00 	lea    0x203095(%rip),%rax        # 606db8 <Assert_Failed>
  403d23:	48 89 c7             	mov    %rax,%rdi
  403d26:	e8 c5 dc ff ff       	callq  4019f0 <Except_raise>
  403d2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403d2f:	48 89 c7             	mov    %rax,%rdi
  403d32:	e8 f9 cd ff ff       	callq  400b30 <strlen@plt>
  403d37:	89 c3                	mov    %eax,%ebx
  403d39:	44 8b 45 b4          	mov    -0x4c(%rbp),%r8d
  403d3d:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
  403d41:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  403d45:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  403d49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  403d4d:	8b 75 10             	mov    0x10(%rbp),%esi
  403d50:	89 34 24             	mov    %esi,(%rsp)
  403d53:	45 89 c1             	mov    %r8d,%r9d
  403d56:	49 89 f8             	mov    %rdi,%r8
  403d59:	89 de                	mov    %ebx,%esi
  403d5b:	48 89 c7             	mov    %rax,%rdi
  403d5e:	e8 d2 08 00 00       	callq  404635 <Fmt_puts>
  403d63:	48 83 c4 58          	add    $0x58,%rsp
  403d67:	5b                   	pop    %rbx
  403d68:	c9                   	leaveq 
  403d69:	c3                   	retq   

0000000000403d6a <cvt_d>:
  403d6a:	55                   	push   %rbp
  403d6b:	48 89 e5             	mov    %rsp,%rbp
  403d6e:	53                   	push   %rbx
  403d6f:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  403d76:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403d79:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  403d7d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  403d81:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403d85:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403d89:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  403d8d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  403d91:	8b 10                	mov    (%rax),%edx
  403d93:	83 fa 30             	cmp    $0x30,%edx
  403d96:	73 15                	jae    403dad <cvt_d+0x43>
  403d98:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403d9c:	8b 10                	mov    (%rax),%edx
  403d9e:	89 d2                	mov    %edx,%edx
  403da0:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403da4:	8b 08                	mov    (%rax),%ecx
  403da6:	83 c1 08             	add    $0x8,%ecx
  403da9:	89 08                	mov    %ecx,(%rax)
  403dab:	eb 0f                	jmp    403dbc <cvt_d+0x52>
  403dad:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403db1:	48 89 ca             	mov    %rcx,%rdx
  403db4:	48 83 c1 08          	add    $0x8,%rcx
  403db8:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403dbc:	48 89 d0             	mov    %rdx,%rax
  403dbf:	8b 00                	mov    (%rax),%eax
  403dc1:	89 45 dc             	mov    %eax,-0x24(%rbp)
  403dc4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403dc8:	48 83 c0 2b          	add    $0x2b,%rax
  403dcc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403dd0:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  403dd7:	75 09                	jne    403de2 <cvt_d+0x78>
  403dd9:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  403de0:	eb 16                	jmp    403df8 <cvt_d+0x8e>
  403de2:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  403de6:	79 0a                	jns    403df2 <cvt_d+0x88>
  403de8:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403deb:	f7 d8                	neg    %eax
  403ded:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403df0:	eb 06                	jmp    403df8 <cvt_d+0x8e>
  403df2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  403df5:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403df8:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403dfd:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403e00:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403e05:	89 c8                	mov    %ecx,%eax
  403e07:	f7 e2                	mul    %edx
  403e09:	c1 ea 03             	shr    $0x3,%edx
  403e0c:	89 d0                	mov    %edx,%eax
  403e0e:	c1 e0 02             	shl    $0x2,%eax
  403e11:	01 d0                	add    %edx,%eax
  403e13:	01 c0                	add    %eax,%eax
  403e15:	89 ca                	mov    %ecx,%edx
  403e17:	29 c2                	sub    %eax,%edx
  403e19:	89 d0                	mov    %edx,%eax
  403e1b:	83 c0 30             	add    $0x30,%eax
  403e1e:	89 c2                	mov    %eax,%edx
  403e20:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403e24:	88 10                	mov    %dl,(%rax)
  403e26:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403e29:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  403e2f:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403e34:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  403e3a:	f7 e2                	mul    %edx
  403e3c:	89 d0                	mov    %edx,%eax
  403e3e:	c1 e8 03             	shr    $0x3,%eax
  403e41:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403e44:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  403e48:	75 ae                	jne    403df8 <cvt_d+0x8e>
  403e4a:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
  403e4e:	79 0c                	jns    403e5c <cvt_d+0xf2>
  403e50:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403e55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403e59:	c6 00 2d             	movb   $0x2d,(%rax)
  403e5c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403e60:	48 83 c0 2b          	add    $0x2b,%rax
  403e64:	89 c2                	mov    %eax,%edx
  403e66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403e6a:	89 d1                	mov    %edx,%ecx
  403e6c:	29 c1                	sub    %eax,%ecx
  403e6e:	89 c8                	mov    %ecx,%eax
  403e70:	89 c3                	mov    %eax,%ebx
  403e72:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403e76:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403e7a:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403e7e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403e82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403e86:	8b 75 10             	mov    0x10(%rbp),%esi
  403e89:	89 34 24             	mov    %esi,(%rsp)
  403e8c:	45 89 c1             	mov    %r8d,%r9d
  403e8f:	49 89 f8             	mov    %rdi,%r8
  403e92:	89 de                	mov    %ebx,%esi
  403e94:	48 89 c7             	mov    %rax,%rdi
  403e97:	e8 cd 14 00 00       	callq  405369 <Fmt_putd>
  403e9c:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403ea3:	5b                   	pop    %rbx
  403ea4:	c9                   	leaveq 
  403ea5:	c3                   	retq   

0000000000403ea6 <cvt_u>:
  403ea6:	55                   	push   %rbp
  403ea7:	48 89 e5             	mov    %rsp,%rbp
  403eaa:	53                   	push   %rbx
  403eab:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
  403eb2:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403eb5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  403eb9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  403ebd:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403ec1:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403ec5:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  403ec9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  403ecd:	8b 10                	mov    (%rax),%edx
  403ecf:	83 fa 30             	cmp    $0x30,%edx
  403ed2:	73 15                	jae    403ee9 <cvt_u+0x43>
  403ed4:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403ed8:	8b 10                	mov    (%rax),%edx
  403eda:	89 d2                	mov    %edx,%edx
  403edc:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403ee0:	8b 08                	mov    (%rax),%ecx
  403ee2:	83 c1 08             	add    $0x8,%ecx
  403ee5:	89 08                	mov    %ecx,(%rax)
  403ee7:	eb 0f                	jmp    403ef8 <cvt_u+0x52>
  403ee9:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403eed:	48 89 ca             	mov    %rcx,%rdx
  403ef0:	48 83 c1 08          	add    $0x8,%rcx
  403ef4:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403ef8:	48 89 d0             	mov    %rdx,%rax
  403efb:	8b 00                	mov    (%rax),%eax
  403efd:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403f00:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403f04:	48 83 c0 2b          	add    $0x2b,%rax
  403f08:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  403f0c:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  403f11:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403f14:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403f19:	89 c8                	mov    %ecx,%eax
  403f1b:	f7 e2                	mul    %edx
  403f1d:	c1 ea 03             	shr    $0x3,%edx
  403f20:	89 d0                	mov    %edx,%eax
  403f22:	c1 e0 02             	shl    $0x2,%eax
  403f25:	01 d0                	add    %edx,%eax
  403f27:	01 c0                	add    %eax,%eax
  403f29:	89 ca                	mov    %ecx,%edx
  403f2b:	29 c2                	sub    %eax,%edx
  403f2d:	89 d0                	mov    %edx,%eax
  403f2f:	83 c0 30             	add    $0x30,%eax
  403f32:	89 c2                	mov    %eax,%edx
  403f34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403f38:	88 10                	mov    %dl,(%rax)
  403f3a:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  403f3d:	89 8d 7c ff ff ff    	mov    %ecx,-0x84(%rbp)
  403f43:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
  403f48:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
  403f4e:	f7 e2                	mul    %edx
  403f50:	89 d0                	mov    %edx,%eax
  403f52:	c1 e8 03             	shr    $0x3,%eax
  403f55:	89 45 ec             	mov    %eax,-0x14(%rbp)
  403f58:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  403f5c:	75 ae                	jne    403f0c <cvt_u+0x66>
  403f5e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  403f62:	48 83 c0 2b          	add    $0x2b,%rax
  403f66:	89 c2                	mov    %eax,%edx
  403f68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403f6c:	89 d1                	mov    %edx,%ecx
  403f6e:	29 c1                	sub    %eax,%ecx
  403f70:	89 c8                	mov    %ecx,%eax
  403f72:	89 c3                	mov    %eax,%ebx
  403f74:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  403f78:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  403f7c:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  403f80:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  403f84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  403f88:	8b 75 10             	mov    0x10(%rbp),%esi
  403f8b:	89 34 24             	mov    %esi,(%rsp)
  403f8e:	45 89 c1             	mov    %r8d,%r9d
  403f91:	49 89 f8             	mov    %rdi,%r8
  403f94:	89 de                	mov    %ebx,%esi
  403f96:	48 89 c7             	mov    %rax,%rdi
  403f99:	e8 cb 13 00 00       	callq  405369 <Fmt_putd>
  403f9e:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
  403fa5:	5b                   	pop    %rbx
  403fa6:	c9                   	leaveq 
  403fa7:	c3                   	retq   

0000000000403fa8 <cvt_o>:
  403fa8:	55                   	push   %rbp
  403fa9:	48 89 e5             	mov    %rsp,%rbp
  403fac:	53                   	push   %rbx
  403fad:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  403fb4:	89 7d ac             	mov    %edi,-0x54(%rbp)
  403fb7:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  403fbb:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  403fbf:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  403fc3:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  403fc7:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  403fcb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  403fcf:	8b 10                	mov    (%rax),%edx
  403fd1:	83 fa 30             	cmp    $0x30,%edx
  403fd4:	73 15                	jae    403feb <cvt_o+0x43>
  403fd6:	48 8b 48 10          	mov    0x10(%rax),%rcx
  403fda:	8b 10                	mov    (%rax),%edx
  403fdc:	89 d2                	mov    %edx,%edx
  403fde:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  403fe2:	8b 08                	mov    (%rax),%ecx
  403fe4:	83 c1 08             	add    $0x8,%ecx
  403fe7:	89 08                	mov    %ecx,(%rax)
  403fe9:	eb 0f                	jmp    403ffa <cvt_o+0x52>
  403feb:	48 8b 48 08          	mov    0x8(%rax),%rcx
  403fef:	48 89 ca             	mov    %rcx,%rdx
  403ff2:	48 83 c1 08          	add    $0x8,%rcx
  403ff6:	48 89 48 08          	mov    %rcx,0x8(%rax)
  403ffa:	48 89 d0             	mov    %rdx,%rax
  403ffd:	8b 00                	mov    (%rax),%eax
  403fff:	89 45 ec             	mov    %eax,-0x14(%rbp)
  404002:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  404006:	48 83 c0 2b          	add    $0x2b,%rax
  40400a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40400e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  404013:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404016:	83 e0 07             	and    $0x7,%eax
  404019:	83 c0 30             	add    $0x30,%eax
  40401c:	89 c2                	mov    %eax,%edx
  40401e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404022:	88 10                	mov    %dl,(%rax)
  404024:	c1 6d ec 03          	shrl   $0x3,-0x14(%rbp)
  404028:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  40402c:	75 e0                	jne    40400e <cvt_o+0x66>
  40402e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  404032:	48 83 c0 2b          	add    $0x2b,%rax
  404036:	89 c2                	mov    %eax,%edx
  404038:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40403c:	89 d1                	mov    %edx,%ecx
  40403e:	29 c1                	sub    %eax,%ecx
  404040:	89 c8                	mov    %ecx,%eax
  404042:	89 c3                	mov    %eax,%ebx
  404044:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  404048:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  40404c:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  404050:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  404054:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404058:	8b 75 10             	mov    0x10(%rbp),%esi
  40405b:	89 34 24             	mov    %esi,(%rsp)
  40405e:	45 89 c1             	mov    %r8d,%r9d
  404061:	49 89 f8             	mov    %rdi,%r8
  404064:	89 de                	mov    %ebx,%esi
  404066:	48 89 c7             	mov    %rax,%rdi
  404069:	e8 fb 12 00 00       	callq  405369 <Fmt_putd>
  40406e:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  404075:	5b                   	pop    %rbx
  404076:	c9                   	leaveq 
  404077:	c3                   	retq   

0000000000404078 <cvt_x>:
  404078:	55                   	push   %rbp
  404079:	48 89 e5             	mov    %rsp,%rbp
  40407c:	53                   	push   %rbx
  40407d:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  404084:	89 7d ac             	mov    %edi,-0x54(%rbp)
  404087:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  40408b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  40408f:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  404093:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  404097:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  40409b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  40409f:	8b 10                	mov    (%rax),%edx
  4040a1:	83 fa 30             	cmp    $0x30,%edx
  4040a4:	73 15                	jae    4040bb <cvt_x+0x43>
  4040a6:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4040aa:	8b 10                	mov    (%rax),%edx
  4040ac:	89 d2                	mov    %edx,%edx
  4040ae:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4040b2:	8b 08                	mov    (%rax),%ecx
  4040b4:	83 c1 08             	add    $0x8,%ecx
  4040b7:	89 08                	mov    %ecx,(%rax)
  4040b9:	eb 0f                	jmp    4040ca <cvt_x+0x52>
  4040bb:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4040bf:	48 89 ca             	mov    %rcx,%rdx
  4040c2:	48 83 c1 08          	add    $0x8,%rcx
  4040c6:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4040ca:	48 89 d0             	mov    %rdx,%rax
  4040cd:	8b 00                	mov    (%rax),%eax
  4040cf:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4040d2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4040d6:	48 83 c0 2b          	add    $0x2b,%rax
  4040da:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4040de:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  4040e3:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4040e6:	83 e0 0f             	and    $0xf,%eax
  4040e9:	89 c2                	mov    %eax,%edx
  4040eb:	48 8d 05 20 1a 00 00 	lea    0x1a20(%rip),%rax        # 405b12 <_IO_stdin_used+0x42a>
  4040f2:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  4040f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4040fa:	88 10                	mov    %dl,(%rax)
  4040fc:	c1 6d ec 04          	shrl   $0x4,-0x14(%rbp)
  404100:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  404104:	75 d8                	jne    4040de <cvt_x+0x66>
  404106:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  40410a:	48 83 c0 2b          	add    $0x2b,%rax
  40410e:	89 c2                	mov    %eax,%edx
  404110:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404114:	89 d1                	mov    %edx,%ecx
  404116:	29 c1                	sub    %eax,%ecx
  404118:	89 c8                	mov    %ecx,%eax
  40411a:	89 c3                	mov    %eax,%ebx
  40411c:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  404120:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  404124:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  404128:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  40412c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404130:	8b 75 10             	mov    0x10(%rbp),%esi
  404133:	89 34 24             	mov    %esi,(%rsp)
  404136:	45 89 c1             	mov    %r8d,%r9d
  404139:	49 89 f8             	mov    %rdi,%r8
  40413c:	89 de                	mov    %ebx,%esi
  40413e:	48 89 c7             	mov    %rax,%rdi
  404141:	e8 23 12 00 00       	callq  405369 <Fmt_putd>
  404146:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  40414d:	5b                   	pop    %rbx
  40414e:	c9                   	leaveq 
  40414f:	c3                   	retq   

0000000000404150 <cvt_p>:
  404150:	55                   	push   %rbp
  404151:	48 89 e5             	mov    %rsp,%rbp
  404154:	53                   	push   %rbx
  404155:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
  40415c:	89 7d ac             	mov    %edi,-0x54(%rbp)
  40415f:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  404163:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  404167:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)
  40416b:	4c 89 45 88          	mov    %r8,-0x78(%rbp)
  40416f:	44 89 4d 84          	mov    %r9d,-0x7c(%rbp)
  404173:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
  404177:	8b 10                	mov    (%rax),%edx
  404179:	83 fa 30             	cmp    $0x30,%edx
  40417c:	73 15                	jae    404193 <cvt_p+0x43>
  40417e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  404182:	8b 10                	mov    (%rax),%edx
  404184:	89 d2                	mov    %edx,%edx
  404186:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40418a:	8b 08                	mov    (%rax),%ecx
  40418c:	83 c1 08             	add    $0x8,%ecx
  40418f:	89 08                	mov    %ecx,(%rax)
  404191:	eb 0f                	jmp    4041a2 <cvt_p+0x52>
  404193:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404197:	48 89 ca             	mov    %rcx,%rdx
  40419a:	48 83 c1 08          	add    $0x8,%rcx
  40419e:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4041a2:	48 89 d0             	mov    %rdx,%rax
  4041a5:	48 8b 00             	mov    (%rax),%rax
  4041a8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4041ac:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4041b0:	48 83 c0 2b          	add    $0x2b,%rax
  4041b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4041b8:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%rbp)
  4041bf:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
  4041c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4041c8:	48 89 c2             	mov    %rax,%rdx
  4041cb:	83 e2 0f             	and    $0xf,%edx
  4041ce:	48 8d 05 3d 19 00 00 	lea    0x193d(%rip),%rax        # 405b12 <_IO_stdin_used+0x42a>
  4041d5:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
  4041d9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4041dd:	88 10                	mov    %dl,(%rax)
  4041df:	48 c1 6d e8 04       	shrq   $0x4,-0x18(%rbp)
  4041e4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4041e9:	75 d4                	jne    4041bf <cvt_p+0x6f>
  4041eb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
  4041ef:	48 83 c0 2b          	add    $0x2b,%rax
  4041f3:	89 c2                	mov    %eax,%edx
  4041f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4041f9:	89 d1                	mov    %edx,%ecx
  4041fb:	29 c1                	sub    %eax,%ecx
  4041fd:	89 c8                	mov    %ecx,%eax
  4041ff:	89 c3                	mov    %eax,%ebx
  404201:	44 8b 45 84          	mov    -0x7c(%rbp),%r8d
  404205:	48 8b 7d 88          	mov    -0x78(%rbp),%rdi
  404209:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
  40420d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  404211:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404215:	8b 75 dc             	mov    -0x24(%rbp),%esi
  404218:	89 34 24             	mov    %esi,(%rsp)
  40421b:	45 89 c1             	mov    %r8d,%r9d
  40421e:	49 89 f8             	mov    %rdi,%r8
  404221:	89 de                	mov    %ebx,%esi
  404223:	48 89 c7             	mov    %rax,%rdi
  404226:	e8 3e 11 00 00       	callq  405369 <Fmt_putd>
  40422b:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
  404232:	5b                   	pop    %rbx
  404233:	c9                   	leaveq 
  404234:	c3                   	retq   

0000000000404235 <cvt_c>:
  404235:	55                   	push   %rbp
  404236:	48 89 e5             	mov    %rsp,%rbp
  404239:	48 83 ec 40          	sub    $0x40,%rsp
  40423d:	89 7d ec             	mov    %edi,-0x14(%rbp)
  404240:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404244:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  404248:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40424c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  404250:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  404254:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  40425b:	75 07                	jne    404264 <cvt_c+0x2f>
  40425d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  404264:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  404268:	79 0e                	jns    404278 <cvt_c+0x43>
  40426a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40426e:	48 83 c0 2d          	add    $0x2d,%rax
  404272:	c6 00 01             	movb   $0x1,(%rax)
  404275:	f7 5d c4             	negl   -0x3c(%rbp)
  404278:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40427c:	48 83 c0 2d          	add    $0x2d,%rax
  404280:	0f b6 00             	movzbl (%rax),%eax
  404283:	84 c0                	test   %al,%al
  404285:	75 2c                	jne    4042b3 <cvt_c+0x7e>
  404287:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40428a:	83 e8 01             	sub    $0x1,%eax
  40428d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  404290:	eb 12                	jmp    4042a4 <cvt_c+0x6f>
  404292:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404296:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40429a:	48 89 c6             	mov    %rax,%rsi
  40429d:	bf 20 00 00 00       	mov    $0x20,%edi
  4042a2:	ff d2                	callq  *%rdx
  4042a4:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4042a8:	0f 9f c0             	setg   %al
  4042ab:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  4042af:	84 c0                	test   %al,%al
  4042b1:	75 df                	jne    404292 <cvt_c+0x5d>
  4042b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4042b7:	8b 10                	mov    (%rax),%edx
  4042b9:	83 fa 30             	cmp    $0x30,%edx
  4042bc:	73 15                	jae    4042d3 <cvt_c+0x9e>
  4042be:	48 8b 48 10          	mov    0x10(%rax),%rcx
  4042c2:	8b 10                	mov    (%rax),%edx
  4042c4:	89 d2                	mov    %edx,%edx
  4042c6:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  4042ca:	8b 08                	mov    (%rax),%ecx
  4042cc:	83 c1 08             	add    $0x8,%ecx
  4042cf:	89 08                	mov    %ecx,(%rax)
  4042d1:	eb 0f                	jmp    4042e2 <cvt_c+0xad>
  4042d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4042d7:	48 89 ca             	mov    %rcx,%rdx
  4042da:	48 83 c1 08          	add    $0x8,%rcx
  4042de:	48 89 48 08          	mov    %rcx,0x8(%rax)
  4042e2:	48 89 d0             	mov    %rdx,%rax
  4042e5:	8b 00                	mov    (%rax),%eax
  4042e7:	0f b6 c0             	movzbl %al,%eax
  4042ea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4042ee:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  4042f2:	48 89 d6             	mov    %rdx,%rsi
  4042f5:	89 c7                	mov    %eax,%edi
  4042f7:	ff d1                	callq  *%rcx
  4042f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4042fd:	48 83 c0 2d          	add    $0x2d,%rax
  404301:	0f b6 00             	movzbl (%rax),%eax
  404304:	84 c0                	test   %al,%al
  404306:	74 2c                	je     404334 <cvt_c+0xff>
  404308:	8b 45 c4             	mov    -0x3c(%rbp),%eax
  40430b:	83 e8 01             	sub    $0x1,%eax
  40430e:	89 45 f8             	mov    %eax,-0x8(%rbp)
  404311:	eb 12                	jmp    404325 <cvt_c+0xf0>
  404313:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404317:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40431b:	48 89 c6             	mov    %rax,%rsi
  40431e:	bf 20 00 00 00       	mov    $0x20,%edi
  404323:	ff d2                	callq  *%rdx
  404325:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  404329:	0f 9f c0             	setg   %al
  40432c:	83 6d f8 01          	subl   $0x1,-0x8(%rbp)
  404330:	84 c0                	test   %al,%al
  404332:	75 df                	jne    404313 <cvt_c+0xde>
  404334:	c9                   	leaveq 
  404335:	c3                   	retq   

0000000000404336 <cvt_f>:
  404336:	55                   	push   %rbp
  404337:	48 89 e5             	mov    %rsp,%rbp
  40433a:	53                   	push   %rbx
  40433b:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
  404342:	89 bd 4c fe ff ff    	mov    %edi,-0x1b4(%rbp)
  404348:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
  40434f:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  404356:	48 89 8d 30 fe ff ff 	mov    %rcx,-0x1d0(%rbp)
  40435d:	4c 89 85 28 fe ff ff 	mov    %r8,-0x1d8(%rbp)
  404364:	44 89 8d 24 fe ff ff 	mov    %r9d,-0x1dc(%rbp)
  40436b:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  40436f:	79 07                	jns    404378 <cvt_f+0x42>
  404371:	c7 45 10 06 00 00 00 	movl   $0x6,0x10(%rbp)
  404378:	83 bd 4c fe ff ff 67 	cmpl   $0x67,-0x1b4(%rbp)
  40437f:	75 0d                	jne    40438e <cvt_f+0x58>
  404381:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  404385:	75 07                	jne    40438e <cvt_f+0x58>
  404387:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  40438e:	83 7d 10 63          	cmpl   $0x63,0x10(%rbp)
  404392:	7e 1b                	jle    4043af <cvt_f+0x79>
  404394:	ba 7e 00 00 00       	mov    $0x7e,%edx
  404399:	48 8d 35 68 17 00 00 	lea    0x1768(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  4043a0:	48 8d 05 11 2a 20 00 	lea    0x202a11(%rip),%rax        # 606db8 <Assert_Failed>
  4043a7:	48 89 c7             	mov    %rax,%rdi
  4043aa:	e8 41 d6 ff ff       	callq  4019f0 <Except_raise>
  4043af:	8b 85 4c fe ff ff    	mov    -0x1b4(%rbp),%eax
  4043b5:	88 05 5e 2d 20 00    	mov    %al,0x202d5e(%rip)        # 607119 <fmt.2280+0x4>
  4043bb:	8b 4d 10             	mov    0x10(%rbp),%ecx
  4043be:	ba 67 66 66 66       	mov    $0x66666667,%edx
  4043c3:	89 c8                	mov    %ecx,%eax
  4043c5:	f7 ea                	imul   %edx
  4043c7:	c1 fa 02             	sar    $0x2,%edx
  4043ca:	89 c8                	mov    %ecx,%eax
  4043cc:	c1 f8 1f             	sar    $0x1f,%eax
  4043cf:	29 c2                	sub    %eax,%edx
  4043d1:	89 d0                	mov    %edx,%eax
  4043d3:	c1 e0 02             	shl    $0x2,%eax
  4043d6:	01 d0                	add    %edx,%eax
  4043d8:	01 c0                	add    %eax,%eax
  4043da:	89 ca                	mov    %ecx,%edx
  4043dc:	29 c2                	sub    %eax,%edx
  4043de:	89 d0                	mov    %edx,%eax
  4043e0:	83 c0 30             	add    $0x30,%eax
  4043e3:	88 05 2f 2d 20 00    	mov    %al,0x202d2f(%rip)        # 607118 <fmt.2280+0x3>
  4043e9:	8b 4d 10             	mov    0x10(%rbp),%ecx
  4043ec:	ba 67 66 66 66       	mov    $0x66666667,%edx
  4043f1:	89 c8                	mov    %ecx,%eax
  4043f3:	f7 ea                	imul   %edx
  4043f5:	c1 fa 02             	sar    $0x2,%edx
  4043f8:	89 c8                	mov    %ecx,%eax
  4043fa:	c1 f8 1f             	sar    $0x1f,%eax
  4043fd:	89 d1                	mov    %edx,%ecx
  4043ff:	29 c1                	sub    %eax,%ecx
  404401:	ba 67 66 66 66       	mov    $0x66666667,%edx
  404406:	89 c8                	mov    %ecx,%eax
  404408:	f7 ea                	imul   %edx
  40440a:	c1 fa 02             	sar    $0x2,%edx
  40440d:	89 c8                	mov    %ecx,%eax
  40440f:	c1 f8 1f             	sar    $0x1f,%eax
  404412:	29 c2                	sub    %eax,%edx
  404414:	89 d0                	mov    %edx,%eax
  404416:	c1 e0 02             	shl    $0x2,%eax
  404419:	01 d0                	add    %edx,%eax
  40441b:	01 c0                	add    %eax,%eax
  40441d:	89 ca                	mov    %ecx,%edx
  40441f:	29 c2                	sub    %eax,%edx
  404421:	89 d0                	mov    %edx,%eax
  404423:	83 c0 30             	add    $0x30,%eax
  404426:	88 05 eb 2c 20 00    	mov    %al,0x202ceb(%rip)        # 607117 <fmt.2280+0x2>
  40442c:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
  404433:	8b 50 04             	mov    0x4(%rax),%edx
  404436:	81 fa b0 00 00 00    	cmp    $0xb0,%edx
  40443c:	73 18                	jae    404456 <cvt_f+0x120>
  40443e:	48 8b 48 10          	mov    0x10(%rax),%rcx
  404442:	8b 50 04             	mov    0x4(%rax),%edx
  404445:	89 d2                	mov    %edx,%edx
  404447:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  40444b:	8b 48 04             	mov    0x4(%rax),%ecx
  40444e:	83 c1 10             	add    $0x10,%ecx
  404451:	89 48 04             	mov    %ecx,0x4(%rax)
  404454:	eb 0f                	jmp    404465 <cvt_f+0x12f>
  404456:	48 8b 48 08          	mov    0x8(%rax),%rcx
  40445a:	48 89 ca             	mov    %rcx,%rdx
  40445d:	48 83 c1 08          	add    $0x8,%rcx
  404461:	48 89 48 08          	mov    %rcx,0x8(%rax)
  404465:	48 89 d0             	mov    %rdx,%rax
  404468:	f2 0f 10 00          	movsd  (%rax),%xmm0
  40446c:	48 8d 15 a2 2c 20 00 	lea    0x202ca2(%rip),%rdx        # 607115 <fmt.2280>
  404473:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  40447a:	48 89 d6             	mov    %rdx,%rsi
  40447d:	48 89 c7             	mov    %rax,%rdi
  404480:	b8 01 00 00 00       	mov    $0x1,%eax
  404485:	e8 86 c7 ff ff       	callq  400c10 <sprintf@plt>
  40448a:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  404491:	48 89 c7             	mov    %rax,%rdi
  404494:	e8 97 c6 ff ff       	callq  400b30 <strlen@plt>
  404499:	89 c3                	mov    %eax,%ebx
  40449b:	44 8b 85 24 fe ff ff 	mov    -0x1dc(%rbp),%r8d
  4044a2:	48 8b bd 28 fe ff ff 	mov    -0x1d8(%rbp),%rdi
  4044a9:	48 8b 8d 30 fe ff ff 	mov    -0x1d0(%rbp),%rcx
  4044b0:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
  4044b7:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
  4044be:	8b 75 10             	mov    0x10(%rbp),%esi
  4044c1:	89 34 24             	mov    %esi,(%rsp)
  4044c4:	45 89 c1             	mov    %r8d,%r9d
  4044c7:	49 89 f8             	mov    %rdi,%r8
  4044ca:	89 de                	mov    %ebx,%esi
  4044cc:	48 89 c7             	mov    %rax,%rdi
  4044cf:	e8 95 0e 00 00       	callq  405369 <Fmt_putd>
  4044d4:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
  4044db:	5b                   	pop    %rbx
  4044dc:	c9                   	leaveq 
  4044dd:	c3                   	retq   

00000000004044de <outc>:
  4044de:	55                   	push   %rbp
  4044df:	48 89 e5             	mov    %rsp,%rbp
  4044e2:	48 83 ec 20          	sub    $0x20,%rsp
  4044e6:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4044e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4044ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4044f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4044f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4044f9:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4044fc:	48 89 d6             	mov    %rdx,%rsi
  4044ff:	89 c7                	mov    %eax,%edi
  404501:	e8 5a c6 ff ff       	callq  400b60 <_IO_putc@plt>
  404506:	c9                   	leaveq 
  404507:	c3                   	retq   

0000000000404508 <insert>:
  404508:	55                   	push   %rbp
  404509:	48 89 e5             	mov    %rsp,%rbp
  40450c:	48 83 ec 20          	sub    $0x20,%rsp
  404510:	89 7d ec             	mov    %edi,-0x14(%rbp)
  404513:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  404517:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40451b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40451f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404523:	48 8b 50 08          	mov    0x8(%rax),%rdx
  404527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40452b:	48 8b 08             	mov    (%rax),%rcx
  40452e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404532:	8b 40 10             	mov    0x10(%rax),%eax
  404535:	48 98                	cltq   
  404537:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  40453b:	48 39 c2             	cmp    %rax,%rdx
  40453e:	72 1b                	jb     40455b <insert+0x53>
  404540:	ba a2 00 00 00       	mov    $0xa2,%edx
  404545:	48 8d 35 bc 15 00 00 	lea    0x15bc(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  40454c:	48 8d 05 75 28 20 00 	lea    0x202875(%rip),%rax        # 606dc8 <Fmt_Overflow>
  404553:	48 89 c7             	mov    %rax,%rdi
  404556:	e8 95 d4 ff ff       	callq  4019f0 <Except_raise>
  40455b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40455f:	48 8b 40 08          	mov    0x8(%rax),%rax
  404563:	8b 55 ec             	mov    -0x14(%rbp),%edx
  404566:	88 10                	mov    %dl,(%rax)
  404568:	48 8d 50 01          	lea    0x1(%rax),%rdx
  40456c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  404570:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404574:	8b 45 ec             	mov    -0x14(%rbp),%eax
  404577:	c9                   	leaveq 
  404578:	c3                   	retq   

0000000000404579 <append>:
  404579:	55                   	push   %rbp
  40457a:	48 89 e5             	mov    %rsp,%rbp
  40457d:	53                   	push   %rbx
  40457e:	48 83 ec 28          	sub    $0x28,%rsp
  404582:	89 7d dc             	mov    %edi,-0x24(%rbp)
  404585:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  404589:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40458d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  404591:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404595:	48 8b 50 08          	mov    0x8(%rax),%rdx
  404599:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40459d:	48 8b 08             	mov    (%rax),%rcx
  4045a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045a4:	8b 40 10             	mov    0x10(%rax),%eax
  4045a7:	48 98                	cltq   
  4045a9:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax
  4045ad:	48 39 c2             	cmp    %rax,%rdx
  4045b0:	72 60                	jb     404612 <append+0x99>
  4045b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045b6:	8b 40 10             	mov    0x10(%rax),%eax
  4045b9:	01 c0                	add    %eax,%eax
  4045bb:	48 63 d8             	movslq %eax,%rbx
  4045be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045c2:	48 8b 00             	mov    (%rax),%rax
  4045c5:	b9 a9 00 00 00       	mov    $0xa9,%ecx
  4045ca:	48 8d 15 37 15 00 00 	lea    0x1537(%rip),%rdx        # 405b08 <_IO_stdin_used+0x420>
  4045d1:	48 89 de             	mov    %rbx,%rsi
  4045d4:	48 89 c7             	mov    %rax,%rdi
  4045d7:	e8 24 d7 ff ff       	callq  401d00 <Mem_resize>
  4045dc:	48 89 c2             	mov    %rax,%rdx
  4045df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045e3:	48 89 10             	mov    %rdx,(%rax)
  4045e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045ea:	48 8b 10             	mov    (%rax),%rdx
  4045ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045f1:	8b 40 10             	mov    0x10(%rax),%eax
  4045f4:	48 98                	cltq   
  4045f6:	48 01 c2             	add    %rax,%rdx
  4045f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4045fd:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404601:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404605:	8b 40 10             	mov    0x10(%rax),%eax
  404608:	8d 14 00             	lea    (%rax,%rax,1),%edx
  40460b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40460f:	89 50 10             	mov    %edx,0x10(%rax)
  404612:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404616:	48 8b 40 08          	mov    0x8(%rax),%rax
  40461a:	8b 55 dc             	mov    -0x24(%rbp),%edx
  40461d:	88 10                	mov    %dl,(%rax)
  40461f:	48 8d 50 01          	lea    0x1(%rax),%rdx
  404623:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404627:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40462b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40462e:	48 83 c4 28          	add    $0x28,%rsp
  404632:	5b                   	pop    %rbx
  404633:	c9                   	leaveq 
  404634:	c3                   	retq   

0000000000404635 <Fmt_puts>:
  404635:	55                   	push   %rbp
  404636:	48 89 e5             	mov    %rsp,%rbp
  404639:	48 83 ec 40          	sub    $0x40,%rsp
  40463d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  404641:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  404644:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  404648:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  40464c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  404650:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
  404654:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  404659:	75 1b                	jne    404676 <Fmt_puts+0x41>
  40465b:	ba b3 00 00 00       	mov    $0xb3,%edx
  404660:	48 8d 35 a1 14 00 00 	lea    0x14a1(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404667:	48 8d 05 4a 27 20 00 	lea    0x20274a(%rip),%rax        # 606db8 <Assert_Failed>
  40466e:	48 89 c7             	mov    %rax,%rdi
  404671:	e8 7a d3 ff ff       	callq  4019f0 <Except_raise>
  404676:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40467a:	79 1b                	jns    404697 <Fmt_puts+0x62>
  40467c:	ba b4 00 00 00       	mov    $0xb4,%edx
  404681:	48 8d 35 80 14 00 00 	lea    0x1480(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404688:	48 8d 05 29 27 20 00 	lea    0x202729(%rip),%rax        # 606db8 <Assert_Failed>
  40468f:	48 89 c7             	mov    %rax,%rdi
  404692:	e8 59 d3 ff ff       	callq  4019f0 <Except_raise>
  404697:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  40469c:	75 1b                	jne    4046b9 <Fmt_puts+0x84>
  40469e:	ba b5 00 00 00       	mov    $0xb5,%edx
  4046a3:	48 8d 35 5e 14 00 00 	lea    0x145e(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  4046aa:	48 8d 05 07 27 20 00 	lea    0x202707(%rip),%rax        # 606db8 <Assert_Failed>
  4046b1:	48 89 c7             	mov    %rax,%rdi
  4046b4:	e8 37 d3 ff ff       	callq  4019f0 <Except_raise>
  4046b9:	81 7d c4 00 00 00 80 	cmpl   $0x80000000,-0x3c(%rbp)
  4046c0:	75 07                	jne    4046c9 <Fmt_puts+0x94>
  4046c2:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
  4046c9:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
  4046cd:	79 0e                	jns    4046dd <Fmt_puts+0xa8>
  4046cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4046d3:	48 83 c0 2d          	add    $0x2d,%rax
  4046d7:	c6 00 01             	movb   $0x1,(%rax)
  4046da:	f7 5d c4             	negl   -0x3c(%rbp)
  4046dd:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4046e1:	78 0b                	js     4046ee <Fmt_puts+0xb9>
  4046e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4046e7:	48 83 c0 30          	add    $0x30,%rax
  4046eb:	c6 00 00             	movb   $0x0,(%rax)
  4046ee:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4046f2:	78 0e                	js     404702 <Fmt_puts+0xcd>
  4046f4:	8b 45 10             	mov    0x10(%rbp),%eax
  4046f7:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  4046fa:	7d 06                	jge    404702 <Fmt_puts+0xcd>
  4046fc:	8b 45 10             	mov    0x10(%rbp),%eax
  4046ff:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  404702:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  404706:	48 83 c0 2d          	add    $0x2d,%rax
  40470a:	0f b6 00             	movzbl (%rax),%eax
  40470d:	84 c0                	test   %al,%al
  40470f:	75 32                	jne    404743 <Fmt_puts+0x10e>
  404711:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  404714:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  404717:	89 d1                	mov    %edx,%ecx
  404719:	29 c1                	sub    %eax,%ecx
  40471b:	89 c8                	mov    %ecx,%eax
  40471d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  404720:	eb 12                	jmp    404734 <Fmt_puts+0xff>
  404722:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404726:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40472a:	48 89 c6             	mov    %rax,%rsi
  40472d:	bf 20 00 00 00       	mov    $0x20,%edi
  404732:	ff d2                	callq  *%rdx
  404734:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  404738:	0f 9f c0             	setg   %al
  40473b:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  40473f:	84 c0                	test   %al,%al
  404741:	75 df                	jne    404722 <Fmt_puts+0xed>
  404743:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  40474a:	eb 22                	jmp    40476e <Fmt_puts+0x139>
  40474c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404750:	0f b6 00             	movzbl (%rax),%eax
  404753:	0f b6 c0             	movzbl %al,%eax
  404756:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  40475b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40475f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  404763:	48 89 d6             	mov    %rdx,%rsi
  404766:	89 c7                	mov    %eax,%edi
  404768:	ff d1                	callq  *%rcx
  40476a:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40476e:	8b 45 f8             	mov    -0x8(%rbp),%eax
  404771:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
  404774:	7c d6                	jl     40474c <Fmt_puts+0x117>
  404776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40477a:	48 83 c0 2d          	add    $0x2d,%rax
  40477e:	0f b6 00             	movzbl (%rax),%eax
  404781:	84 c0                	test   %al,%al
  404783:	74 32                	je     4047b7 <Fmt_puts+0x182>
  404785:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  404788:	8b 55 c4             	mov    -0x3c(%rbp),%edx
  40478b:	89 d1                	mov    %edx,%ecx
  40478d:	29 c1                	sub    %eax,%ecx
  40478f:	89 c8                	mov    %ecx,%eax
  404791:	89 45 f4             	mov    %eax,-0xc(%rbp)
  404794:	eb 12                	jmp    4047a8 <Fmt_puts+0x173>
  404796:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40479a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40479e:	48 89 c6             	mov    %rax,%rsi
  4047a1:	bf 20 00 00 00       	mov    $0x20,%edi
  4047a6:	ff d2                	callq  *%rdx
  4047a8:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  4047ac:	0f 9f c0             	setg   %al
  4047af:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  4047b3:	84 c0                	test   %al,%al
  4047b5:	75 df                	jne    404796 <Fmt_puts+0x161>
  4047b7:	c9                   	leaveq 
  4047b8:	c3                   	retq   

00000000004047b9 <Fmt_fmt>:
  4047b9:	55                   	push   %rbp
  4047ba:	48 89 e5             	mov    %rsp,%rbp
  4047bd:	53                   	push   %rbx
  4047be:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  4047c5:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  4047cc:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  4047d3:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  4047da:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  4047e1:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  4047e8:	0f b6 c0             	movzbl %al,%eax
  4047eb:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  4047f2:	00 
  4047f3:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 404823 <Fmt_fmt+0x6a>
  4047fa:	48 29 c8             	sub    %rcx,%rax
  4047fd:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  404801:	ff e0                	jmpq   *%rax
  404803:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  404807:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  40480b:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  40480f:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  404813:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  404817:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  40481b:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  40481f:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  404823:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  40482a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404831:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  404837:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40483e:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404845:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40484c:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404850:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404854:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  40485b:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  404862:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404866:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  40486d:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  404874:	48 8b 9d 10 ff ff ff 	mov    -0xf0(%rbp),%rbx
  40487b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  404882:	48 89 de             	mov    %rbx,%rsi
  404885:	48 89 c7             	mov    %rax,%rdi
  404888:	e8 2b 05 00 00       	callq  404db8 <Fmt_vfmt>
  40488d:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  404894:	5b                   	pop    %rbx
  404895:	c9                   	leaveq 
  404896:	c3                   	retq   

0000000000404897 <Fmt_print>:
  404897:	55                   	push   %rbp
  404898:	48 89 e5             	mov    %rsp,%rbp
  40489b:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  4048a2:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  4048a9:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  4048b0:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  4048b7:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  4048be:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  4048c5:	0f b6 c0             	movzbl %al,%eax
  4048c8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4048cf:	00 
  4048d0:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 404900 <Fmt_print+0x69>
  4048d7:	48 29 d0             	sub    %rdx,%rax
  4048da:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  4048de:	ff e0                	jmpq   *%rax
  4048e0:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  4048e4:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  4048e8:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  4048ec:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  4048f0:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  4048f4:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  4048f8:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  4048fc:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  404900:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  404907:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40490e:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  404914:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  40491b:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404922:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404929:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  40492d:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404931:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404938:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  40493f:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404943:	48 8b 05 8e 26 20 00 	mov    0x20268e(%rip),%rax        # 606fd8 <stdout@GLIBC_2.2.5>
  40494a:	48 8b 00             	mov    (%rax),%rax
  40494d:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  404954:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
  40495b:	48 89 c6             	mov    %rax,%rsi
  40495e:	48 8d 3d 79 fb ff ff 	lea    -0x487(%rip),%rdi        # 4044de <outc>
  404965:	e8 4e 04 00 00       	callq  404db8 <Fmt_vfmt>
  40496a:	c9                   	leaveq 
  40496b:	c3                   	retq   

000000000040496c <Fmt_fprint>:
  40496c:	55                   	push   %rbp
  40496d:	48 89 e5             	mov    %rsp,%rbp
  404970:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  404977:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  40497e:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  404985:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  40498c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  404993:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  40499a:	0f b6 c0             	movzbl %al,%eax
  40499d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  4049a4:	00 
  4049a5:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 4049d5 <Fmt_fprint+0x69>
  4049ac:	48 29 d0             	sub    %rdx,%rax
  4049af:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  4049b3:	ff e0                	jmpq   *%rax
  4049b5:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  4049b9:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  4049bd:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  4049c1:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  4049c5:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  4049c9:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  4049cd:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  4049d1:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  4049d5:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
  4049dc:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  4049e3:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
  4049e9:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  4049f0:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  4049f7:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  4049fe:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404a02:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404a06:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404a0d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  404a14:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404a18:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
  404a1f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
  404a26:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  404a2d:	48 89 c6             	mov    %rax,%rsi
  404a30:	48 8d 3d a7 fa ff ff 	lea    -0x559(%rip),%rdi        # 4044de <outc>
  404a37:	e8 7c 03 00 00       	callq  404db8 <Fmt_vfmt>
  404a3c:	c9                   	leaveq 
  404a3d:	c3                   	retq   

0000000000404a3e <Fmt_sfmt>:
  404a3e:	55                   	push   %rbp
  404a3f:	48 89 e5             	mov    %rsp,%rbp
  404a42:	53                   	push   %rbx
  404a43:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
  404a4a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
  404a51:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)
  404a57:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
  404a5e:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)
  404a65:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)
  404a6c:	0f b6 c0             	movzbl %al,%eax
  404a6f:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
  404a76:	00 
  404a77:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 404aa7 <Fmt_sfmt+0x69>
  404a7e:	48 29 c8             	sub    %rcx,%rax
  404a81:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx
  404a85:	ff e0                	jmpq   *%rax
  404a87:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)
  404a8b:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)
  404a8f:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)
  404a93:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)
  404a97:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)
  404a9b:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)
  404a9f:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)
  404aa3:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)
  404aa7:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)
  404aae:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404ab5:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
  404abb:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404ac2:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404ac9:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404ad0:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404ad4:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404ad8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
  404adf:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
  404ae6:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404aea:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx
  404af1:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
  404af8:	8b 9d 14 ff ff ff    	mov    -0xec(%rbp),%ebx
  404afe:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
  404b05:	89 de                	mov    %ebx,%esi
  404b07:	48 89 c7             	mov    %rax,%rdi
  404b0a:	e8 16 00 00 00       	callq  404b25 <Fmt_vsfmt>
  404b0f:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
  404b15:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
  404b1b:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp
  404b22:	5b                   	pop    %rbx
  404b23:	c9                   	leaveq 
  404b24:	c3                   	retq   

0000000000404b25 <Fmt_vsfmt>:
  404b25:	55                   	push   %rbp
  404b26:	48 89 e5             	mov    %rsp,%rbp
  404b29:	48 83 ec 40          	sub    $0x40,%rsp
  404b2d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  404b31:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  404b34:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  404b38:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  404b3c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  404b41:	75 1b                	jne    404b5e <Fmt_vsfmt+0x39>
  404b43:	ba e8 00 00 00       	mov    $0xe8,%edx
  404b48:	48 8d 35 b9 0f 00 00 	lea    0xfb9(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404b4f:	48 8d 05 62 22 20 00 	lea    0x202262(%rip),%rax        # 606db8 <Assert_Failed>
  404b56:	48 89 c7             	mov    %rax,%rdi
  404b59:	e8 92 ce ff ff       	callq  4019f0 <Except_raise>
  404b5e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  404b62:	7f 1b                	jg     404b7f <Fmt_vsfmt+0x5a>
  404b64:	ba e9 00 00 00       	mov    $0xe9,%edx
  404b69:	48 8d 35 98 0f 00 00 	lea    0xf98(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404b70:	48 8d 05 41 22 20 00 	lea    0x202241(%rip),%rax        # 606db8 <Assert_Failed>
  404b77:	48 89 c7             	mov    %rax,%rdi
  404b7a:	e8 71 ce ff ff       	callq  4019f0 <Except_raise>
  404b7f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  404b84:	75 1b                	jne    404ba1 <Fmt_vsfmt+0x7c>
  404b86:	ba ea 00 00 00       	mov    $0xea,%edx
  404b8b:	48 8d 35 76 0f 00 00 	lea    0xf76(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404b92:	48 8d 05 1f 22 20 00 	lea    0x20221f(%rip),%rax        # 606db8 <Assert_Failed>
  404b99:	48 89 c7             	mov    %rax,%rdi
  404b9c:	e8 4f ce ff ff       	callq  4019f0 <Except_raise>
  404ba1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404ba5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  404ba9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404bad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  404bb1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  404bb4:	89 45 f0             	mov    %eax,-0x10(%rbp)
  404bb7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  404bbb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404bbf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  404bc3:	48 89 c6             	mov    %rax,%rsi
  404bc6:	48 8d 3d 3b f9 ff ff 	lea    -0x6c5(%rip),%rdi        # 404508 <insert>
  404bcd:	e8 e6 01 00 00       	callq  404db8 <Fmt_vfmt>
  404bd2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  404bd6:	48 89 c6             	mov    %rax,%rsi
  404bd9:	bf 00 00 00 00       	mov    $0x0,%edi
  404bde:	e8 25 f9 ff ff       	callq  404508 <insert>
  404be3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  404be7:	89 c2                	mov    %eax,%edx
  404be9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  404bed:	89 d1                	mov    %edx,%ecx
  404bef:	29 c1                	sub    %eax,%ecx
  404bf1:	89 c8                	mov    %ecx,%eax
  404bf3:	83 e8 01             	sub    $0x1,%eax
  404bf6:	c9                   	leaveq 
  404bf7:	c3                   	retq   

0000000000404bf8 <Fmt_string>:
  404bf8:	55                   	push   %rbp
  404bf9:	48 89 e5             	mov    %rsp,%rbp
  404bfc:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
  404c03:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
  404c0a:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
  404c11:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
  404c18:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
  404c1f:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
  404c26:	0f b6 c0             	movzbl %al,%eax
  404c29:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
  404c30:	00 
  404c31:	48 8d 05 29 00 00 00 	lea    0x29(%rip),%rax        # 404c61 <Fmt_string+0x69>
  404c38:	48 29 d0             	sub    %rdx,%rax
  404c3b:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx
  404c3f:	ff e0                	jmpq   *%rax
  404c41:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)
  404c45:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)
  404c49:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)
  404c4d:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)
  404c51:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)
  404c55:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)
  404c59:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)
  404c5d:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)
  404c61:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  404c68:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
  404c6f:	00 
  404c70:	75 1b                	jne    404c8d <Fmt_string+0x95>
  404c72:	ba f4 00 00 00       	mov    $0xf4,%edx
  404c77:	48 8d 35 8a 0e 00 00 	lea    0xe8a(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404c7e:	48 8d 05 33 21 20 00 	lea    0x202133(%rip),%rax        # 606db8 <Assert_Failed>
  404c85:	48 89 c7             	mov    %rax,%rdi
  404c88:	e8 63 cd ff ff       	callq  4019f0 <Except_raise>
  404c8d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404c94:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
  404c9a:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404ca1:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)
  404ca8:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404caf:	48 8d 55 10          	lea    0x10(%rbp),%rdx
  404cb3:	48 89 50 08          	mov    %rdx,0x8(%rax)
  404cb7:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
  404cbe:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
  404cc5:	48 89 50 10          	mov    %rdx,0x10(%rax)
  404cc9:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
  404cd0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
  404cd7:	48 89 d6             	mov    %rdx,%rsi
  404cda:	48 89 c7             	mov    %rax,%rdi
  404cdd:	e8 10 00 00 00       	callq  404cf2 <Fmt_vstring>
  404ce2:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  404ce9:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
  404cf0:	c9                   	leaveq 
  404cf1:	c3                   	retq   

0000000000404cf2 <Fmt_vstring>:
  404cf2:	55                   	push   %rbp
  404cf3:	48 89 e5             	mov    %rsp,%rbp
  404cf6:	53                   	push   %rbx
  404cf7:	48 83 ec 38          	sub    $0x38,%rsp
  404cfb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  404cff:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  404d03:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  404d08:	75 1b                	jne    404d25 <Fmt_vstring+0x33>
  404d0a:	ba fc 00 00 00       	mov    $0xfc,%edx
  404d0f:	48 8d 35 f2 0d 00 00 	lea    0xdf2(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404d16:	48 8d 05 9b 20 20 00 	lea    0x20209b(%rip),%rax        # 606db8 <Assert_Failed>
  404d1d:	48 89 c7             	mov    %rax,%rdi
  404d20:	e8 cb cc ff ff       	callq  4019f0 <Except_raise>
  404d25:	c7 45 e0 00 01 00 00 	movl   $0x100,-0x20(%rbp)
  404d2c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  404d2f:	48 98                	cltq   
  404d31:	ba fe 00 00 00       	mov    $0xfe,%edx
  404d36:	48 8d 35 cb 0d 00 00 	lea    0xdcb(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404d3d:	48 89 c7             	mov    %rax,%rdi
  404d40:	e8 eb cd ff ff       	callq  401b30 <Mem_alloc>
  404d45:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  404d49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404d4d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  404d51:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
  404d55:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  404d59:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  404d5d:	48 89 c6             	mov    %rax,%rsi
  404d60:	48 8d 3d 12 f8 ff ff 	lea    -0x7ee(%rip),%rdi        # 404579 <append>
  404d67:	e8 4c 00 00 00       	callq  404db8 <Fmt_vfmt>
  404d6c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
  404d70:	48 89 c6             	mov    %rax,%rsi
  404d73:	bf 00 00 00 00       	mov    $0x0,%edi
  404d78:	e8 fc f7 ff ff       	callq  404579 <append>
  404d7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  404d81:	48 89 c2             	mov    %rax,%rdx
  404d84:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404d88:	48 89 d3             	mov    %rdx,%rbx
  404d8b:	48 29 c3             	sub    %rax,%rbx
  404d8e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404d92:	b9 01 01 00 00       	mov    $0x101,%ecx
  404d97:	48 8d 15 6a 0d 00 00 	lea    0xd6a(%rip),%rdx        # 405b08 <_IO_stdin_used+0x420>
  404d9e:	48 89 de             	mov    %rbx,%rsi
  404da1:	48 89 c7             	mov    %rax,%rdi
  404da4:	e8 57 cf ff ff       	callq  401d00 <Mem_resize>
  404da9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  404dad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  404db1:	48 83 c4 38          	add    $0x38,%rsp
  404db5:	5b                   	pop    %rbx
  404db6:	c9                   	leaveq 
  404db7:	c3                   	retq   

0000000000404db8 <Fmt_vfmt>:
  404db8:	55                   	push   %rbp
  404db9:	48 89 e5             	mov    %rsp,%rbp
  404dbc:	53                   	push   %rbx
  404dbd:	48 81 ec 58 01 00 00 	sub    $0x158,%rsp
  404dc4:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  404dcb:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  404dd2:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
  404dd9:	48 89 8d b0 fe ff ff 	mov    %rcx,-0x150(%rbp)
  404de0:	48 83 bd c8 fe ff ff 	cmpq   $0x0,-0x138(%rbp)
  404de7:	00 
  404de8:	75 1b                	jne    404e05 <Fmt_vfmt+0x4d>
  404dea:	ba 05 01 00 00       	mov    $0x105,%edx
  404def:	48 8d 35 12 0d 00 00 	lea    0xd12(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404df6:	48 8d 05 bb 1f 20 00 	lea    0x201fbb(%rip),%rax        # 606db8 <Assert_Failed>
  404dfd:	48 89 c7             	mov    %rax,%rdi
  404e00:	e8 eb cb ff ff       	callq  4019f0 <Except_raise>
  404e05:	48 83 bd b8 fe ff ff 	cmpq   $0x0,-0x148(%rbp)
  404e0c:	00 
  404e0d:	0f 85 bf 04 00 00    	jne    4052d2 <Fmt_vfmt+0x51a>
  404e13:	ba 06 01 00 00       	mov    $0x106,%edx
  404e18:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404e1f:	48 8d 05 92 1f 20 00 	lea    0x201f92(%rip),%rax        # 606db8 <Assert_Failed>
  404e26:	48 89 c7             	mov    %rax,%rdi
  404e29:	e8 c2 cb ff ff       	callq  4019f0 <Except_raise>
  404e2e:	e9 a0 04 00 00       	jmpq   4052d3 <Fmt_vfmt+0x51b>
  404e33:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404e3a:	0f b6 00             	movzbl (%rax),%eax
  404e3d:	3c 25                	cmp    $0x25,%al
  404e3f:	75 16                	jne    404e57 <Fmt_vfmt+0x9f>
  404e41:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404e48:	01 
  404e49:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404e50:	0f b6 00             	movzbl (%rax),%eax
  404e53:	3c 25                	cmp    $0x25,%al
  404e55:	75 2f                	jne    404e86 <Fmt_vfmt+0xce>
  404e57:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404e5e:	0f b6 00             	movzbl (%rax),%eax
  404e61:	0f b6 c0             	movzbl %al,%eax
  404e64:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404e6b:	01 
  404e6c:	48 8b 95 c0 fe ff ff 	mov    -0x140(%rbp),%rdx
  404e73:	48 8b 8d c8 fe ff ff 	mov    -0x138(%rbp),%rcx
  404e7a:	48 89 d6             	mov    %rdx,%rsi
  404e7d:	89 c7                	mov    %eax,%edi
  404e7f:	ff d1                	callq  *%rcx
  404e81:	e9 4d 04 00 00       	jmpq   4052d3 <Fmt_vfmt+0x51b>
  404e86:	c7 45 ec 00 00 00 80 	movl   $0x80000000,-0x14(%rbp)
  404e8d:	c7 45 e8 00 00 00 80 	movl   $0x80000000,-0x18(%rbp)
  404e94:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
  404e9b:	ba 00 01 00 00       	mov    $0x100,%edx
  404ea0:	be 00 00 00 00       	mov    $0x0,%esi
  404ea5:	48 89 c7             	mov    %rax,%rdi
  404ea8:	e8 c3 bc ff ff       	callq  400b70 <memset@plt>
  404ead:	48 8d 05 6c 2a 20 00 	lea    0x202a6c(%rip),%rax        # 607920 <Fmt_flags>
  404eb4:	48 8b 00             	mov    (%rax),%rax
  404eb7:	48 85 c0             	test   %rax,%rax
  404eba:	0f 84 8f 00 00 00    	je     404f4f <Fmt_vfmt+0x197>
  404ec0:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404ec7:	0f b6 00             	movzbl (%rax),%eax
  404eca:	88 45 e7             	mov    %al,-0x19(%rbp)
  404ecd:	eb 5d                	jmp    404f2c <Fmt_vfmt+0x174>
  404ecf:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  404ed3:	48 98                	cltq   
  404ed5:	0f b6 84 05 d0 fe ff 	movzbl -0x130(%rbp,%rax,1),%eax
  404edc:	ff 
  404edd:	3c ff                	cmp    $0xff,%al
  404edf:	75 1b                	jne    404efc <Fmt_vfmt+0x144>
  404ee1:	ba 12 01 00 00       	mov    $0x112,%edx
  404ee6:	48 8d 35 1b 0c 00 00 	lea    0xc1b(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404eed:	48 8d 05 c4 1e 20 00 	lea    0x201ec4(%rip),%rax        # 606db8 <Assert_Failed>
  404ef4:	48 89 c7             	mov    %rax,%rdi
  404ef7:	e8 f4 ca ff ff       	callq  4019f0 <Except_raise>
  404efc:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax
  404f00:	48 63 d0             	movslq %eax,%rdx
  404f03:	0f b6 94 15 d0 fe ff 	movzbl -0x130(%rbp,%rdx,1),%edx
  404f0a:	ff 
  404f0b:	83 c2 01             	add    $0x1,%edx
  404f0e:	48 98                	cltq   
  404f10:	88 94 05 d0 fe ff ff 	mov    %dl,-0x130(%rbp,%rax,1)
  404f17:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  404f1e:	01 
  404f1f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404f26:	0f b6 00             	movzbl (%rax),%eax
  404f29:	88 45 e7             	mov    %al,-0x19(%rbp)
  404f2c:	80 7d e7 00          	cmpb   $0x0,-0x19(%rbp)
  404f30:	74 1d                	je     404f4f <Fmt_vfmt+0x197>
  404f32:	0f b6 55 e7          	movzbl -0x19(%rbp),%edx
  404f36:	48 8d 05 e3 29 20 00 	lea    0x2029e3(%rip),%rax        # 607920 <Fmt_flags>
  404f3d:	48 8b 00             	mov    (%rax),%rax
  404f40:	89 d6                	mov    %edx,%esi
  404f42:	48 89 c7             	mov    %rax,%rdi
  404f45:	e8 f6 bb ff ff       	callq  400b40 <strchr@plt>
  404f4a:	48 85 c0             	test   %rax,%rax
  404f4d:	75 80                	jne    404ecf <Fmt_vfmt+0x117>
  404f4f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404f56:	0f b6 00             	movzbl (%rax),%eax
  404f59:	3c 2a                	cmp    $0x2a,%al
  404f5b:	74 30                	je     404f8d <Fmt_vfmt+0x1d5>
  404f5d:	e8 de bc ff ff       	callq  400c40 <__ctype_b_loc@plt>
  404f62:	48 8b 10             	mov    (%rax),%rdx
  404f65:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404f6c:	0f b6 00             	movzbl (%rax),%eax
  404f6f:	48 0f be c0          	movsbq %al,%rax
  404f73:	48 01 c0             	add    %rax,%rax
  404f76:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  404f7a:	0f b7 00             	movzwl (%rax),%eax
  404f7d:	0f b7 c0             	movzwl %ax,%eax
  404f80:	25 00 08 00 00       	and    $0x800,%eax
  404f85:	85 c0                	test   %eax,%eax
  404f87:	0f 84 26 01 00 00    	je     4050b3 <Fmt_vfmt+0x2fb>
  404f8d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  404f94:	0f b6 00             	movzbl (%rax),%eax
  404f97:	3c 2a                	cmp    $0x2a,%al
  404f99:	75 6b                	jne    405006 <Fmt_vfmt+0x24e>
  404f9b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  404fa2:	8b 10                	mov    (%rax),%edx
  404fa4:	83 fa 30             	cmp    $0x30,%edx
  404fa7:	73 15                	jae    404fbe <Fmt_vfmt+0x206>
  404fa9:	48 8b 48 10          	mov    0x10(%rax),%rcx
  404fad:	8b 10                	mov    (%rax),%edx
  404faf:	89 d2                	mov    %edx,%edx
  404fb1:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  404fb5:	8b 08                	mov    (%rax),%ecx
  404fb7:	83 c1 08             	add    $0x8,%ecx
  404fba:	89 08                	mov    %ecx,(%rax)
  404fbc:	eb 0f                	jmp    404fcd <Fmt_vfmt+0x215>
  404fbe:	48 8b 48 08          	mov    0x8(%rax),%rcx
  404fc2:	48 89 ca             	mov    %rcx,%rdx
  404fc5:	48 83 c1 08          	add    $0x8,%rcx
  404fc9:	48 89 48 08          	mov    %rcx,0x8(%rax)
  404fcd:	48 89 d0             	mov    %rdx,%rax
  404fd0:	8b 00                	mov    (%rax),%eax
  404fd2:	89 45 e0             	mov    %eax,-0x20(%rbp)
  404fd5:	81 7d e0 00 00 00 80 	cmpl   $0x80000000,-0x20(%rbp)
  404fdc:	75 1b                	jne    404ff9 <Fmt_vfmt+0x241>
  404fde:	ba 1a 01 00 00       	mov    $0x11a,%edx
  404fe3:	48 8d 35 1e 0b 00 00 	lea    0xb1e(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  404fea:	48 8d 05 c7 1d 20 00 	lea    0x201dc7(%rip),%rax        # 606db8 <Assert_Failed>
  404ff1:	48 89 c7             	mov    %rax,%rdi
  404ff4:	e8 f7 c9 ff ff       	callq  4019f0 <Except_raise>
  404ff9:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  405000:	01 
  405001:	e9 a7 00 00 00       	jmpq   4050ad <Fmt_vfmt+0x2f5>
  405006:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  40500d:	eb 6e                	jmp    40507d <Fmt_vfmt+0x2c5>
  40500f:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  405016:	0f b6 00             	movzbl (%rax),%eax
  405019:	0f be c0             	movsbl %al,%eax
  40501c:	83 e8 30             	sub    $0x30,%eax
  40501f:	89 45 d8             	mov    %eax,-0x28(%rbp)
  405022:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  405027:	89 c1                	mov    %eax,%ecx
  405029:	2b 4d d8             	sub    -0x28(%rbp),%ecx
  40502c:	ba 67 66 66 66       	mov    $0x66666667,%edx
  405031:	89 c8                	mov    %ecx,%eax
  405033:	f7 ea                	imul   %edx
  405035:	c1 fa 02             	sar    $0x2,%edx
  405038:	89 c8                	mov    %ecx,%eax
  40503a:	c1 f8 1f             	sar    $0x1f,%eax
  40503d:	89 d1                	mov    %edx,%ecx
  40503f:	29 c1                	sub    %eax,%ecx
  405041:	89 c8                	mov    %ecx,%eax
  405043:	3b 45 e0             	cmp    -0x20(%rbp),%eax
  405046:	7d 1b                	jge    405063 <Fmt_vfmt+0x2ab>
  405048:	ba 1f 01 00 00       	mov    $0x11f,%edx
  40504d:	48 8d 35 b4 0a 00 00 	lea    0xab4(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  405054:	48 8d 05 5d 1d 20 00 	lea    0x201d5d(%rip),%rax        # 606db8 <Assert_Failed>
  40505b:	48 89 c7             	mov    %rax,%rdi
  40505e:	e8 8d c9 ff ff       	callq  4019f0 <Except_raise>
  405063:	8b 55 e0             	mov    -0x20(%rbp),%edx
  405066:	89 d0                	mov    %edx,%eax
  405068:	c1 e0 02             	shl    $0x2,%eax
  40506b:	01 d0                	add    %edx,%eax
  40506d:	01 c0                	add    %eax,%eax
  40506f:	03 45 d8             	add    -0x28(%rbp),%eax
  405072:	89 45 e0             	mov    %eax,-0x20(%rbp)
  405075:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40507c:	01 
  40507d:	e8 be bb ff ff       	callq  400c40 <__ctype_b_loc@plt>
  405082:	48 8b 10             	mov    (%rax),%rdx
  405085:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40508c:	0f b6 00             	movzbl (%rax),%eax
  40508f:	48 0f be c0          	movsbq %al,%rax
  405093:	48 01 c0             	add    %rax,%rax
  405096:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  40509a:	0f b7 00             	movzwl (%rax),%eax
  40509d:	0f b7 c0             	movzwl %ax,%eax
  4050a0:	25 00 08 00 00       	and    $0x800,%eax
  4050a5:	85 c0                	test   %eax,%eax
  4050a7:	0f 85 62 ff ff ff    	jne    40500f <Fmt_vfmt+0x257>
  4050ad:	8b 45 e0             	mov    -0x20(%rbp),%eax
  4050b0:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4050b3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4050ba:	0f b6 00             	movzbl (%rax),%eax
  4050bd:	3c 2e                	cmp    $0x2e,%al
  4050bf:	0f 85 6c 01 00 00    	jne    405231 <Fmt_vfmt+0x479>
  4050c5:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4050cc:	01 
  4050cd:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4050d4:	0f b6 00             	movzbl (%rax),%eax
  4050d7:	3c 2a                	cmp    $0x2a,%al
  4050d9:	74 30                	je     40510b <Fmt_vfmt+0x353>
  4050db:	e8 60 bb ff ff       	callq  400c40 <__ctype_b_loc@plt>
  4050e0:	48 8b 10             	mov    (%rax),%rdx
  4050e3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4050ea:	0f b6 00             	movzbl (%rax),%eax
  4050ed:	48 0f be c0          	movsbq %al,%rax
  4050f1:	48 01 c0             	add    %rax,%rax
  4050f4:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  4050f8:	0f b7 00             	movzwl (%rax),%eax
  4050fb:	0f b7 c0             	movzwl %ax,%eax
  4050fe:	25 00 08 00 00       	and    $0x800,%eax
  405103:	85 c0                	test   %eax,%eax
  405105:	0f 84 26 01 00 00    	je     405231 <Fmt_vfmt+0x479>
  40510b:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  405112:	0f b6 00             	movzbl (%rax),%eax
  405115:	3c 2a                	cmp    $0x2a,%al
  405117:	75 6b                	jne    405184 <Fmt_vfmt+0x3cc>
  405119:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
  405120:	8b 10                	mov    (%rax),%edx
  405122:	83 fa 30             	cmp    $0x30,%edx
  405125:	73 15                	jae    40513c <Fmt_vfmt+0x384>
  405127:	48 8b 48 10          	mov    0x10(%rax),%rcx
  40512b:	8b 10                	mov    (%rax),%edx
  40512d:	89 d2                	mov    %edx,%edx
  40512f:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx
  405133:	8b 08                	mov    (%rax),%ecx
  405135:	83 c1 08             	add    $0x8,%ecx
  405138:	89 08                	mov    %ecx,(%rax)
  40513a:	eb 0f                	jmp    40514b <Fmt_vfmt+0x393>
  40513c:	48 8b 48 08          	mov    0x8(%rax),%rcx
  405140:	48 89 ca             	mov    %rcx,%rdx
  405143:	48 83 c1 08          	add    $0x8,%rcx
  405147:	48 89 48 08          	mov    %rcx,0x8(%rax)
  40514b:	48 89 d0             	mov    %rdx,%rax
  40514e:	8b 00                	mov    (%rax),%eax
  405150:	89 45 dc             	mov    %eax,-0x24(%rbp)
  405153:	81 7d dc 00 00 00 80 	cmpl   $0x80000000,-0x24(%rbp)
  40515a:	75 1b                	jne    405177 <Fmt_vfmt+0x3bf>
  40515c:	ba 28 01 00 00       	mov    $0x128,%edx
  405161:	48 8d 35 a0 09 00 00 	lea    0x9a0(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  405168:	48 8d 05 49 1c 20 00 	lea    0x201c49(%rip),%rax        # 606db8 <Assert_Failed>
  40516f:	48 89 c7             	mov    %rax,%rdi
  405172:	e8 79 c8 ff ff       	callq  4019f0 <Except_raise>
  405177:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  40517e:	01 
  40517f:	e9 a7 00 00 00       	jmpq   40522b <Fmt_vfmt+0x473>
  405184:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  40518b:	eb 6e                	jmp    4051fb <Fmt_vfmt+0x443>
  40518d:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  405194:	0f b6 00             	movzbl (%rax),%eax
  405197:	0f be c0             	movsbl %al,%eax
  40519a:	83 e8 30             	sub    $0x30,%eax
  40519d:	89 45 d4             	mov    %eax,-0x2c(%rbp)
  4051a0:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
  4051a5:	89 c1                	mov    %eax,%ecx
  4051a7:	2b 4d d4             	sub    -0x2c(%rbp),%ecx
  4051aa:	ba 67 66 66 66       	mov    $0x66666667,%edx
  4051af:	89 c8                	mov    %ecx,%eax
  4051b1:	f7 ea                	imul   %edx
  4051b3:	c1 fa 02             	sar    $0x2,%edx
  4051b6:	89 c8                	mov    %ecx,%eax
  4051b8:	c1 f8 1f             	sar    $0x1f,%eax
  4051bb:	89 d1                	mov    %edx,%ecx
  4051bd:	29 c1                	sub    %eax,%ecx
  4051bf:	89 c8                	mov    %ecx,%eax
  4051c1:	3b 45 dc             	cmp    -0x24(%rbp),%eax
  4051c4:	7d 1b                	jge    4051e1 <Fmt_vfmt+0x429>
  4051c6:	ba 2d 01 00 00       	mov    $0x12d,%edx
  4051cb:	48 8d 35 36 09 00 00 	lea    0x936(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  4051d2:	48 8d 05 df 1b 20 00 	lea    0x201bdf(%rip),%rax        # 606db8 <Assert_Failed>
  4051d9:	48 89 c7             	mov    %rax,%rdi
  4051dc:	e8 0f c8 ff ff       	callq  4019f0 <Except_raise>
  4051e1:	8b 55 dc             	mov    -0x24(%rbp),%edx
  4051e4:	89 d0                	mov    %edx,%eax
  4051e6:	c1 e0 02             	shl    $0x2,%eax
  4051e9:	01 d0                	add    %edx,%eax
  4051eb:	01 c0                	add    %eax,%eax
  4051ed:	03 45 d4             	add    -0x2c(%rbp),%eax
  4051f0:	89 45 dc             	mov    %eax,-0x24(%rbp)
  4051f3:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  4051fa:	01 
  4051fb:	e8 40 ba ff ff       	callq  400c40 <__ctype_b_loc@plt>
  405200:	48 8b 10             	mov    (%rax),%rdx
  405203:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  40520a:	0f b6 00             	movzbl (%rax),%eax
  40520d:	48 0f be c0          	movsbq %al,%rax
  405211:	48 01 c0             	add    %rax,%rax
  405214:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax
  405218:	0f b7 00             	movzwl (%rax),%eax
  40521b:	0f b7 c0             	movzwl %ax,%eax
  40521e:	25 00 08 00 00       	and    $0x800,%eax
  405223:	85 c0                	test   %eax,%eax
  405225:	0f 85 62 ff ff ff    	jne    40518d <Fmt_vfmt+0x3d5>
  40522b:	8b 45 dc             	mov    -0x24(%rbp),%eax
  40522e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  405231:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  405238:	0f b6 00             	movzbl (%rax),%eax
  40523b:	88 45 d3             	mov    %al,-0x2d(%rbp)
  40523e:	48 83 85 b8 fe ff ff 	addq   $0x1,-0x148(%rbp)
  405245:	01 
  405246:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  40524a:	48 98                	cltq   
  40524c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  405253:	00 
  405254:	48 8d 05 c5 1e 20 00 	lea    0x201ec5(%rip),%rax        # 607120 <cvt>
  40525b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  40525f:	48 85 c0             	test   %rax,%rax
  405262:	75 1b                	jne    40527f <Fmt_vfmt+0x4c7>
  405264:	ba 33 01 00 00       	mov    $0x133,%edx
  405269:	48 8d 35 98 08 00 00 	lea    0x898(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  405270:	48 8d 05 41 1b 20 00 	lea    0x201b41(%rip),%rax        # 606db8 <Assert_Failed>
  405277:	48 89 c7             	mov    %rax,%rdi
  40527a:	e8 71 c7 ff ff       	callq  4019f0 <Except_raise>
  40527f:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  405283:	48 98                	cltq   
  405285:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  40528c:	00 
  40528d:	48 8d 05 8c 1e 20 00 	lea    0x201e8c(%rip),%rax        # 607120 <cvt>
  405294:	4c 8b 14 02          	mov    (%rdx,%rax,1),%r10
  405298:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax
  40529c:	44 8b 45 ec          	mov    -0x14(%rbp),%r8d
  4052a0:	48 8d bd d0 fe ff ff 	lea    -0x130(%rbp),%rdi
  4052a7:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
  4052ae:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
  4052b5:	48 8b 9d b0 fe ff ff 	mov    -0x150(%rbp),%rbx
  4052bc:	8b 75 e8             	mov    -0x18(%rbp),%esi
  4052bf:	89 34 24             	mov    %esi,(%rsp)
  4052c2:	45 89 c1             	mov    %r8d,%r9d
  4052c5:	49 89 f8             	mov    %rdi,%r8
  4052c8:	48 89 de             	mov    %rbx,%rsi
  4052cb:	89 c7                	mov    %eax,%edi
  4052cd:	41 ff d2             	callq  *%r10
  4052d0:	eb 01                	jmp    4052d3 <Fmt_vfmt+0x51b>
  4052d2:	90                   	nop
  4052d3:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
  4052da:	0f b6 00             	movzbl (%rax),%eax
  4052dd:	84 c0                	test   %al,%al
  4052df:	0f 85 4e fb ff ff    	jne    404e33 <Fmt_vfmt+0x7b>
  4052e5:	48 81 c4 58 01 00 00 	add    $0x158,%rsp
  4052ec:	5b                   	pop    %rbx
  4052ed:	c9                   	leaveq 
  4052ee:	c3                   	retq   

00000000004052ef <Fmt_register>:
  4052ef:	55                   	push   %rbp
  4052f0:	48 89 e5             	mov    %rsp,%rbp
  4052f3:	48 83 ec 20          	sub    $0x20,%rsp
  4052f7:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4052fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4052fe:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  405302:	7e 09                	jle    40530d <Fmt_register+0x1e>
  405304:	81 7d ec ff 00 00 00 	cmpl   $0xff,-0x14(%rbp)
  40530b:	7e 1d                	jle    40532a <Fmt_register+0x3b>
  40530d:	ba 3a 01 00 00       	mov    $0x13a,%edx
  405312:	48 8d 35 ef 07 00 00 	lea    0x7ef(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  405319:	48 8d 05 98 1a 20 00 	lea    0x201a98(%rip),%rax        # 606db8 <Assert_Failed>
  405320:	48 89 c7             	mov    %rax,%rdi
  405323:	e8 c8 c6 ff ff       	callq  4019f0 <Except_raise>
  405328:	eb 01                	jmp    40532b <Fmt_register+0x3c>
  40532a:	90                   	nop
  40532b:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40532e:	48 98                	cltq   
  405330:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
  405337:	00 
  405338:	48 8d 05 e1 1d 20 00 	lea    0x201de1(%rip),%rax        # 607120 <cvt>
  40533f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
  405343:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  405347:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40534a:	48 98                	cltq   
  40534c:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
  405353:	00 
  405354:	48 8d 05 c5 1d 20 00 	lea    0x201dc5(%rip),%rax        # 607120 <cvt>
  40535b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40535f:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
  405363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  405367:	c9                   	leaveq 
  405368:	c3                   	retq   

0000000000405369 <Fmt_putd>:
  405369:	55                   	push   %rbp
  40536a:	48 89 e5             	mov    %rsp,%rbp
  40536d:	48 83 ec 50          	sub    $0x50,%rsp
  405371:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  405375:	89 75 d4             	mov    %esi,-0x2c(%rbp)
  405378:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  40537c:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  405380:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
  405384:	44 89 4d b4          	mov    %r9d,-0x4c(%rbp)
  405388:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40538d:	75 1b                	jne    4053aa <Fmt_putd+0x41>
  40538f:	ba 43 01 00 00       	mov    $0x143,%edx
  405394:	48 8d 35 6d 07 00 00 	lea    0x76d(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  40539b:	48 8d 05 16 1a 20 00 	lea    0x201a16(%rip),%rax        # 606db8 <Assert_Failed>
  4053a2:	48 89 c7             	mov    %rax,%rdi
  4053a5:	e8 46 c6 ff ff       	callq  4019f0 <Except_raise>
  4053aa:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  4053ae:	79 1b                	jns    4053cb <Fmt_putd+0x62>
  4053b0:	ba 44 01 00 00       	mov    $0x144,%edx
  4053b5:	48 8d 35 4c 07 00 00 	lea    0x74c(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  4053bc:	48 8d 05 f5 19 20 00 	lea    0x2019f5(%rip),%rax        # 606db8 <Assert_Failed>
  4053c3:	48 89 c7             	mov    %rax,%rdi
  4053c6:	e8 25 c6 ff ff       	callq  4019f0 <Except_raise>
  4053cb:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
  4053d0:	75 1b                	jne    4053ed <Fmt_putd+0x84>
  4053d2:	ba 45 01 00 00       	mov    $0x145,%edx
  4053d7:	48 8d 35 2a 07 00 00 	lea    0x72a(%rip),%rsi        # 405b08 <_IO_stdin_used+0x420>
  4053de:	48 8d 05 d3 19 20 00 	lea    0x2019d3(%rip),%rax        # 606db8 <Assert_Failed>
  4053e5:	48 89 c7             	mov    %rax,%rdi
  4053e8:	e8 03 c6 ff ff       	callq  4019f0 <Except_raise>
  4053ed:	81 7d b4 00 00 00 80 	cmpl   $0x80000000,-0x4c(%rbp)
  4053f4:	75 07                	jne    4053fd <Fmt_putd+0x94>
  4053f6:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  4053fd:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
  405401:	79 0e                	jns    405411 <Fmt_putd+0xa8>
  405403:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  405407:	48 83 c0 2d          	add    $0x2d,%rax
  40540b:	c6 00 01             	movb   $0x1,(%rax)
  40540e:	f7 5d b4             	negl   -0x4c(%rbp)
  405411:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  405415:	78 0b                	js     405422 <Fmt_putd+0xb9>
  405417:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40541b:	48 83 c0 30          	add    $0x30,%rax
  40541f:	c6 00 00             	movb   $0x0,(%rax)
  405422:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
  405426:	7e 2e                	jle    405456 <Fmt_putd+0xed>
  405428:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40542c:	0f b6 00             	movzbl (%rax),%eax
  40542f:	3c 2d                	cmp    $0x2d,%al
  405431:	74 0b                	je     40543e <Fmt_putd+0xd5>
  405433:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405437:	0f b6 00             	movzbl (%rax),%eax
  40543a:	3c 2b                	cmp    $0x2b,%al
  40543c:	75 18                	jne    405456 <Fmt_putd+0xed>
  40543e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  405442:	0f b6 00             	movzbl (%rax),%eax
  405445:	0f be c0             	movsbl %al,%eax
  405448:	89 45 fc             	mov    %eax,-0x4(%rbp)
  40544b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  405450:	83 6d d4 01          	subl   $0x1,-0x2c(%rbp)
  405454:	eb 37                	jmp    40548d <Fmt_putd+0x124>
  405456:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40545a:	48 83 c0 2b          	add    $0x2b,%rax
  40545e:	0f b6 00             	movzbl (%rax),%eax
  405461:	84 c0                	test   %al,%al
  405463:	74 09                	je     40546e <Fmt_putd+0x105>
  405465:	c7 45 fc 2b 00 00 00 	movl   $0x2b,-0x4(%rbp)
  40546c:	eb 1f                	jmp    40548d <Fmt_putd+0x124>
  40546e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  405472:	48 83 c0 20          	add    $0x20,%rax
  405476:	0f b6 00             	movzbl (%rax),%eax
  405479:	84 c0                	test   %al,%al
  40547b:	74 09                	je     405486 <Fmt_putd+0x11d>
  40547d:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
  405484:	eb 07                	jmp    40548d <Fmt_putd+0x124>
  405486:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40548d:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  405491:	79 07                	jns    40549a <Fmt_putd+0x131>
  405493:	c7 45 10 01 00 00 00 	movl   $0x1,0x10(%rbp)
  40549a:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  40549d:	3b 45 10             	cmp    0x10(%rbp),%eax
  4054a0:	7d 08                	jge    4054aa <Fmt_putd+0x141>
  4054a2:	8b 45 10             	mov    0x10(%rbp),%eax
  4054a5:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4054a8:	eb 26                	jmp    4054d0 <Fmt_putd+0x167>
  4054aa:	83 7d 10 00          	cmpl   $0x0,0x10(%rbp)
  4054ae:	75 1a                	jne    4054ca <Fmt_putd+0x161>
  4054b0:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
  4054b4:	75 14                	jne    4054ca <Fmt_putd+0x161>
  4054b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4054ba:	0f b6 00             	movzbl (%rax),%eax
  4054bd:	3c 30                	cmp    $0x30,%al
  4054bf:	75 09                	jne    4054ca <Fmt_putd+0x161>
  4054c1:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4054c8:	eb 06                	jmp    4054d0 <Fmt_putd+0x167>
  4054ca:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4054cd:	89 45 f8             	mov    %eax,-0x8(%rbp)
  4054d0:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4054d4:	74 04                	je     4054da <Fmt_putd+0x171>
  4054d6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  4054da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  4054de:	48 83 c0 2d          	add    $0x2d,%rax
  4054e2:	0f b6 00             	movzbl (%rax),%eax
  4054e5:	84 c0                	test   %al,%al
  4054e7:	74 21                	je     40550a <Fmt_putd+0x1a1>
  4054e9:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  4054ed:	0f 84 bc 00 00 00    	je     4055af <Fmt_putd+0x246>
  4054f3:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4054f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4054fa:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4054fe:	48 89 d6             	mov    %rdx,%rsi
  405501:	89 c7                	mov    %eax,%edi
  405503:	ff d1                	callq  *%rcx
  405505:	e9 a5 00 00 00       	jmpq   4055af <Fmt_putd+0x246>
  40550a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  40550e:	48 83 c0 30          	add    $0x30,%rax
  405512:	0f b6 00             	movzbl (%rax),%eax
  405515:	84 c0                	test   %al,%al
  405517:	74 4c                	je     405565 <Fmt_putd+0x1fc>
  405519:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40551d:	74 12                	je     405531 <Fmt_putd+0x1c8>
  40551f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  405523:	8b 45 fc             	mov    -0x4(%rbp),%eax
  405526:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  40552a:	48 89 d6             	mov    %rdx,%rsi
  40552d:	89 c7                	mov    %eax,%edi
  40552f:	ff d1                	callq  *%rcx
  405531:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405534:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  405537:	89 d1                	mov    %edx,%ecx
  405539:	29 c1                	sub    %eax,%ecx
  40553b:	89 c8                	mov    %ecx,%eax
  40553d:	89 45 f4             	mov    %eax,-0xc(%rbp)
  405540:	eb 12                	jmp    405554 <Fmt_putd+0x1eb>
  405542:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  405546:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40554a:	48 89 c6             	mov    %rax,%rsi
  40554d:	bf 30 00 00 00       	mov    $0x30,%edi
  405552:	ff d2                	callq  *%rdx
  405554:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  405558:	0f 9f c0             	setg   %al
  40555b:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  40555f:	84 c0                	test   %al,%al
  405561:	75 df                	jne    405542 <Fmt_putd+0x1d9>
  405563:	eb 4a                	jmp    4055af <Fmt_putd+0x246>
  405565:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405568:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  40556b:	89 d1                	mov    %edx,%ecx
  40556d:	29 c1                	sub    %eax,%ecx
  40556f:	89 c8                	mov    %ecx,%eax
  405571:	89 45 f0             	mov    %eax,-0x10(%rbp)
  405574:	eb 12                	jmp    405588 <Fmt_putd+0x21f>
  405576:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  40557a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40557e:	48 89 c6             	mov    %rax,%rsi
  405581:	bf 20 00 00 00       	mov    $0x20,%edi
  405586:	ff d2                	callq  *%rdx
  405588:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
  40558c:	0f 9f c0             	setg   %al
  40558f:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
  405593:	84 c0                	test   %al,%al
  405595:	75 df                	jne    405576 <Fmt_putd+0x20d>
  405597:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  40559b:	74 12                	je     4055af <Fmt_putd+0x246>
  40559d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4055a1:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4055a4:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  4055a8:	48 89 d6             	mov    %rdx,%rsi
  4055ab:	89 c7                	mov    %eax,%edi
  4055ad:	ff d1                	callq  *%rcx
  4055af:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  4055b2:	8b 55 10             	mov    0x10(%rbp),%edx
  4055b5:	89 d1                	mov    %edx,%ecx
  4055b7:	29 c1                	sub    %eax,%ecx
  4055b9:	89 c8                	mov    %ecx,%eax
  4055bb:	89 45 ec             	mov    %eax,-0x14(%rbp)
  4055be:	eb 12                	jmp    4055d2 <Fmt_putd+0x269>
  4055c0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4055c4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4055c8:	48 89 c6             	mov    %rax,%rsi
  4055cb:	bf 30 00 00 00       	mov    $0x30,%edi
  4055d0:	ff d2                	callq  *%rdx
  4055d2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4055d6:	0f 9f c0             	setg   %al
  4055d9:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)
  4055dd:	84 c0                	test   %al,%al
  4055df:	75 df                	jne    4055c0 <Fmt_putd+0x257>
  4055e1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  4055e8:	eb 22                	jmp    40560c <Fmt_putd+0x2a3>
  4055ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4055ee:	0f b6 00             	movzbl (%rax),%eax
  4055f1:	0f b6 c0             	movzbl %al,%eax
  4055f4:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
  4055f9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4055fd:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
  405601:	48 89 d6             	mov    %rdx,%rsi
  405604:	89 c7                	mov    %eax,%edi
  405606:	ff d1                	callq  *%rcx
  405608:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
  40560c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40560f:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
  405612:	7c d6                	jl     4055ea <Fmt_putd+0x281>
  405614:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
  405618:	48 83 c0 2d          	add    $0x2d,%rax
  40561c:	0f b6 00             	movzbl (%rax),%eax
  40561f:	84 c0                	test   %al,%al
  405621:	74 32                	je     405655 <Fmt_putd+0x2ec>
  405623:	8b 45 f8             	mov    -0x8(%rbp),%eax
  405626:	8b 55 b4             	mov    -0x4c(%rbp),%edx
  405629:	89 d1                	mov    %edx,%ecx
  40562b:	29 c1                	sub    %eax,%ecx
  40562d:	89 c8                	mov    %ecx,%eax
  40562f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  405632:	eb 12                	jmp    405646 <Fmt_putd+0x2dd>
  405634:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  405638:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  40563c:	48 89 c6             	mov    %rax,%rsi
  40563f:	bf 20 00 00 00       	mov    $0x20,%edi
  405644:	ff d2                	callq  *%rdx
  405646:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
  40564a:	0f 9f c0             	setg   %al
  40564d:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
  405651:	84 c0                	test   %al,%al
  405653:	75 df                	jne    405634 <Fmt_putd+0x2cb>
  405655:	c9                   	leaveq 
  405656:	c3                   	retq   
  405657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40565e:	00 00 

0000000000405660 <__libc_csu_init>:
  405660:	f3 0f 1e fa          	endbr64 
  405664:	41 57                	push   %r15
  405666:	49 89 d7             	mov    %rdx,%r15
  405669:	41 56                	push   %r14
  40566b:	49 89 f6             	mov    %rsi,%r14
  40566e:	41 55                	push   %r13
  405670:	41 89 fd             	mov    %edi,%r13d
  405673:	41 54                	push   %r12
  405675:	4c 8d 25 2c 17 20 00 	lea    0x20172c(%rip),%r12        # 606da8 <__frame_dummy_init_array_entry>
  40567c:	55                   	push   %rbp
  40567d:	48 8d 2d 2c 17 20 00 	lea    0x20172c(%rip),%rbp        # 606db0 <__init_array_end>
  405684:	53                   	push   %rbx
  405685:	4c 29 e5             	sub    %r12,%rbp
  405688:	48 83 ec 08          	sub    $0x8,%rsp
  40568c:	e8 3f b4 ff ff       	callq  400ad0 <_init>
  405691:	48 c1 fd 03          	sar    $0x3,%rbp
  405695:	74 1f                	je     4056b6 <__libc_csu_init+0x56>
  405697:	31 db                	xor    %ebx,%ebx
  405699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  4056a0:	4c 89 fa             	mov    %r15,%rdx
  4056a3:	4c 89 f6             	mov    %r14,%rsi
  4056a6:	44 89 ef             	mov    %r13d,%edi
  4056a9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4056ad:	48 83 c3 01          	add    $0x1,%rbx
  4056b1:	48 39 dd             	cmp    %rbx,%rbp
  4056b4:	75 ea                	jne    4056a0 <__libc_csu_init+0x40>
  4056b6:	48 83 c4 08          	add    $0x8,%rsp
  4056ba:	5b                   	pop    %rbx
  4056bb:	5d                   	pop    %rbp
  4056bc:	41 5c                	pop    %r12
  4056be:	41 5d                	pop    %r13
  4056c0:	41 5e                	pop    %r14
  4056c2:	41 5f                	pop    %r15
  4056c4:	c3                   	retq   

00000000004056c5 <.annobin___libc_csu_fini.start>:
  4056c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4056cc:	00 00 00 00 

00000000004056d0 <__libc_csu_fini>:
  4056d0:	f3 0f 1e fa          	endbr64 
  4056d4:	c3                   	retq   

Disassembly of section .fini:

00000000004056d8 <_fini>:
  4056d8:	f3 0f 1e fa          	endbr64 
  4056dc:	48 83 ec 08          	sub    $0x8,%rsp
  4056e0:	48 83 c4 08          	add    $0x8,%rsp
  4056e4:	c3                   	retq   
